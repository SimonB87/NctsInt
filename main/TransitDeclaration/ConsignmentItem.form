<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="ConsignmentItem" />
  <Caption value="Consignment item" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Horizontal" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="column1_aside" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="263px" />
          <Children>
            <Panel>
              <Name value="headingsPnl" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Label>
                  <Name value="label_mode2" />
                  <Heading value="h3" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="globals.globalUiState.userModeLabel" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
                <Label>
                  <Name value="label_mrn" />
                  <Heading value="h4" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="form.Header.TransitOperation.MRN" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-headings" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <NavigationTree identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
              <Name value="navigationTree" />
              <controller reference="~navigationTreeController" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <OnNodeActivated>
                <ActionEvent ReferencedAction="~handler_navigationTree_OnNodeActivated" />
              </OnNodeActivated>
            </NavigationTree>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
            <CssClassConditional>
              <ClassName value="{theme}-nav" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="pnlBody" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Panel>
              <Name value="ControlPnl" />
              <Orientation value="Horizontal" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="ControlPnlHolder" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="100%" />
                  <Children>
                    <Panel>
                      <Name value="panel40" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="20%" />
                      <Children>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="toTop_btn" />
                          <Caption value="{fa-arrow-circle-o-up}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_toTop_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="validate_btn" />
                          <Caption value="{fa-exclamation-circle}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_validate_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                    <Panel>
                      <Name value="panel43" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="80%" />
                      <Children>
                        <Button>
                          <Name value="acceptArrival_btn" />
                          <Caption value="Accept Arrival" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_acceptArrival_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="Model._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="incidentRegistration_btn" />
                          <Caption value="Incident Registration" />
                          <IsEnabled value="False" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="Model._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="save_btn" />
                          <Caption value="Save" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~saveConsignmentItemAndSubmitData" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.Model._isSaveButtonsVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-success" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="disabled" />
                              <Condition value="False" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="savePartially_btn" />
                          <Caption value="Save incomplete data" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="160px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_savePartially_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.Model._isSaveButtonsVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-alternate" />
                              <Condition value="False" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="cancel_btn" />
                          <Caption value="Cancel" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_cancel_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-secondary" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="disabled" />
                              <Condition value="False" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="flright" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-controls" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <Panel>
                  <Name value="ControlPnlSpace" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-space" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-nav-bar" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <Panel>
              <Name value="content_pnl" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="validationsGrp_parent" />
                  <Orientation value="Vertical" />
                  <Panel.Height value="#" />
                  <Panel.Width value="100%" />
                  <Bindings>
                    <Binding SourceProperty="IsVisible" Expression="globals.globalUiState.isValidationsVisible" />
                  </Bindings>
                  <Children>
                    <GroupBox>
                      <Name value="validationsGrp" />
                      <Caption value="Validations summary" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Content>
                        <Panel>
                          <Name value="panel41" />
                          <Orientation value="Vertical" />
                          <Children>
                            <ClientValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                              <Name value="cliValidations" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <OnItemClick>
                                <ActionEvent ReferencedAction="~handler_clientValidationSummary1_OnItemClick" />
                              </OnItemClick>
                              <Bindings>
                                <Binding SourceProperty="validationErrors" Expression="globals.Errors.clientValidationErrors" />
                                <Binding SourceProperty="validationRoot" Expression="form.Header" />
                              </Bindings>
                              <columns>
                                <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="cliPointerCol" />
                                  <columnCaption value="Pointer" />
                                  <columnRole value="pointer" />
                                  <columnWidth value="30%" />
                                  <propertyName value="Pointer" />
                                </validationSummaryColumn>
                                <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="cliMessageCol" />
                                  <columnCaption value="Message" />
                                  <columnWidth value="70%" />
                                  <propertyName value="Message" />
                                </validationSummaryColumn>
                              </columns>
                            </ClientValidationSummary>
                            <ServerValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                              <Name value="srvValidations" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <OnItemClick>
                                <ActionEvent ReferencedAction="~handler_serverValidationSummary1_OnItemClick" />
                              </OnItemClick>
                              <Bindings>
                                <Binding SourceProperty="validationErrors" Expression="globals.Errors.serverValidationErrors" />
                              </Bindings>
                              <columns>
                                <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="srvPointerCol" />
                                  <columnCaption value="Pointer" />
                                  <columnRole value="pointer" />
                                  <columnWidth value="30%" />
                                  <propertyName value="Pointer" />
                                </validationSummaryColumn>
                                <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="srvMessageCol" />
                                  <columnCaption value="Message" />
                                  <columnWidth value="70%" />
                                  <propertyName value="Reason" />
                                </validationSummaryColumn>
                              </columns>
                            </ServerValidationSummary>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Content>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-groupbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-datatable" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </GroupBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <Panel>
                  <Name value="consignmentItemPnl" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Panel>
                      <Name value="CILeftPnl" />
                      <Orientation value="Vertical" />
                      <Panel.Height value="#" />
                      <Panel.Width value="60%" />
                      <Children>
                        <GroupBox>
                          <Name value="headerGrp" />
                          <Caption value="Header" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <Panel>
                              <Name value="panel3" />
                              <Orientation value="Vertical" />
                              <Children>
                                <Panel>
                                  <Name value="panel8" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <TextBox>
                                      <Name value="textBox2" />
                                      <CaptionPosition value="Top" />
                                      <IsEnabled value="False" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.goodsItemNumber" />
                                        <Binding SourceProperty="Caption" Expression="Model.goodsItemNumber.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <TextBox>
                                      <Name value="textBox6" />
                                      <CaptionPosition value="Top" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.declarationGoodsItemNumber" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.declarationGoodsItemNumber.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.declarationGoodsItemNumber.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo1" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.DeclarationTypeItemLevel" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.declarationType" />
                                        <Binding SourceProperty="Caption" Expression="Model.declarationType.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._declarationTypeRequired" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                    <TextBox>
                                      <Name value="textBox9" />
                                      <CaptionPosition value="Top" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.ItemPriceEUR" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.ItemPriceEUR.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.ItemPriceEUR.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                                <Panel>
                                  <Name value="panel9" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo3" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.countryOfDispatch" />
                                        <Binding SourceProperty="Caption" Expression="Model.countryOfDispatch.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.countryOfDispatch.isRequired()" />
                                        <Binding SourceProperty="IsEnabled" Expression="form.Model._countryOfDispatchEnabled" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo5" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.countryOfDestination" />
                                        <Binding SourceProperty="Caption" Expression="Model.countryOfDestination.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._countryOfDestinationRequired" />
                                        <Binding SourceProperty="IsEnabled" Expression="Model._countryOfDestinationRequired" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo16" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.TransportChargesMethodOfPayment" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.TransportCharges.methodOfPayment" />
                                        <Binding SourceProperty="Caption" Expression="Model.TransportCharges.methodOfPayment.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransportCharges.hasValue()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                    <TextBox>
                                      <Name value="textBox7" />
                                      <CaptionPosition value="Top" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.referenceNumberUCR" />
                                        <Binding SourceProperty="Caption" Expression="Model.referenceNumberUCR.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._isReferenceNumberRequired" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                        <GroupBox>
                          <Name value="commodityGrp" />
                          <Caption value="Commodity" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <Panel>
                              <Name value="panel4" />
                              <Orientation value="Vertical" />
                              <Children>
                                <Panel>
                                  <Name value="panel6" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo4" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.HScode" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.CommodityCode.harmonisedSystemSubHeadingCode" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.CommodityCode.harmonisedSystemSubHeadingCode.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.CommodityCode.hasValue()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                    <TextBox>
                                      <Name value="textBox3" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.CommodityCode.combinedNomenclatureCode" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.CommodityCode.combinedNomenclatureCode.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.CommodityCode.combinedNomenclatureCode.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <TextBox>
                                      <Name value="textBox4" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.CommodityCode.NacionalCode" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.CommodityCode.NacionalCode.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.CommodityCode.NacionalCode.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo_cusCode" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="25%" />
                                      <ReferenceList reference="+GlobalApiObjects.CUSCode" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.cusCode" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.cusCode.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.cusCode.isRequired()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                                <Panel>
                                  <Name value="panel19" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <TextBox>
                                      <Name value="textBox1" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="50%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.descriptionOfGoods" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.hasValue()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.descriptionOfGoods.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <TextBox>
                                      <Name value="textBox5" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="50%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.CommodityCode.ExciseGoodsQuantity" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.CommodityCode.ExciseGoodsQuantity.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.CommodityCode.ExciseGoodsQuantity.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                                <Panel>
                                  <Name value="panel18" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <TextBox>
                                      <Name value="textBox17" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="33%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.GoodsMeasure.grossMass" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.GoodsMeasure.grossMass.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.GoodsMeasure.grossMass.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <TextBox>
                                      <Name value="textBox18" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="33%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.GoodsMeasure.netMass" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._goodsMeasureRequired" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.GoodsMeasure.netMass.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                    <TextBox>
                                      <Name value="textBox19" />
                                      <CaptionPosition value="Top" />
                                      <CaptionVAlign value="Middle" />
                                      <Panel.Height value="#" />
                                      <Panel.VerticalAlignment value="Bottom" />
                                      <Panel.Width value="33%" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.Commodity.GoodsMeasure.supplementaryUnits" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Commodity.GoodsMeasure.supplementaryUnits.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="Model.Commodity.GoodsMeasure.supplementaryUnits.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                                <Panel>
                                  <Name value="panel5" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <GroupBox>
                                      <Name value="dangerousGoodsGrp" />
                                      <Caption value="Dangerous goods" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="50%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel20" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                              <Name value="dangerousGoodsCtrl" />
                                              <AllowAdd value="True" />
                                              <AllowRemove value="True" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.Commodity.DangerousGoods" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_dangerousGoods" />
                                              </Bindings>
                                            </PagingRepeaterCtrl>
                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                              <Name value="dangerousGoodsRpt" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel7" />
                                                  <Orientation value="Horizontal" />
                                                  <Children>
                                                    <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                      <Name value="referenceLookup_UNNumber" />
                                                      <CaptionPosition value="Top" />
                                                      <DataApiObject reference="+GlobalApiObjects.UnDangerousGoodsCode" />
                                                      <DisplayMember value="_description" />
                                                      <MinChars value="3" />
                                                      <Panel.Height value="#" />
                                                      <Panel.VerticalAlignment value="Bottom" />
                                                      <Panel.Width value="100%" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="UNNumber" />
                                                        <Binding SourceProperty="Caption" Expression="UNNumber.caption()" />
                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="UNNumber.isRequired()" />
                                                      </Bindings>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-referencelookup" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </ReferenceLookup>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.Commodity.DangerousGoods" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_dangerousGoods" />
                                              </Bindings>
                                            </PagingRepeater>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                    <GroupBox>
                                      <Name value="packagingGrp" />
                                      <Caption value="Packaging" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="50%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel26" />
                                          <Orientation value="Horizontal" />
                                          <Children>
                                            <Panel>
                                              <Name value="panel211" />
                                              <Orientation value="Vertical" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                  <Name value="packagingCtrl" />
                                                  <AllowAdd value="True" />
                                                  <AllowRemove value="True" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.Packaging" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_packaging" />
                                                  </Bindings>
                                                </PagingRepeaterCtrl>
                                                <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                  <Name value="packagingRpt" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel14" />
                                                      <Orientation value="Vertical" />
                                                      <Children>
                                                        <Panel>
                                                          <Name value="panel27" />
                                                          <Orientation value="Horizontal" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo9" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="50%" />
                                                              <ReferenceList reference="+GlobalApiObjects.KindOfPackages" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="typeOfPackages" />
                                                                <Binding SourceProperty="Caption" Expression="typeOfPackages.caption()" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="typeOfPackages.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                            <TextBox>
                                                              <Name value="textBox21" />
                                                              <CaptionPosition value="Top" />
                                                              <CaptionVAlign value="Middle" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="50%" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="numberOfPackages" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="NOT form.Model._isTypePackagingInCL181" />
                                                                <Binding SourceProperty="Caption" Expression="numberOfPackages.caption()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-textbox" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </TextBox>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                        <Panel>
                                                          <Name value="panel11" />
                                                          <Orientation value="Horizontal" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <TextBox>
                                                              <Name value="textBox22" />
                                                              <CaptionPosition value="Top" />
                                                              <CaptionVAlign value="Middle" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="shippingMarks" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._isShippingMarksRequired" />
                                                                <Binding SourceProperty="Caption" Expression="shippingMarks.caption()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-textbox" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </TextBox>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.Packaging" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_packaging" />
                                                  </Bindings>
                                                </PagingRepeater>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                        <GroupBox>
                          <Name value="tradersGrp" />
                          <Caption value="Traders" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <Panel>
                              <Name value="panel10" />
                              <Orientation value="Vertical" />
                              <Children>
                                <GroupBox>
                                  <Name value="consigneeGrp" />
                                  <Caption value="Consignee" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel12" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel16" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox10" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignee.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox11" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="75%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignee.name.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.name.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel13" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox12" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.Address.streetAndNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignee.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.Address.streetAndNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox13" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.Address.postcode" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.Address.postcode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isConsigneePostcodeBased" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox14" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.Address.city" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignee.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.Address.city.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo6" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="Code" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesWithAddress" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignee.Address.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignee.Address.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignee.Address.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="additionalSupplyChainActorGrp" />
                                  <Caption value="Additional supply chain actor" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel15" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="additionalSupplyChainActorCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.AdditionalSupplyChainActor" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalSupplyChainActor" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="additionalSupplyChainActorRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel17" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <Panel>
                                                  <Name value="panel2" />
                                                  <Orientation value="Horizontal" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Children>
                                                    <ReferenceCombo>
                                                      <Name value="referenceCombo7" />
                                                      <CaptionPosition value="Top" />
                                                      <DisplayMember value="_description" />
                                                      <Panel.Height value="#" />
                                                      <Panel.VerticalAlignment value="Bottom" />
                                                      <Panel.Width value="50%" />
                                                      <ReferenceList reference="+GlobalApiObjects.AdditionalSupplyChainActorRoleCode" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="role" />
                                                        <Binding SourceProperty="Caption" Expression="role.caption()" />
                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="role.isRequired()" />
                                                      </Bindings>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-referencecombo" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </ReferenceCombo>
                                                    <TextBox>
                                                      <Name value="textBox16" />
                                                      <CaptionPosition value="Top" />
                                                      <CaptionVAlign value="Middle" />
                                                      <Panel.Height value="#" />
                                                      <Panel.VerticalAlignment value="Bottom" />
                                                      <Panel.Width value="50%" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="identificationNumber" />
                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="identificationNumber.isRequired()" />
                                                        <Binding SourceProperty="Caption" Expression="identificationNumber.caption()" />
                                                      </Bindings>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-textbox" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </TextBox>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.AdditionalSupplyChainActor" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalSupplyChainActor" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                    <Panel>
                      <Name value="CIRightPnl" />
                      <Orientation value="Vertical" />
                      <Panel.Height value="#" />
                      <Panel.Width value="40%" />
                      <Children>
                        <GroupBox>
                          <Name value="documentsGrp" />
                          <Caption value="Documents" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <Panel>
                              <Name value="panel28" />
                              <Orientation value="Vertical" />
                              <Children>
                                <Panel>
                                  <Name value="panel33" />
                                  <Orientation value="Vertical" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <GroupBox>
                                      <Name value="previousDocumentGrp" />
                                      <Caption value="Previous document" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="100%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel212" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                              <Name value="previousDocumentCtrl" />
                                              <AllowAdd value="True" />
                                              <AllowRemove value="True" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.PreviousDocument" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_previousDocument" />
                                              </Bindings>
                                            </PagingRepeaterCtrl>
                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                              <Name value="previousDocumentRpt" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel31" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <Panel>
                                                      <Name value="panel30" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <TextBox>
                                                          <Name value="textBox24" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                        <TextBox>
                                                          <Name value="textBox25" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="goodsItemNumber" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="goodsItemNumber.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="goodsItemNumber.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                        <TextBox>
                                                          <Name value="textBox26" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="numberOfPackages" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="numberOfPackages.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="numberOfPackages.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                    <Panel>
                                                      <Name value="panel222" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <ReferenceCombo>
                                                          <Name value="referenceCombo10" />
                                                          <CaptionPosition value="Top" />
                                                          <DisplayMember value="_description" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <ReferenceList reference="+GlobalApiObjects.PreviousDocumentType" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="type" />
                                                            <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencecombo" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceCombo>
                                                        <ReferenceCombo>
                                                          <Name value="referenceCombo11" />
                                                          <Caption value="Type of packages" />
                                                          <CaptionPosition value="Top" />
                                                          <DisplayMember value="_description" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <ReferenceList reference="+GlobalApiObjects.KindOfPackages" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="typeOfPackages" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="typeOfPackages.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencecombo" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceCombo>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                    <Panel>
                                                      <Name value="panel32" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <TextBox>
                                                          <Name value="textBox28" />
                                                          <Caption value="Complement of information" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="complementOfInformation" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complementOfInformation.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                        <TextBox>
                                                          <Name value="textBox27" />
                                                          <Caption value="Quantity" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="quantity" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="quantity.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                        <ReferenceCombo>
                                                          <Name value="referenceCombo12" />
                                                          <Caption value="Measurement unit and qualifier" />
                                                          <CaptionPosition value="Top" />
                                                          <DisplayMember value="_description" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="33%" />
                                                          <ReferenceList reference="+GlobalApiObjects.Unit" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="measurementUnitAndQualifier" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="measurementUnitAndQualifier.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencecombo" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceCombo>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.PreviousDocument" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_previousDocument" />
                                              </Bindings>
                                            </PagingRepeater>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                    <GroupBox>
                                      <Name value="supportingDocumentGrp" />
                                      <Caption value="Supporting document" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="100%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel23" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                              <Name value="supportingDocumentCtrl" />
                                              <AllowAdd value="True" />
                                              <AllowRemove value="True" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.model.SupportingDocument" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_supportingDocument" />
                                              </Bindings>
                                            </PagingRepeaterCtrl>
                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                              <Name value="supportingDocumentRpt" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel21" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <Panel>
                                                      <Name value="panel34" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <ReferenceCombo>
                                                          <Name value="referenceCombo13" />
                                                          <CaptionPosition value="Top" />
                                                          <DisplayMember value="_description" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <ReferenceList reference="+GlobalApiObjects.SupportingDocumentType" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="type" />
                                                            <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencecombo" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceCombo>
                                                        <TextBox>
                                                          <Name value="textBox30" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                    <Panel>
                                                      <Name value="panel35" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <TextBox>
                                                          <Name value="textBox31" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="documentLineItemNumber" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="documentLineItemNumber.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="documentLineItemNumber.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                        <TextBox>
                                                          <Name value="textBox32" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="complementOfInformation" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complementOfInformation.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="complementOfInformation.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.SupportingDocument" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_supportingDocument" />
                                              </Bindings>
                                            </PagingRepeater>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                                <Panel>
                                  <Name value="panel38" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <GroupBox>
                                      <Name value="additionalReferenceGrp" />
                                      <Caption value="Additional reference" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="49%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel24" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                              <Name value="additionalReferenceCtrl" />
                                              <AllowAdd value="True" />
                                              <AllowRemove value="True" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.AdditionalReference" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_additionalReference" />
                                              </Bindings>
                                            </PagingRepeaterCtrl>
                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                              <Name value="additionalReferenceRpt" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel29" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <Panel>
                                                      <Name value="panel36" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                          <Name value="referenceLookup_AdditionalReference" />
                                                          <CaptionPosition value="Top" />
                                                          <DataApiObject reference="+GlobalApiObjects.AdditionalReference" />
                                                          <DisplayMember value="_description" />
                                                          <MinChars value="2" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="type" />
                                                            <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencelookup" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceLookup>
                                                        <TextBox>
                                                          <Name value="textBox34" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.AdditionalReference" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_additionalReference" />
                                              </Bindings>
                                            </PagingRepeater>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                    <GroupBox>
                                      <Name value="additionalInformationGrp" />
                                      <Caption value="Additional information" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="49%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel213" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                              <Name value="additionalInformationCtrl" />
                                              <AllowAdd value="True" />
                                              <AllowRemove value="True" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.AdditionalInformation" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_additionalInformation" />
                                              </Bindings>
                                            </PagingRepeaterCtrl>
                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                              <Name value="additionalInformationRpt" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel22" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <Panel>
                                                      <Name value="panel37" />
                                                      <Orientation value="Horizontal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Children>
                                                        <ReferenceCombo>
                                                          <Name value="referenceCombo15" />
                                                          <CaptionPosition value="Top" />
                                                          <DisplayMember value="_description" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <ReferenceList reference="+GlobalApiObjects.AdditionalInformation" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="code" />
                                                            <Binding SourceProperty="Caption" Expression="code.caption()" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="code.isRequired()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-referencecombo" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </ReferenceCombo>
                                                        <TextBox>
                                                          <Name value="textBox36" />
                                                          <CaptionPosition value="Top" />
                                                          <CaptionVAlign value="Middle" />
                                                          <Panel.Height value="#" />
                                                          <Panel.VerticalAlignment value="Bottom" />
                                                          <Panel.Width value="50%" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="text" />
                                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="text.isRequired()" />
                                                            <Binding SourceProperty="Caption" Expression="text.caption()" />
                                                          </Bindings>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-textbox" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </TextBox>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="form.Model.AdditionalInformation" />
                                                <Binding SourceProperty="Index" Expression="form.modelState._index_additionalInformation" />
                                              </Bindings>
                                            </PagingRepeater>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                        <GroupBox>
                          <Name value="readOnlyGrp" />
                          <Caption value="Read only new items" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <Panel>
                              <Name value="panel25" />
                              <Orientation value="Vertical" />
                              <Children>
                                <Panel>
                                  <Name value="panel42" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <ReferenceCombo>
                                      <Name value="referenceCombo2" />
                                      <CaptionPosition value="Top" />
                                      <DisplayMember value="_description" />
                                      <IsEnabled value="False" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="100%" />
                                      <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="Model.releaseType" />
                                        <Binding SourceProperty="Caption" Expression="Model.releaseType.caption()" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.releaseType.isRequired()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-referencecombo" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </ReferenceCombo>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel-main" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="content_pnl" />
                </CssClassConditional>
              </CssClass>
            </Panel>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Complex>
          <Name value="Header" />
          <Caption value="Header" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.DeclarationHeader" />
            </Include>
          </Children>
        </Complex>
        <Complex>
          <Name value="House" />
          <Caption value="House" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.HouseConsignment" />
            </Include>
          </Children>
        </Complex>
        <Complex>
          <Name value="Model" />
          <Caption value="Model" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_Model_OnUserChange" />
          </OnUserChange>
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.ConsignmentItem" />
            </Include>
            <Computed>
              <Name value="_declarationTypeRequired" />
              <Caption value="_ declaration type required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Header.TransitOperation.declarationType.Code = "T")]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_declarationTypePresent" />
              <Caption value="_ declaration type present" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_countryOfDestinationRequired" />
              <Caption value="_ country of destination required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Header.Consignment.countryOfDestination.hasValue())]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_decisiveDate" />
              <Caption value="_ decisive date" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="DateTime" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_countryOfDispatchEnabled" />
              <Caption value="_ country of dispatch enabled" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Header.TransitOperation.declarationType.Code = "TIR") ?
	(
	isTrue(form.Header.Consignment.countryOfDispatch.hasValue()) ?
		false
		:
		(
		isTrue(form.House.countryOfDispatch.hasValue()) ?
			false : true
		)
	)
	:
	false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_goodsMeasureRequired" />
              <Caption value="_ goods measure required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.House.PreviousDocument.exists(SubString(current.referenceNumber, 17, 1) IN ["A", "B"]))]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_isConsigneePostcodeBased" />
              <Caption value="_ is consignee postcode based" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isReferenceNumberRequired" />
              <Caption value="_ is reference number required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(NOT((form.Header.Consignment.TransportDocument.count() > 0) OR (form.House.TransportDocument.count() > 0))) AND form.Header.Consignment.referenceNumberUCR.isEmpty() AND form.House.referenceNumberUCR.isEmpty()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_CombinedNonclatureCodeCantBeUsed" />
              <Caption value="_ combined nonclature code cant be used" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isTypePackagingInCL181" />
              <Caption value="_ is type packaging in CL 181" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isTypePackagingInCL182" />
              <Caption value="_ is type packaging in CL 182" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isShippingMarksRequired" />
              <Caption value="_ is shipping marks required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.Model._decisiveDate <= globals.serverConfig.TPendDate) ?
isTrue(form.Model._isTypePackagingInCL181) ? false : true
: false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_isR0909Valid" />
              <Caption value="_ is R 0909 valid" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_declarationTypeR0911" />
              <Caption value="_ declaration type R 0911" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isTPendDateGreaterThanDecisive" />
              <Caption value="_ is T pend date greater than decisive" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[globals.serverConfig.TPendDate > form.Model._decisiveDate]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isTPendDateGreaterOrEqualToDecisive" />
              <Caption value="_ is T pend date greater or equal to decisive" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[globals.serverConfig.TPendDate >= form.Model._decisiveDate]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isArrivalMode" />
              <Caption value="arrival buttons visible" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.mode = enums.declarationFormMode.arrival]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isCreateOrEditMode" />
              <Caption value="_ is create or edit mode" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit) ]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isSaveButtonsVisible" />
              <Caption value="_ is save buttons visible" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR  (form.mode = enums.declarationFormMode.edit) OR (form.mode = enums.declarationFormMode.continueFilling)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Complex>
        <Attribute>
          <Name value="GUID" />
          <Caption value="GUID" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="modelState" />
          <Caption value="Model state" />
          <Children>
            <Attribute>
              <Name value="_index_additionalSupplyChainActor" />
              <Caption value="_ index _ additional supply chain actor" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_additionalReference" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_supportingDocument" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_previousDocument" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_packaging" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_additionalInformation" />
              <Caption value="_ index _ additional information" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_dangerousGoods" />
              <Caption value="_ index _ dangerous goods" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="supportingTransitJson" />
              <Caption value="Supporting transit json" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Attribute>
          <Name value="mode" />
          <Caption value="Mode" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <MetaType reference="+MetaTypes.declarationFormMode" />
        </Attribute>
        <Attribute>
          <Name value="sequenceNumber" />
          <Caption value="Sequence number" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Integer" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="goodsItemNumber" />
          <Caption value="Goods item number" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Integer" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="panelsVisibility" />
          <Caption value="Panels visibility" />
          <Children>
            <Attribute>
              <Name value="IsClientValidationsVisible" />
              <Caption value="Is client validations visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Complex>
          <Name value="navTree" />
          <Caption value="Nav tree" />
          <Children>
            <Attribute>
              <Name value="indexConsignmentItems" />
              <Caption value="Index consignment items" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="indexHouseConsignments" />
              <Caption value="Index house consignments" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsItemActive" />
              <Caption value="Is consignment items item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsActive" />
              <Caption value="Is consignment items active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsItemActive" />
              <Caption value="Is house consignments item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsActive" />
              <Caption value="Is house consignments active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentActive" />
              <Caption value="Is consignment active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isGuaranteeActive" />
              <Caption value="Is guarantee active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTradersActive" />
              <Caption value="Is traders active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isCustomsOfficesActive" />
              <Caption value="Is customs offices active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTransitOperationActive" />
              <Caption value="Is transit operation active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEventHistoryActive" />
              <Caption value="Is event history active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Collection>
              <Name value="HouseConsignment" />
              <Caption value="House consignment" />
              <Children>
                <Attribute>
                  <Name value="hcIndex" />
                  <Caption value="Hc index" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Collection>
                  <Name value="ConsignmentItem" />
                  <Caption value="Consignment item" />
                  <Children>
                    <Attribute>
                      <Name value="ciIndex" />
                      <Caption value="Ci index" />
                      <DeclaredType>
                        <AttributeType>
                          <BaseType value="Integer" />
                        </AttributeType>
                      </DeclaredType>
                    </Attribute>
                    <Computed>
                      <Name value="_caption" />
                      <Caption value="_ caption" />
                      <Expression IsValid="True">
                        <ExpressionText><![CDATA["Item " + tostring(ciIndex)]]></ExpressionText>
                        <ResultType>
                          <BaseType value="String" />
                        </ResultType>
                      </Expression>
                    </Computed>
                  </Children>
                </Collection>
                <Computed>
                  <Name value="_caption" />
                  <Caption value="_ caption" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA["House consignment " + tostring(hcIndex)]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
              </Children>
            </Collection>
            <Computed>
              <Name value="customsOfficesErrCount" />
              <Caption value="Customs offices err count" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Header.CustomsOfficeOfDeparture.validationErrorsCount() + form.Header.CustomsOfficeOfDestinationDeclared.validationErrorsCount()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Complex>
        <Complex>
          <Name value="Errors" />
          <Caption value="Errors" />
          <Children>
            <Collection>
              <Name value="clientValidationErrors" />
              <Caption value="Client validation errors" />
              <Children>
                <Attribute>
                  <Name value="Message" />
                  <Caption value="Message" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Type" />
                  <Caption value="Type" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Computed>
                  <Name value="FocusTo" />
                  <Caption value="Focus to" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA[Pointer = "a" ? "textBox1" : defaultString()]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
              </Children>
            </Collection>
            <Complex>
              <Name value="serverValidationComplex" />
              <Caption value="Server validation complex" />
              <Children>
                <Collection>
                  <Name value="MessageCheckError" />
                  <Caption value="Message check error" />
                  <Children>
                    <Attribute>
                      <Name value="Reason" />
                      <Caption value="Reason" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="ErrorType" />
                      <Caption value="Error type" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="Pointer" />
                      <Caption value="Pointer" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                  </Children>
                </Collection>
              </Children>
            </Complex>
            <Collection>
              <Name value="serverValidationErrors" />
              <Caption value="Server validation errors" />
              <Children>
                <Computed>
                  <Name value="FocusTo" />
                  <Caption value="Focus to" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA[Pointer = "a" ? "textBox1" : defaultString()]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Description" />
                  <Caption value="Description" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Code" />
                  <Caption value="Code" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
          </Children>
        </Complex>
        <Complex>
          <Name value="incompleteModel" />
          <Caption value="Incomplete model" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.FBSaveIncomplete" />
            </Include>
          </Children>
        </Complex>
      </Children>
      <Modifiers>
        <Modifier>
          <Name value="modifier_E9AD4195_declarationType" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.declarationType" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_modifier_E9AD4195_declarationType_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="C0045">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0045"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._declarationTypeRequired = form.Model.declarationType.hasValue()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0601">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0601"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.PreviousDocument.exists(current.type.Code = "C651") ?
	(this.declarationType.hasValue() ?
		((this.declarationType.Code = "T1") AND (form.Header.TransitOperation.declarationType.Code = "T"))
		: (form.Header.TransitOperation.declarationType.Code = "T1"))
	: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0909">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0909"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._countryOfDispatchEnabled = form.Model.declarationType.hasValue()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0909">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0909"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._isR0909Valid)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0911">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0911"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._declarationTypeR0911) ? this.declarationType.isEmpty() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_67180552_countryOfDestination" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.countryOfDestination" />
          <Validators>
            <Validator Name="C0343">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0343"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._countryOfDestinationRequired = form.Model.countryOfDestination.hasValue()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_C8DFD26E_grossMass" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Commodity.GoodsMeasure.grossMass" />
          <Validators>
            <Validator Name="R0223">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0223"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[(form.Model._decisiveDate > globals.serverConfig.TPendDate) AND isTrue((form.Model.Commodity.GoodsMeasure.grossMass = 0) AND (form.Model.Commodity.GoodsMeasure.grossMass >= form.Model.Commodity.GoodsMeasure.netMass))]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0222">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0222"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[(form.Model._decisiveDate > globals.serverConfig.TPendDate) AND isTrue((form.Model.Packaging.count() = 0) AND (form.Model.Commodity.GoodsMeasure.grossMass = 0))]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="E1109">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1109"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.grossMass.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(toString(this.grossMass)), "^[A-Z0-9]{0,12}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_F81DAD75_name" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignee.name" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.name.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.name), "^[A-Z0-9 ]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_3BB7684B_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignee.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.streetAndNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.streetAndNumber), "^[A-Z0-9 ]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_B601D445_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.PreviousDocument.referenceNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.referenceNumber), "^[A-Z0-9 ]{0,35}$")
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_CD67E2C3_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.SupportingDocument.referenceNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.referenceNumber), "^[A-Z0-9 ]{0,35}$")
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_05796F85_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.AdditionalReference.referenceNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.referenceNumber), "^[A-Z0-9 ]{0,35}$")
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_E1FC45CF_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignee.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.postcode.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.postcode), "^[A-Z0-9]{0,9}$")
) : true

/*isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
(length(form.Model.Consignee.Address.postcode) < 10)
)*/
]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0505">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0505"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isConsigneePostcodeBased ? this.postcode.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_CBD8D4FF_descriptionOfGoods" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Commodity.descriptionOfGoods" />
          <Validators>
            <Validator Name="E1107">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1107"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
(length(this.descriptionOfGoods) < 281)
)
]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_49D1A465_netMass" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Commodity.GoodsMeasure.netMass" />
          <Validators>
            <Validator Name="E1109">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1109"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
(length(toString(this.netMass)) < 12)
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0837">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0837"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.House.PreviousDocument.exists(toUpper(substring(Current.referenceNumber,17,1)) in ["A","B"]) ?
	((this.hasValue()) AND (this.netMass.hasValue())) : 
	isTrue(form.Header.TransitOperation.reducedDatasetIndicator) ?
		this.netMass.isEmpty() : true
]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_052F4F77_numberOfPackages" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Packaging.numberOfPackages" />
          <Validators>
            <Validator Name="E1111">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1111"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isTPendDateGreaterOrEqualToDecisive AND
(length(toString(this.numberOfPackages)) < 6)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0060">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0060"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isTypePackagingInCL181.hasValue() ?
	form.Model._isTypePackagingInCL181 ? 
		this.numberOfPackages.isEmpty() 
		: form.Model._isTypePackagingInCL182.hasValue() ? 
			form.Model._isTypePackagingInCL182 ? 
				this.numberOfPackages.hasValue() 
				: true 
			: true
	: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_4B773A64_shippingMarks" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Packaging.shippingMarks" />
          <Validators>
            <Validator Name="E1105">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1105"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isTPendDateGreaterOrEqualToDecisive ?
ValidateAgainstRegularExpression(toUpper(this.shippingMarks), "^[A-Z0-9]{0,42}$")
: true

]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0060">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0060"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[(form.Model._decisiveDate <= globals.serverConfig.TPendDate) ?
	form.Model._isTypePackagingInCL181.hasValue() ? 
		form.Model._isTypePackagingInCL181 ? this.shippingMarks.isEmpty() : this.shippingMarks.hasValue() 
		: true
: form.Model._isTypePackagingInCL181.hasValue() ?
	form.Model._isTypePackagingInCL181 ? this.shippingMarks.isEmpty() : true
	: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_99C78C1C_complementOfInformation" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.PreviousDocument.complementOfInformation" />
          <Validators>
            <Validator Name="E1117">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1117"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.complementOfInformation), "^[A-Z0-9]{0,26}$")
)
]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0399">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0399"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Header.TransitOperation.reducedDatasetIndicator) ? this.complementOfInformation.isEmpty() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_8342A124_complementOfInformation" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.SupportingDocument.complementOfInformation" />
          <Validators>
            <Validator Name="E1117">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1117"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.complementOfInformation), "^[A-Z0-9]{0,26}$")
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_CF9A7100_countryOfDispatch" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.countryOfDispatch" />
          <Validators>
            <Validator Name="C0909">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0909"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._countryOfDispatchEnabled.hasValue() ?
form.Model._countryOfDispatchEnabled = form.Header.TransitOperation.declarationType.Code.hasValue()
: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_FDCA2014_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignee.Address.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_modifier_FDCA2014_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_A9470561_AdditionalSupplyChainActor" />
          <SourcePath value="Model.AdditionalSupplyChainActor" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_4C73EF66_Packaging" />
          <SourcePath value="Model.Packaging" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_ADBA6107_PreviousDocument" />
          <SourcePath value="Model.PreviousDocument" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_E59F9117_AdditionalReference" />
          <SourcePath value="Model.AdditionalReference" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_ED6E61D4_AdditionalInformation" />
          <SourcePath value="Model.AdditionalInformation" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_4E6D1BA9_referenceNumberUCR" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.referenceNumberUCR" />
          <Validators>
            <Validator Name="C0502">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0502"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[((form.Header.Consignment.TransportDocument.count() > 0) OR (form.House.TransportDocument.count() > 0)) 
?
  form.Header.Consignment.referenceNumberUCR.hasValue() 
  ? this.referenceNumberUCR.isEmpty() 
  :  
    form.House.referenceNumberUCR.hasValue() 
    ? this.referenceNumberUCR.isEmpty() 
    : true
:
  form.Header.Consignment.referenceNumberUCR.hasValue() 
  ? this.referenceNumberUCR.isEmpty() 
  :
    form.House.referenceNumberUCR.hasValue() 
    ? this.referenceNumberUCR.isEmpty() 
    : this.referenceNumberUCR.hasValue()
]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_E38F1427_combinedNomenclatureCode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Commodity.CommodityCode.combinedNomenclatureCode" />
          <Validators>
            <Validator Name="C0821">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0821"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._CombinedNonclatureCodeCantBeUsed.hasValue() ?
isFalse(form.Model._CombinedNonclatureCodeCantBeUsed) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_BCD789FC_CustomsOfficeOfDeparture" />
          <ShowAsChanges value="True" />
          <SourcePath value="Header.CustomsOfficeOfDeparture" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_modifier_BCD789FC_CustomsOfficeOfDeparture_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_B2713588_typeOfPackages" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Packaging.typeOfPackages" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_modifier_B2713588_typeOfPackages_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_82845828_identificationNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.AdditionalSupplyChainActor.identificationNumber" />
          <Validators>
            <Validator Name="C0342">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0342"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[(form.Header.Consignment.AdditionalSupplyChainActor.count() > 0) OR (form.House.AdditionalSupplyChainActor.count() > 0) ?
form.Model.AdditionalSupplyChainActor.count() = 0 : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_C087401E_CustomsOfficeOfDestinationDeclared" />
          <ShowAsChanges value="True" />
          <SourcePath value="Header.CustomsOfficeOfDestinationDeclared" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.ConsignmentItem.handler_modifier_C087401E_CustomsOfficeOfDestinationDeclared_OnUserChange" />
          </OnUserChange>
        </Modifier>
      </Modifiers>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~init" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="init" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if globals.loginResponse.isEmpty() then
	actions.authentication()
endIf

actions.setCodeListDate()

if form.Model.goodsItemNumber.hasValue() then
else
  form.Model.goodsItemNumber = form.goodsItemNumber
endif

var goToHomeFormResult = form.actions.tryLoadingData()

if goToHomeFormResult then
	form.actions.clearUrlGoToHomeForm()
else

	form.actions.setUrlDeepLink()
	
	form.actions.preparePanelVisibilitiesForNavigationTree()
	form.actions.initNavigationTree()
	
	actions.setUserModeInGui(form.mode.enumValue())
	
	// TODO: based on mode this will be either current datetime or some date from transit
	form.Model._decisiveDate = getDateTime()


endIf

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUrlDeepLink" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//TODO - v případě, kdy v URL není mode, tak navigovat uživatele na začátek aplikace

var url = apiobjects.urlRouter.findFormUrl(navigation.main.ConsignmentItem.fullName)

if (form.mode.hasValue()) then
	url.addString("mode", form.mode.enumValue())
endif

if (form.GUID.hasValue()) then
	url.addString("GUID", form.GUID)
endif

if (form.sequenceNumber.hasValue()) then
	url.addInt("sequenceNumber", form.sequenceNumber)
endif

if (form.goodsItemNumber.hasValue()) then
	url.addInt("goodsItemNumber", form.goodsItemNumber)
endif

url.updatePageUrl()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveConsignmentItem" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true
apiobjects.transitDeclaration.setConsignmentItem(form.sequenceNumber, form.Model.toJson(true))
actions.setDataChangedToFalse()
// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_cancel_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.transitDeclaration.clear()
apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="clearUrlGoToHomeForm" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if apiobjects.transitDeclaration.isEmpty() then

	// navigation still relies on mock DATA!!!
	if form.mode = enums.declarationFormMode.create then
		result = True
	else
		if 	(form.mode = enums.declarationFormMode.edit) OR
			(form.mode = enums.declarationFormMode.arrival) then
			//load existing transit declaration
			result = form.actions.tryLoadingDataOfExistingTD()
		else
			if form.mode = enums.declarationFormMode.continueFilling then
			
			else
			
				//FIX ME - case of not known mode enum value
				//go to main
				result = True
			endif

		endif

	endif

else

	if 	(form.mode = enums.declarationFormMode.create) OR
		(form.mode = enums.declarationFormMode.edit) OR 
		(form.mode = enums.declarationFormMode.arrival) OR
		(form.mode = enums.declarationFormMode.continueFilling) then
		form.actions.loadExistingData()
	else
		//FIX ME - case of not known mode enum value
		//go to main
		apiobjects.transitDeclaration.clear()
		result = True
	endIf

endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingDataOfExistingTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if form.GUID.hasValue() then
	result = form.actions.getDataFromCic()
else
	result = true
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="doesSequenceNumberExist" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var dataInTransitDeclaration = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)

if dataInTransitDeclaration = defaultString() then
  result = False
else
  result = True
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="doesGoodsItemNumberExist" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var dataInTransitDeclaration = apiobjects.transitDeclaration.getConsignmentItem(form.sequenceNumber, form.goodsItemNumber)

if dataInTransitDeclaration = defaultString() then
  result = False
else
  result = True
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="loadExistingData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var dataModel = apiobjects.transitDeclaration.getConsignmentItem(form.sequenceNumber, form.goodsItemNumber)
form.Model.fromJson(dataModel)
var dataHouse = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
form.House.fromJson(dataHouse)
var dataHeader = apiobjects.transitDeclaration.getHeader()
form.Header.fromJson(dataHeader)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveConsignmentItemAndSubmitData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if(form.Header.validationErrorsCount() = 0) then

	apiobjects.transitDeclaration.setConsignmentItem(form.sequenceNumber, form.Model.toJson(true))
	
	var response = apiobjects.CIC.postAsync("FBSubmit", apiobjects.transitDeclaration.toJson())

	if response.isError() then
		// Show error panels
		globals.globalUiState.isValidationsVisible = true
	
		// Inform user about errors
		var errorMessage = defaultString()
		var errorCount = defaultInt()	

		errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

		// Handling plural message
		if (errorCount > 1) then 
			errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
		endif	
		
		apiobjects.notificationsCtrl.addError(errorMessage)
	
	else
	
		apiobjects.notificationsCtrl.addSuccess("Declaration was saved successfuly.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		navigation.main.DecList.go()
		
	endif

else

	// Show validation error field
	globals.globalUiState.isValidationsVisible = true
	
	// Inform user about errors
	var errorMessage = defaultString()
	var errorCount = defaultInt()	

	errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

	if (errorCount > 1) then 
		errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
	endif
	
	apiobjects.notificationsCtrl.addError(errorMessage)

endif


// Need response from server

apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())

apiobjects.urlRouter.setDataHasChanged(false)
globals.DataChanged = false

globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_clientValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if length(params.errorSourceForm) > 0 then
	//actions.goToForm(params.errorSourceForm, params.errorSourceComponent, params.pointer, params.navigationTreeNode)
	else if length(params.errorSourceComponent) > 0 then
		//page.focusControl(params.errorSourceComponent, params.pointer)
		// or only scroll to component
		// page.scrollTo(params.errorSourceComponent, params.pointer)
	endif
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_serverValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if length(params.errorSourceForm) > 0 then
	//actions.goToForm(params.errorSourceForm, params.errorSourceComponent, params.pointer, params.navigationTreeNode)
	else if length(params.errorSourceComponent) > 0 then
		//page.focusControl(params.errorSourceComponent, params.pointer)
		// or only scroll to component
		// page.scrollTo(params.errorSourceComponent, params.pointer)
	endif
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_validate_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())

/* Validators panels display toggler */
var isClientValidatorVisible = globals.globalUiState.isValidationsVisible

if(isClientValidatorVisible = true) then
	globals.globalUiState.isValidationsVisible = false
else
	globals.globalUiState.isValidationsVisible = true	
endif

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_toTop_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_C087401E_CustomsOfficeOfDestinationDeclared_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var isCountrySM = substring(params.data.owner().CustomsOfficeOfDeparture.referenceNumber.Code,1,2) 

if isTrue(isCountrySM = "SM") then 

	var isCountryCL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", substring(params.data.referenceNumber.Code,1,2), defaultDate(), true)
	
	if isCountryCL010.isFound() then
		form.Model._declarationTypeR0911 = true
	else
		form.Model._declarationTypeR0911 = false
	endif
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="preparePanelVisibilitiesForNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.navTree.isTransitOperationActive = false
form.navTree.isCustomsOfficesActive = false
form.navTree.isTradersActive = false
form.navTree.isGuaranteeActive = false
form.navTree.isConsignmentActive = false

form.navTree.isHouseConsignmentsActive = false
form.navTree.isHouseConsignmentsItemActive = false
form.navTree.isConsignmentItemsActive = false
form.navTree.isConsignmentItemsItemActive = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if transitDeclaration.isEmpty() then
	system.console("transitDeclaration is empty, can not get data for navigation tree")
else

	var navTreeJson = transitDeclaration.getDataForNavTree()
	form.navTree.HouseConsignment.fromJson(navTreeJson)
	
	form.apiobjects.navigationTreeController.beginSetup("navTree", defaultString())
	
	form.apiobjects.navigationTreeController.addNode("TransitOperation", "Transit operation")
	
	var offices = form.apiobjects.navigationTreeController.addNode("CustomsOffices", "Customs offices")
	// pokud potřebujeme posbírat chyby z více komplexů či kolekcí, je potřeba si udělat computed, která vrací počet chyb, a nasměrovat to na ni
	offices.showErrorsFrom("navTree/customsOfficesErrCount")
	
	form.apiobjects.navigationTreeController.addNode("Traders", "Traders")
	
	var guarantee = form.apiobjects.navigationTreeController.addNode("Guarantee", "Guarantee")
	// pokud můžeme zobrazit chyby přímo z určitého komplexu či kolekce, nastavíme to takhle
	guarantee.showErrorsFrom("Header/Guarantee")
	
	
	form.apiobjects.navigationTreeController.addNode("Consignment", "Consignment")
	
	var hc = form.apiobjects.navigationTreeController.addNode("HouseConsignments", "House Consignments")
	hc.connectToCollection("navTree/HouseConsignment", "_caption")
	hc.limitSubnodesAroundSelected(3)
	
	
	var ci = hc.addNode("ConsignmentItems", "Consignment items")
	ci.connectToCollection("ConsignmentItem", "_caption")
	ci.limitSubnodesAroundSelected(3)
	
	form.apiobjects.navigationTreeController.addNode("EventHistory", "Event history")
	
	form.apiobjects.navigationTreeController.finishSetup()
	form.actions.initNavTreeFocus()
	//form.apiobjects.navigationTreeController.expandAlways("HouseConsignments", true)
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_B2713588_typeOfPackages_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var typeOfPackagingIn181 = KindOfPackagesBulk_CL181.getItemByStringColumnAsync("Code", params.data.typeOfPackages.Code, defaultDate(), true)

if typeOfPackagingIn181.isFound() then
	form.Model._isTypePackagingInCL181 = true
else
	form.Model._isTypePackagingInCL181 = false
	var typeOfPackagingIn182 = KindOfPackagesUnpacked_CL182.getItemByStringColumnAsync("Code", params.data.typeOfPackages.Code, defaultDate(), true)
	if typeOfPackagingIn182.isFound() then
		form.Model._isTypePackagingInCL182 = true
	else
		form.Model._isTypePackagingInCL182 = false
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavTreeFocus" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.apiobjects.navigationTreeController.focusNode("HouseConsignments[" + toString(form.sequenceNumber) + "]/ConsignmentItems[" + toString(form.goodsItemNumber) + "]")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_navigationTree_OnNodeActivated" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if isTrue(params.id = "ConsignmentItems") then
	form.actions.navigationForConsignmentItems()
else
	if isTrue(params.id = "HouseConsignments") then
		form.actions.navigationForHouseConsignments()
	else
		if globals.DataChanged then
			form.actions.saveConsignmentItem()
		endif
		actions.navigationToHeaderFromLists(params.id, form.mode, form.GUID)
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="getDataFromCic" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = defaultBool()

var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
	
var response = apiobjects.CIC.postAsync("FBDataRequest", requestJsonString)
	
if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
		result = true	
else
		var dataReceived = response.getJsonString()
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(dataReceived)
		
		//get transit data and fill them to local form variables
		form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
		//check if we have data for selected sequenceNumber
		if form.modelState.supportingTransitJson.hasValue() then
		
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getConsignmentItem(form.sequenceNumber, form.goodsItemNumber)
			
			if form.modelState.supportingTransitJson.hasValue() then
			
				form.Model.fromJson(form.modelState.supportingTransitJson)
				
				form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
				form.House.fromJson(form.modelState.supportingTransitJson)
				
				form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHeader()
				form.Header.fromJson(form.modelState.supportingTransitJson)				
			
				apiobjects.notificationsCtrl.addSuccess("Successfuly received data")
				result = false
			else
			    apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong Consignment Item number.")
				result = true
			endIf
				
		else
			apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong House Consignment number.")
			result = true
		endIf
		
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_Model_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.setDataHasChanged(true)
globals.DataChanged = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_acceptArrival_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var response = apiobjects.CIC.postAsync("FBArrivalConfirmation", form.Header.TransitOperation.toJson(true))

if response.isError() then
//neco se stane
else
	form.Model.fromJson(response.getJsonString())
	
	if form.Header.RiskAnalysisIdentification.hasValue() then
		form.Header.TransitOperation.status.Code = "A15" 
	else
		form.Header.TransitOperation.status.Code = "A13"
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationForConsignmentItems" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.navTree.isConsignmentItemsActive then
	if globals.DataChanged then
		form.actions.saveConsignmentItem()
	endif
	actions.navigationToConsignmentItemList(form.mode, form.navTree.indexHouseConsignments, form.GUID)
else
	if form.navTree.isConsignmentItemsItemActive then
		if form.goodsItemNumber <> form.navTree.indexConsignmentItems then
			if globals.DataChanged then
				form.actions.saveConsignmentItem()
			endif										
			actions.navigationToConsignmentItem(form.mode, form.navTree.indexHouseConsignments, form.navTree.indexConsignmentItems, form.GUID)
		endif						
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationForHouseConsignments" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.navTree.isHouseConsignmentsActive then
	form.actions.navigationToHouseConsignmentList()
else
	if form.navTree.isHouseConsignmentsItemActive then
		form.actions.navigationToChosenHouseConsignment()
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationToHouseConsignmentList" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if globals.DataChanged then
	form.actions.saveConsignmentItem()
endif

actions.navigationToHouseConsignmentList(form.mode, form.GUID)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationToChosenHouseConsignment" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if globals.DataChanged then
	form.actions.saveConsignmentItem()
endif

actions.navigationToHouseConsignment(form.mode, form.navTree.indexHouseConsignments, form.GUID)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationToHouseConsignmentNo1" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if globals.DataChanged then
	if system.confirm("Data has been changed. You might lose it when you go away") then
		actions.navigationToHouseConsignment(form.mode, 1, form.GUID)
	endif
else
	actions.navigationToHouseConsignment(form.mode, 1, form.GUID)
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_FDCA2014_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = form.Model.Consignee.Address.country.Code

form.Model._isConsigneePostcodeBased = false

if(hasValue(country)) then
	var countrycodeswithadress = CountryWithoutZip_CL505.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isConsigneePostcodeBased = false
	else
		form.Model._isConsigneePostcodeBased = true
	endif
else
	form.Model._isConsigneePostcodeBased = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_BCD789FC_CustomsOfficeOfDeparture_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var countryCodeCTC = CountryCodesCTC_CL112.getItemByStringColumnAsync("Code", substring(params.data.referenceNumber.Code,1,2), defaultDate(), true)

if countryCodeCTC.isFound() then
	form.Model._CombinedNonclatureCodeCantBeUsed = true
else
	form.Model._CombinedNonclatureCodeCantBeUsed = false
endif

var isCountrySM = substring(params.data.referenceNumber.Code,1,2) 

if isTrue(isCountrySM = "SM") then 

	var isCountryCL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", substring(params.data.owner().CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2), defaultDate(), true)
	
	if isCountryCL010.isFound() then
		form.Model._declarationTypeR0911 = true
	else
		form.Model._declarationTypeR0911 = false
	endif
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_E9AD4195_declarationType_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if isTrue(substring(form.Header.CustomsOfficeOfDestinationDeclared .referenceNumber.Code,1,2) = "SM") then
	if isTrue(substring(form.Header.CustomsOfficeOfDeparture.referenceNumber.Code,1,2) = "IT") then		
		if isTrue(form.Header.TransitOperation.declarationType.Code = "T2SM") AND params.data.declarationType.isEmpty() then	
			form.Model._isR0909Valid = true
		else
			form.Model._isR0909Valid = false
		endif
	else
		var depCountry = substring(form.Header.CustomsOfficeOfDeparture.referenceNumber.Code,1,2)
		var country010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", depCountry, defaultDate(), true)
		
		if (country010.isFound()) and (depCountry <> "IT") then 
			if isTrue(form.Header.TransitOperation.declarationType.Code in ["T2","T2F"]) OR isTrue(params.data.declarationType.Code in ["T2","T2F"]) then
				form.Model._isR0909Valid = true
			else
				form.Model._isR0909Valid = false
			endif
		else
			form.Model._isR0909Valid = true
		endif
	endif
else
	form.Model._isR0909Valid = true
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_savePartially_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

apiobjects.transitDeclaration.setConsignmentItem(form.sequenceNumber, form.Model.toJson(true))

form.actions.submitNewIncompleteData()	

// Save changed event into var
apiobjects.urlRouter.setDataHasChanged(false)
globals.DataChanged = false

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitNewIncompleteData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.GUID.hasValue() then
	form.incompleteModel.GUID = form.GUID
endif

//check if incompleteModel is valid (required holder of the transit procedure and COoDep)
var checkIncompleteDataValidity = form.actions.checkIncompleteModelValidity()
if checkIncompleteDataValidity then

	form.incompleteModel.fromJson(apiobjects.transitDeclaration.toJson())
	form.incompleteModel.IncompleteData.data = toString(apiobjects.transitDeclaration.toJson())

	var response = apiobjects.CIC.postAsync("FBSaveIncomplete", form.incompleteModel.toJson())

	globals.Errors.serverValidationErrors.fromJson(response.getJsonString())

	if response.isError() then

		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
		globals.globalUiState.isValidationsVisible = true

		// Inform user about errors
		var errorMessage = defaultString()

		if (globals.Errors.serverValidationErrors.count() > 1) then 
			errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
		endif	

		apiobjects.notificationsCtrl.addError(errorMessage)
	else
		apiobjects.notificationsCtrl.addSuccess("Your request was successful.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		apiobjects.transitDeclaration.clear()
		navigation.main.DecList.withInputNavTree("isClearanceInteruptedActive").go()
	endIf
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingDataOfExistingIncompleteData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if form.GUID.hasValue() then
	
	var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
	
	var response = apiobjects.CIC.postAsync("FBDataIncompleteRequest", requestJsonString)
	
	if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
		result = true	
	else
		var dataReceived = response.getJsonString()
		form.incompleteModel.fromJson(dataReceived)
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(form.incompleteModel.IncompleteData.data)
		
		//get transit data and fill them to local form variables
		form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
		//check if we have data for selected sequenceNumber
		if form.modelState.supportingTransitJson.hasValue() then
		
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getConsignmentItem(form.sequenceNumber, form.goodsItemNumber)
			
			if form.modelState.supportingTransitJson.hasValue() then
			
				form.Model.fromJson(form.modelState.supportingTransitJson)
				
				form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
				form.House.fromJson(form.modelState.supportingTransitJson)
				
				form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHeader()
				form.Header.fromJson(form.modelState.supportingTransitJson)				
			
				apiobjects.notificationsCtrl.addSuccess("Successfuly received data")
				result = false
			else
			    apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong Consignment Item number.")
				result = true
			endIf
				
		else
			apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong House Consignment number.")
			result = true
		endIf
		
	endIf
	
else
	result = true
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="checkIncompleteModelValidity" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = false

if form.Header.CustomsOfficeOfDeparture.referenceNumber.hasValue() then

	if form.Header.HolderOfTheTransitProcedure.identificationNumber.hasValue() then
		//required elements are present, we can continue		
		result = true

	else
		//HolderOfTheTransitProcedure isn't set
		notificationsCtrl.addError("Holder of the transit procedure must have an identification number.")

	endif
		
else

	//COoDep isn't set
	notificationsCtrl.addError("Customs Office of Departure must have a value.")

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <NavigationTreeController identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
      <Name value="navigationTreeController" />
    </NavigationTreeController>
  </ApiObjects>
</Form>