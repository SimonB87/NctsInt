<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="ConsignmentList" />
  <Caption value="Consignment List" />
  <Content>
    <Panel>
      <Name value="pln_ConsignmentList" />
      <Orientation value="Horizontal" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="column1_aside" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="263px" />
          <Children>
            <Panel>
              <Name value="headingsPnl" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Label>
                  <Name value="label_mode2" />
                  <Heading value="h3" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="globals.globalUiState.userModeLabel" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
                <Label>
                  <Name value="label_mrn" />
                  <Heading value="h4" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="form.Header.TransitOperation.MRN" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-headings" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <NavigationTree identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
              <Name value="navigationTree" />
              <controller reference="~navigationTreeController" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <OnNodeActivated>
                <ActionEvent ReferencedAction="~handler_navigationTree_OnNodeActivated" />
              </OnNodeActivated>
            </NavigationTree>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
            <CssClassConditional>
              <ClassName value="{theme}-nav" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="pnlBody" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Panel>
              <Name value="ControlPnl" />
              <Orientation value="Horizontal" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="ControlPnlHolder" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Panel>
                      <Name value="panel1" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="50%" />
                      <Children>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="toTop_btn" />
                          <Caption value="{fa-arrow-circle-o-up}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_toTop_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="validate_btn" />
                          <Caption value="{fa-exclamation-circle}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_validate_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                    <Panel>
                      <Name value="panel2" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="50%" />
                      <Children>
                        <Button>
                          <Name value="acceptArrival_btn" />
                          <Caption value="Accept Arrival" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_acceptArrival_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="incidentRegistration_btn" />
                          <Caption value="Incident Registration" />
                          <IsEnabled value="False" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="save_btn" />
                          <Caption value="Save" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~saveDeclarationAndSubmitData" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isSaveButtonsVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-success" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="savePartially_btn" />
                          <Caption value="Save incomplete data" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="160px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_savePartially_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isSaveButtonsVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-alternate" />
                              <Condition value="False" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="cancel_btn" />
                          <Caption value="Cancel" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_cancel_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-secondary" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="disabled" />
                              <Condition value="False" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="flright" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-controls" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <Panel>
                  <Name value="ControPnlSpace" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-space" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-nav-bar" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <Panel>
              <Name value="panel4" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="panel311" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <GroupBox>
                      <Name value="validationsGrp" />
                      <Caption value="Validations summary" />
                      <Panel.Height value="#" />
                      <Panel.Width value="100%" />
                      <Content>
                        <Panel>
                          <Name value="panel10" />
                          <Orientation value="Horizontal" />
                          <Children>
                            <Panel>
                              <Name value="panel5" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <Children>
                                <ClientValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="cliValidations" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <OnItemClick>
                                    <ActionEvent ReferencedAction="~action2" />
                                  </OnItemClick>
                                  <Bindings>
                                    <Binding SourceProperty="validationErrors" Expression="globals.Errors.clientValidationErrors" />
                                    <Binding SourceProperty="validationRoot" Expression="form.Header" />
                                  </Bindings>
                                  <columns>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="cliPointerCol" />
                                      <columnCaption value="Pointer" />
                                      <columnRole value="pointer" />
                                      <columnWidth value="30%" />
                                      <propertyName value="Pointer" />
                                    </validationSummaryColumn>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="cliMessageCol" />
                                      <columnCaption value="Message" />
                                      <columnWidth value="70%" />
                                      <propertyName value="Message" />
                                    </validationSummaryColumn>
                                  </columns>
                                </ClientValidationSummary>
                                <ServerValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="srvValidations" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <OnItemClick>
                                    <ActionEvent ReferencedAction="~handler_serverValidationSummary1_OnItemClick" />
                                  </OnItemClick>
                                  <Bindings>
                                    <Binding SourceProperty="validationErrors" Expression="globals.Errors.serverValidationErrors" />
                                  </Bindings>
                                  <columns>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="srvPointerCol" />
                                      <columnCaption value="Pointer" />
                                      <columnRole value="pointer" />
                                      <columnWidth value="30%" />
                                      <propertyName value="Pointer" />
                                    </validationSummaryColumn>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="srvMessageCol" />
                                      <columnCaption value="Message" />
                                      <columnWidth value="70%" />
                                      <propertyName value="Reason" />
                                    </validationSummaryColumn>
                                  </columns>
                                </ServerValidationSummary>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Content>
                      <Bindings>
                        <Binding SourceProperty="IsVisible" Expression="globals.globalUiState.isValidationsVisible" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-groupbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-datatable" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </GroupBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel-main" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <List identity="List.a6f439c3b8e944f383863f66ff1261c8">
                  <Name value="list_selectedGoodsItem" />
                  <controller reference="~collectionGoodsItems" />
                  <listName value="goodsItemList" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <OnRowClicked>
                    <ActionEvent ReferencedAction="~handler_list_selectedGoodsItem_OnRowClicked" />
                  </OnRowClicked>
                  <Bindings>
                    <Binding SourceProperty="selectedRow" Expression="form.selectedGoodsItem" />
                  </Bindings>
                  <columns>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_goodsItemNumber" />
                      <Caption value="Goods Item Number" />
                      <ColumnName value="goodsItemNumber" />
                    </listColumn>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_declarationType" />
                      <Caption value="Declaration Type" />
                      <ColumnName value="cmp_declarationType_code" />
                    </listColumn>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_countryOfDispatch" />
                      <Caption value="Country Of Dispatch" />
                      <ColumnName value="cmp_countryOfDispatch_code" />
                    </listColumn>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_referenceNumberUCR" />
                      <Caption value="Reference Number UCR" />
                      <ColumnName value="referenceNumberUCR" />
                    </listColumn>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_consignee_name" />
                      <Caption value="Consignee Name" />
                      <ColumnName value="cmp_consignee_name" />
                    </listColumn>
                    <listColumn identity="List.a6f439c3b8e944f383863f66ff1261c8">
                      <Name value="listColumn_delete" />
                      <Caption value="Delete Action" />
                      <ColumnName value="cmp_deleteAction" />
                      <EnableFilter value="False" />
                    </listColumn>
                  </columns>
                </List>
                <Button>
                  <Name value="add_btn" />
                  <Caption value="Add item" />
                  <Panel.Height value="42px" />
                  <Panel.Width value="120px" />
                  <OnClick>
                    <ActionEvent ReferencedAction="~addConsigItem" />
                  </OnClick>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-button" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="newStyle" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="btn-success" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="disabled" />
                      <Condition value="False" />
                    </CssClassConditional>
                  </CssClass>
                </Button>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="content_pnl" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-datatable" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Collection>
          <Name value="ConsignmentCollection" />
          <Caption value="Consignment collection" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.ConsignmentItem" />
            </Include>
            <Computed>
              <Name value="cmp_deleteAction" />
              <Caption value="Cmp _ delete action" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.goodsItemNumber.hasValue() ? "Delete" : ""]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="cmp_declarationType_code" />
              <Caption value="Cmp _ declaration type _ code" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.declarationType.code.hasValue() ? this.declarationType.code : ""]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="cmp_countryOfDispatch_code" />
              <Caption value="Cmp _ country of dispatch _ code" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.countryOfDispatch._description.hasValue() ? this.countryOfDispatch._description : ""]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="cmp_consignee_name" />
              <Caption value="Cmp _ consignee _ name" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.Consignee.name.hasValue() ? this.Consignee.name : ""]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Collection>
        <Attribute>
          <Name value="GUID" />
          <Caption value="GUID" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="mode" />
          <Caption value="Mode" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <MetaType reference="+MetaTypes.declarationFormMode" />
        </Attribute>
        <Attribute>
          <Name value="sequenceNumber" />
          <Caption value="Sequence number" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Integer" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="goodsItemNumber" />
          <Caption value="Goods item number" />
          <MetaType reference="/(Model.1119011d69cd45d181eaad70856a363f)+MetaTypes.XsdInt" />
        </Attribute>
        <Reference>
          <Name value="selectedGoodsItem" />
          <Caption value="Selected goods item" />
          <Children>
            <Attribute>
              <Name value="goodsItemNumber" />
              <Caption value="Goods item number" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="declarationType_code" />
              <Caption value="Declaration type _ code" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="countryOfDispatch_code" />
              <Caption value="Country of dispatch _ code" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="referenceNumberUCR" />
              <Caption value="Reference number UCR" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="consignee_name" />
              <Caption value="Consignee _ name" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Reference>
        <Complex>
          <Name value="Header" />
          <Caption value="Header" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.DeclarationHeader" />
            </Include>
          </Children>
        </Complex>
        <Complex>
          <Name value="navTree" />
          <Caption value="Nav tree" />
          <Children>
            <Attribute>
              <Name value="indexConsignmentItems" />
              <Caption value="Index consignment items" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="indexHouseConsignments" />
              <Caption value="Index house consignments" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsItemActive" />
              <Caption value="Is consignment items item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsActive" />
              <Caption value="Is consignment items active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsItemActive" />
              <Caption value="Is house consignments item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsActive" />
              <Caption value="Is house consignments active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentActive" />
              <Caption value="Is consignment active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isGuaranteeActive" />
              <Caption value="Is guarantee active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTradersActive" />
              <Caption value="Is traders active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isCustomsOfficesActive" />
              <Caption value="Is customs offices active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTransitOperationActive" />
              <Caption value="Is transit operation active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEventHistoryActive" />
              <Caption value="Is event history active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Collection>
              <Name value="HouseConsignment" />
              <Caption value="House consignment" />
              <Children>
                <Attribute>
                  <Name value="hcIndex" />
                  <Caption value="Hc index" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Collection>
                  <Name value="ConsignmentItem" />
                  <Caption value="Consignment item" />
                  <Children>
                    <Attribute>
                      <Name value="ciIndex" />
                      <Caption value="Ci index" />
                      <DeclaredType>
                        <AttributeType>
                          <BaseType value="Integer" />
                        </AttributeType>
                      </DeclaredType>
                    </Attribute>
                    <Computed>
                      <Name value="_caption" />
                      <Caption value="_ caption" />
                      <Expression IsValid="True">
                        <ExpressionText><![CDATA["Item " + tostring(ciIndex)]]></ExpressionText>
                        <ResultType>
                          <BaseType value="String" />
                        </ResultType>
                      </Expression>
                    </Computed>
                  </Children>
                </Collection>
                <Computed>
                  <Name value="_caption" />
                  <Caption value="_ caption" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA["House consignment " + tostring(hcIndex)]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
              </Children>
            </Collection>
            <Computed>
              <Name value="customsOfficesErrCount" />
              <Caption value="Customs offices err count" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Header.CustomsOfficeOfDeparture.validationErrorsCount() + form.Header.CustomsOfficeOfDestinationDeclared.validationErrorsCount()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Complex>
        <Complex>
          <Name value="modelState" />
          <Caption value="Model state" />
          <Children>
            <Attribute>
              <Name value="supportingTransitJson" />
              <Caption value="Supporting transit json" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Computed>
          <Name value="_isTPendDateGreaterThanDecisive" />
          <Caption value="_ is T pend date greater than decisive" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[globals.serverConfig.TPendDate > form._decisiveDate]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Attribute>
          <Name value="_decisiveDate" />
          <Caption value="_ decisive date" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Date" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Computed>
          <Name value="_isArrivalMode" />
          <Caption value="_ is arrival mode" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[form.mode = enums.declarationFormMode.arrival]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Computed>
          <Name value="_isCreateOrEditMode" />
          <Caption value="_ is create or edit mode" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit)]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Computed>
          <Name value="_isSaveButtonsVisible" />
          <Caption value="_ is save buttons visible" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit) OR (form.mode = enums.declarationFormMode.continueFilling)]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Complex>
          <Name value="Errors" />
          <Caption value="Errors" />
          <Children>
            <Collection>
              <Name value="clientValidationErrors" />
              <Caption value="Client validation errors" />
              <Children>
                <Attribute>
                  <Name value="Message" />
                  <Caption value="Message" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Type" />
                  <Caption value="Type" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
            <Complex>
              <Name value="serverValidationComplex" />
              <Caption value="Server validation complex" />
              <Children>
                <Collection>
                  <Name value="MessageCheckError" />
                  <Caption value="Message check error" />
                  <Children>
                    <Attribute>
                      <Name value="ErrorType" />
                      <Caption value="Error type" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="Pointer" />
                      <Caption value="Pointer" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="Reason" />
                      <Caption value="Reason" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                  </Children>
                </Collection>
              </Children>
            </Complex>
            <Collection>
              <Name value="serverValidationErrors" />
              <Caption value="Server validation errors" />
              <Children>
                <Attribute>
                  <Name value="Reason" />
                  <Caption value="Reason" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="ErrorType" />
                  <Caption value="Error type" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
          </Children>
        </Complex>
        <Complex>
          <Name value="incompleteModel" />
          <Caption value="Incomplete model" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.FBSaveIncomplete" />
            </Include>
          </Children>
        </Complex>
      </Children>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~init" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="init" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if globals.loginResponse.isEmpty() then
	actions.authentication()
endIf

actions.setCodeListDate()

var goToHomeFormResult = form.actions.tryLoadingData()

if goToHomeFormResult then
	form.actions.clearUrlGoToHomeForm()
else
	form._decisiveDate = getDate()

	form.actions.setUrlDeepLink()
	
	actions.setUserModeInGui(form.mode.enumValue())
	
	form.actions.preparePanelVisibilitiesForNavigationTree()
	form.actions.initNavigationTree()
		
    form.apiobjects.collectionGoodsItems.setReady(false)
    form.apiobjects.collectionGoodsItems.setPageSize(18)
	form.apiobjects.collectionGoodsItems.setReady(true)
endIf

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUrlDeepLink" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//TODO - v případě, kdy v URL není mode, tak navigovat uživatele na začátek aplikace
var url = apiobjects.urlRouter.findFormUrl(navigation.main.ConsignmentList.fullName)

if (form.mode.hasValue()) then
	url.addString("mode", form.mode.enumValue())
endif

if (form.GUID.hasValue()) then
	url.addString("GUID", form.GUID)
endif

if (form.sequenceNumber.hasValue()) then
	url.addInt("sequenceNumber", form.sequenceNumber)
endif

url.updatePageUrl()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="addConsigItem" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// TODO - POSTUP PRÁCE

// 1 navigace na detail

// 2 ale zde v tuto chvíli ještě nebude sequence number

// 3 uživatel vyplní infromace a pak ULOŽÍ PŘES funkci : apiobjects.transitDeclaration.appendNewConsignmentItem()
// V PŘÍPADĚ EDTACE EXISTUJÍCÍHO SE PRACUJE PŘES apiobjects.transitDeclaration.setConsignmentItem()


//navigation to the newly added item
var newItemGoodsItemNumber = form.ConsignmentCollection.count() + 1

apiobjects.transitDeclaration.appendNewConsignmentItem(form.sequenceNumber, "{}")

actions.navigationToConsignmentItem(form.mode, form.sequenceNumber, newItemGoodsItemNumber, form.GUID)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_cancel_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.transitDeclaration.clear()
apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if apiobjects.transitDeclaration.isEmpty() then

	// navigation still relies on mock DATA!!!
	if form.mode = enums.declarationFormMode.create then
		result = True
	else
		if 	(form.mode = enums.declarationFormMode.edit) OR 
			(form.mode = enums.declarationFormMode.arrival) then
			result = form.actions.tryLoadingDataOfExistingTD()
		else
		
			if form.mode = enums.declarationFormMode.continueFilling then
				result = form.actions.emptyTDthenInitiateExistingIncomplteTD()
			else
				//go to main
				result = True
			endif	
			
		endif
	endif

else

	if 	(form.mode = enums.declarationFormMode.create) OR 
		(form.mode = enums.declarationFormMode.edit) OR 
		(form.mode = enums.declarationFormMode.arrival) OR
		(form.mode = enums.declarationFormMode.continueFilling) then
		form.actions.loadData()
	else
		//go to main
		apiobjects.transitDeclaration.clear()
		result = True
	endIf

endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="goToHomeForm" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="clearUrlGoToHomeForm" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingDataOfExistingTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if form.GUID.hasValue() then
	result = form.actions.getDataFromCic()
else
	result = true
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="doesSequenceNumberExist" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var dataInTransitDeclaration = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)

if dataInTransitDeclaration = defaultString() then
  result = False
else
  result = True
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="loadData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true
var dataHouseConsig = apiobjects.transitDeclaration.getConsignmentItemList(form.sequenceNumber)
form.ConsignmentCollection.fromJson(dataHouseConsig)

// Load actual MRN
var headerJson = apiobjects.transitDeclaration.getHeader()
form.Header.fromJson(headerJson)
globals.busyIndicatorIsRunning = false
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_toTop_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_list_selectedGoodsItem_OnRowClicked" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[

  var sequenceNumber = form.sequenceNumber
  var goodsItemNumber = form.selectedGoodsItem.goodsItemNumber

//Action delete Item
if isTrueOrDefault(params.columnName = "cmp_deleteAction") then

  var confirmFileDelete = apiobjects.pageApi.confirm("Do you want to delete item n. " + toString(goodsItemNumber) )
  
	if confirmFileDelete = True then
		globals.busyIndicatorIsRunning = true
		apiobjects.transitDeclaration.removeConsignmentItem(sequenceNumber, goodsItemNumber)
		var navTreeJson = transitDeclaration.getDataForNavTree()
		form.navTree.HouseConsignment.fromJson(navTreeJson)
		form.actions.initNavTreeFocus()
		form.ConsignmentCollection.clear()
		// TO DO - refresh HouseConsignementList data
		// doda load stejný na initu pro load dat
	
		var rowsJson = apiobjects.transitDeclaration.getConsignmentItemList(sequenceNumber)
	
		// kontrolovat jestli rowsJson není prázdný, jestli ano, tak přenést uživatele na začátek aplikace
		form.ConsignmentCollection.fromJson(rowsJson)
		
		form.apiobjects.collectionGoodsItems.setReady(false)
	    form.apiobjects.collectionGoodsItems.setReady(true)
	endIf
  
else
  //Action navigation to Item Detail
  if form.GUID.hasValue() then
	  navigation.main.ConsignmentItem.withGuid(form.GUID).go(form.mode, sequenceNumber, goodsItemNumber)
  else
	  navigation.main.ConsignmentItem.go(form.mode, sequenceNumber, goodsItemNumber)
  endif
  
endif

globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="preparePanelVisibilitiesForNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.navTree.isTransitOperationActive = false
form.navTree.isCustomsOfficesActive = false
form.navTree.isTradersActive = false
form.navTree.isGuaranteeActive = false
form.navTree.isConsignmentActive = false

form.navTree.isHouseConsignmentsActive = true
form.navTree.isHouseConsignmentsItemActive = true
form.navTree.isConsignmentItemsActive = true
form.navTree.isConsignmentItemsItemActive = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if transitDeclaration.isEmpty() then
	system.console("transitDeclaration is empty, can not get data for navigation tree")
else

	var navTreeJson = transitDeclaration.getDataForNavTree()
	form.navTree.HouseConsignment.fromJson(navTreeJson)
	
	form.apiobjects.navigationTreeController.beginSetup("navTree", defaultString())
	
	form.apiobjects.navigationTreeController.addNode("TransitOperation", "Transit operation")
	
	var offices = form.apiobjects.navigationTreeController.addNode("CustomsOffices", "Customs offices")
	// pokud potřebujeme posbírat chyby z více komplexů či kolekcí, je potřeba si udělat computed, která vrací počet chyb, a nasměrovat to na ni
	offices.showErrorsFrom("navTree/customsOfficesErrCount")
	
	form.apiobjects.navigationTreeController.addNode("Traders", "Traders")
	
	var guarantee = form.apiobjects.navigationTreeController.addNode("Guarantee", "Guarantee")
	// pokud můžeme zobrazit chyby přímo z určitého komplexu či kolekce, nastavíme to takhle
	guarantee.showErrorsFrom("Header/Guarantee")
	
	
	form.apiobjects.navigationTreeController.addNode("Consignment", "Consignment")
	
	var hc = form.apiobjects.navigationTreeController.addNode("HouseConsignments", "House Consignments")
	hc.connectToCollection("navTree/HouseConsignment", "_caption")
	hc.limitSubnodesAroundSelected(3)
	
	
	var ci = hc.addNode("ConsignmentItems", "Consignment items")
	ci.connectToCollection("ConsignmentItem", "_caption")
	ci.limitSubnodesAroundSelected(3)

	form.apiobjects.navigationTreeController.addNode("EventHistory", "Event history")

	form.apiobjects.navigationTreeController.finishSetup()
	form.actions.initNavTreeFocus()
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_navigationTree_OnNodeActivated" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if isTrue(params.id = "ConsignmentItems") then
	if form.navTree.isConsignmentItemsItemActive then
		actions.navigationToConsignmentItem(form.mode, form.sequenceNumber, form.navTree.indexConsignmentItems, form.GUID)
	endif
else
	if isTrue(params.id = "HouseConsignments") then
		form.actions.navigationForHouseConsignments()
	else
		actions.navigationToHeaderFromLists(params.id, form.mode, form.GUID)
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavTreeFocus" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.apiobjects.navigationTreeController.focusNode("HouseConsignments[" + toString(form.sequenceNumber) +"]/ConsignmentItems")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="getDataFromCic" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = defaultBool()

var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
	
var response = apiobjects.CIC.postAsync("FBDataRequest", requestJsonString)
	
if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
		result = true	
else
		var dataReceived = response.getJsonString()
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(dataReceived)
		
		//get transit data and fill them to local form variables
		form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
		//check if we have data for selected sequenceNumber
		if form.modelState.supportingTransitJson.hasValue() then
		
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getConsignmentItemList(form.sequenceNumber)
			form.ConsignmentCollection.fromJson(form.modelState.supportingTransitJson)
			
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHeader()
			form.Header.fromJson(form.modelState.supportingTransitJson)
			
			apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")
			
			result = false
			
		else
			apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong House Consignment number.")
			result = true
		endIf
		
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_acceptArrival_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var transitOp = "{\"TransitOperation\":"+ form.Header.TransitOperation.toJson(true) +"}"
var response = apiobjects.CIC.postAsync("FBArrivalConfirmation", transitOp)

if response.isError() then
//neco se stane
else
	if isTrue(response.getMessageType() = "BFArrivalAccepted") then
		apiobjects.notificationsCtrl.addSuccess("Arrival successfuly confirmed.")
		navigation.main.DecList.go()
	else
		apiobjects.notificationsCtrl.addError("Failed to confirm arrival.")
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="navigationForHouseConsignments" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.navTree.isHouseConsignmentsActive then
	actions.navigationToHouseConsignmentList(form.mode, form.GUID)
else
	if form.navTree.isHouseConsignmentsItemActive then
		actions.navigationToHouseConsignment(form.mode, form.navTree.indexHouseConsignments, form.GUID)
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_validate_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())

/* Validators panels display toggler */
var isValidatorVisible = globals.globalUiState.isValidationsVisible

if(isValidatorVisible = true) then
	globals.globalUiState.isValidationsVisible = false
else
	globals.globalUiState.isValidationsVisible = true	
endif

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="action2" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// Nice to have pointer to element]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_serverValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// Nice to have pointer to element	]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveDeclarationAndSubmitData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if(form.Header.validationErrorsCount() = 0) then

	var response = apiobjects.CIC.postAsync("FBSubmit", apiobjects.transitDeclaration.toJson())

	if response.isError() then
	
		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())

		// Show error panels
		globals.globalUiState.isValidationsVisible = true
	
		// Inform user about errors
		var errorMessage = defaultString()
		var errorCount = defaultInt()

		errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

		// Handling plural message
		if (errorCount > 1) then 
			errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
		endif	
		
		apiobjects.notificationsCtrl.addError(errorMessage)
	
	else
	
		apiobjects.notificationsCtrl.addSuccess("Declaration was saved successfuly.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		navigation.main.DecList.go()
		
	endif

else

	// Show validation error field
	globals.globalUiState.isValidationsVisible = true
	
	// Inform user about errors
	var errorMessage = defaultString()
	var errorCount = defaultInt()

	errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

	if (errorCount > 1) then 
		errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
	endif
	
	apiobjects.notificationsCtrl.addError(errorMessage)

endif

globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_savePartially_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

form.actions.submitNewIncompleteData()	

// Save changed event into var
apiobjects.urlRouter.setDataHasChanged(false)
globals.DataChanged = false

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitNewIncompleteData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.GUID.hasValue() then
	form.incompleteModel.GUID = form.GUID
endif

//check if incompleteModel is valid (required holder of the transit procedure and COoDep)
var checkIncompleteDataValidity = form.actions.checkIncompleteModelValidity()
if checkIncompleteDataValidity then

	form.incompleteModel.fromJson(apiobjects.transitDeclaration.toJson())
	form.incompleteModel.IncompleteData.data = toString(apiobjects.transitDeclaration.toJson())

	var response = apiobjects.CIC.postAsync("FBSaveIncomplete", form.incompleteModel.toJson())

	globals.Errors.serverValidationErrors.fromJson(response.getJsonString())

	if response.isError() then

		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
		globals.globalUiState.isValidationsVisible = true

		// Inform user about errors
		var errorMessage = defaultString()

		if (globals.Errors.serverValidationErrors.count() > 1) then 
			errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
		endif	

		apiobjects.notificationsCtrl.addError(errorMessage)
	else
		apiobjects.notificationsCtrl.addSuccess("Your request was successful.")
		
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		apiobjects.transitDeclaration.clear()
		navigation.main.DecList.withInputNavTree("isClearanceInteruptedActive").go()
	endIf
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDthenInitiateExistingIncomplteTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = defaultBool()

var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"

var response = apiobjects.CIC.postAsync("FBDataIncompleteRequest", requestJsonString)

if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
		result = true
else
		var dataReceived = response.getJsonString()
		form.incompleteModel.fromJson(dataReceived)
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(form.incompleteModel.IncompleteData.data)
		
		//get transit data and fill them to local form variables
		form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHouseConsignment(form.sequenceNumber)
		//check if we have data for selected sequenceNumber
		if form.modelState.supportingTransitJson.hasValue() then
		
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getConsignmentItemList(form.sequenceNumber)
			form.ConsignmentCollection.fromJson(form.modelState.supportingTransitJson)
			
			form.modelState.supportingTransitJson = apiobjects.transitDeclaration.getHeader()		
			form.Header.fromJson(form.modelState.supportingTransitJson)
			
			apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")
			result = false
		else
			apiobjects.notificationsCtrl.addError("Failed to load data. Submission has wrong House Consignment number.")
			result = true
		endIf
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="checkIncompleteModelValidity" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = false

if form.Header.CustomsOfficeOfDeparture.referenceNumber.hasValue() then

	if form.Header.HolderOfTheTransitProcedure.identificationNumber.hasValue() then
		//required elements are present, we can continue		
		result = true

	else
		//HolderOfTheTransitProcedure isn't set
		notificationsCtrl.addError("Holder of the transit procedure must have an identification number.")

	endif
		
else

	//COoDep isn't set
	notificationsCtrl.addError("Customs Office of Departure must have a value.")

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <CollectionDataProvider2 identity="CollectionDataProvider2.796ba28ddaf44db78bd2cdf0b9f3628c">
      <Name value="collectionDataProvider2" />
      <dataSourceCollectionReference value="ConsignmentCollection" />
    </CollectionDataProvider2>
    <ListCtrl identity="ListCtrl.459ff3780ab145df985191cfc1336ce1">
      <Name value="collectionGoodsItems" />
      <dataProvider reference="~collectionDataProvider2" />
      <server reference="+GlobalApiObjects.CIC" />
    </ListCtrl>
    <NavigationTreeController identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
      <Name value="navigationTreeController" />
    </NavigationTreeController>
  </ApiObjects>
</Form>