<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="HouseConsignmentList" />
  <Caption value="House Consignment List" />
  <Content>
    <Panel>
      <Name value="pnl_body" />
      <Orientation value="Horizontal" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="column1_aside" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="263px" />
          <Children>
            <Panel>
              <Name value="headingsPnl" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Label>
                  <Name value="label_mode2" />
                  <Heading value="h3" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="globals.globalUiState.userModeLabel" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
                <Label>
                  <Name value="label_mrn" />
                  <Heading value="h4" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="form.Header.TransitOperation.MRN" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-headings" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <NavigationTree identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
              <Name value="navigationTree" />
              <controller reference="~navigationTreeController" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <OnNodeActivated>
                <ActionEvent ReferencedAction="~handler_navigationTree_OnNodeActivated" />
              </OnNodeActivated>
            </NavigationTree>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
            <CssClassConditional>
              <ClassName value="{theme}-nav" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="pnlBody" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Panel>
              <Name value="ControlsPnl" />
              <Orientation value="Horizontal" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="ControlPnlHolder" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Panel>
                      <Name value="panel2" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="50%" />
                      <Children>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="toTop_btn" />
                          <Caption value="{fa-arrow-circle-o-up}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_toTop_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                        <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                          <Name value="validate_btn" />
                          <Caption value="{fa-exclamation-circle}" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_validate_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-imagebutton" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flleft" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="toTop" />
                            </CssClassConditional>
                          </CssClass>
                        </ImageButton>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                    <Panel>
                      <Name value="panel4" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="50%" />
                      <Children>
                        <Button>
                          <Name value="acceptArrival_btn" />
                          <Caption value="Accept Arrival" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_acceptArrival_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="incidentRegistration_btn" />
                          <Caption value="Incident Registration" />
                          <IsEnabled value="False" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isArrivalMode" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="save_btn" />
                          <Caption value="Save" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~saveDeclarationAndSubmitData" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isSaveButtonVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-success" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="savePartially_btn" />
                          <Caption value="Save incomplete data" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="160px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_savePartially_btn_OnClick" />
                          </OnClick>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form._isSaveButtonVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-alternate" />
                              <Condition value="False" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                        <Button>
                          <Name value="cancel_btn" />
                          <Caption value="Cancel" />
                          <Panel.Height value="42px" />
                          <Panel.Width value="120px" />
                          <OnClick>
                            <ActionEvent ReferencedAction="~handler_cancel_btn_OnClick" />
                          </OnClick>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-button" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="newStyle" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="btn-secondary" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="disabled" />
                              <Condition value="False" />
                            </CssClassConditional>
                          </CssClass>
                        </Button>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="flright" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-controls" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <Panel>
                  <Name value="ControlPnlSpace" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar-space" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-nav-bar" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <Panel>
              <Name value="content_pnl" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="panel311" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <GroupBox>
                      <Name value="validationsGrp" />
                      <Caption value="Validations summary" />
                      <Panel.Height value="#" />
                      <Panel.Width value="100%" />
                      <Content>
                        <Panel>
                          <Name value="panel10" />
                          <Orientation value="Horizontal" />
                          <Children>
                            <Panel>
                              <Name value="panel5" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <Children>
                                <ClientValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="cliValidations" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <OnItemClick>
                                    <ActionEvent ReferencedAction="~action2" />
                                  </OnItemClick>
                                  <Bindings>
                                    <Binding SourceProperty="validationErrors" Expression="globals.Errors.clientValidationErrors" />
                                    <Binding SourceProperty="validationRoot" Expression="form.Header" />
                                  </Bindings>
                                  <columns>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="cliPointerCol" />
                                      <columnCaption value="Pointer" />
                                      <columnRole value="pointer" />
                                      <columnWidth value="30%" />
                                      <propertyName value="Pointer" />
                                    </validationSummaryColumn>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="cliMessageCol" />
                                      <columnCaption value="Message" />
                                      <columnWidth value="70%" />
                                      <propertyName value="Message" />
                                    </validationSummaryColumn>
                                  </columns>
                                </ClientValidationSummary>
                                <ServerValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                  <Name value="srvValidations" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <OnItemClick>
                                    <ActionEvent ReferencedAction="~handler_serverValidationSummary1_OnItemClick" />
                                  </OnItemClick>
                                  <Bindings>
                                    <Binding SourceProperty="validationErrors" Expression="globals.Errors.serverValidationErrors" />
                                  </Bindings>
                                  <columns>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="srvPointerCol" />
                                      <columnCaption value="Pointer" />
                                      <columnRole value="pointer" />
                                      <columnWidth value="30%" />
                                      <propertyName value="Pointer" />
                                    </validationSummaryColumn>
                                    <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="srvMessageCol" />
                                      <columnCaption value="Message" />
                                      <columnWidth value="70%" />
                                      <propertyName value="Reason" />
                                    </validationSummaryColumn>
                                  </columns>
                                </ServerValidationSummary>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Content>
                      <Bindings>
                        <Binding SourceProperty="IsVisible" Expression="globals.globalUiState.isValidationsVisible" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-groupbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-datatable" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </GroupBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel-main" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <DataTable>
                  <Name value="HouseConsignmentList_table" />
                  <Margin value="10, 10, 10, 10 px" />
                  <Panel.Height value="#" />
                  <Panel.Width value="100%" />
                  <OnRowActivate>
                    <ActionEvent ReferencedAction="~handler_dataTable1_OnRowActivate" />
                  </OnRowActivate>
                  <Bindings>
                    <Binding SourceProperty="DataItems" Expression="form.houseConsignmentRowList" />
                  </Bindings>
                  <Columns>
                    <DataColumn>
                      <Name value="dataColumn1" />
                      <Caption value="Sequence number" />
                      <Content>
                        <Label>
                          <Name value="goodsItemNumber_label" />
                          <Bindings>
                            <Binding SourceProperty="Data" Expression="this.sequenceNumber" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-label" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Label>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                    <DataColumn>
                      <Name value="declarationGoodsItemNumber" />
                      <Caption value="Grossmass" />
                      <Content>
                        <Label>
                          <Name value="declarationGoodsItemNumber_label" />
                          <Bindings>
                            <Binding SourceProperty="Data" Expression="this.grossMass" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-label" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Label>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                    <DataColumn>
                      <Name value="dataColumn2" />
                      <Caption value="Consignment Items Count" />
                      <Content>
                        <Label>
                          <Name value="label1" />
                          <Bindings>
                            <Binding SourceProperty="Data" Expression="this.comp_consigIemCount" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-label" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Label>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                    <DataColumn>
                      <Name value="dataColumn3" />
                      <Caption value="Reference Number UCR" />
                      <Content>
                        <Label>
                          <Name value="label2" />
                          <Bindings>
                            <Binding SourceProperty="Data" Expression="this.referenceNumberUCR" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-label" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Label>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                    <DataColumn>
                      <Name value="dataColumn4" />
                      <Caption value="Consignor Name" />
                      <Content>
                        <Label>
                          <Name value="label3" />
                          <Bindings>
                            <Binding SourceProperty="Data" Expression="this.consignorName" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-label" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Label>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                    <DataColumn>
                      <Name value="dataColumn5" />
                      <Caption value="Item Action" />
                      <Content>
                        <Panel>
                          <Name value="panel1" />
                          <Orientation value="Horizontal" />
                          <Children>
                            <Button>
                              <Name value="delete_btn" />
                              <Caption value="Delete item" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="120px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_delete_btn_OnClick" />
                              </OnClick>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="newStyle" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="btn-danger" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="disabled" />
                                  <Condition value="False" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Content>
                      <HeaderCssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-datacolumn" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </HeaderCssClass>
                    </DataColumn>
                  </Columns>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-datatable" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </DataTable>
                <Button>
                  <Name value="add_btn" />
                  <Caption value="Add item" />
                  <Panel.Height value="42px" />
                  <Panel.Width value="120px" />
                  <OnClick>
                    <ActionEvent ReferencedAction="~addHouseConsigItem" />
                  </OnClick>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-button" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="newStyle" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="btn-success" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="disabled" />
                      <Condition value="False" />
                    </CssClassConditional>
                  </CssClass>
                </Button>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="content_pnl" />
                </CssClassConditional>
              </CssClass>
            </Panel>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Attribute>
          <Name value="GUID" />
          <Caption value="GUID" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="mode" />
          <Caption value="Mode" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <MetaType reference="+MetaTypes.declarationFormMode" />
        </Attribute>
        <Collection>
          <Name value="houseConsignmentRowList" />
          <Caption value="House consignment row list" />
          <Children>
            <Include>
              <Include reference="+DataEntities.houseConsignmentRow" />
            </Include>
            <Computed>
              <Name value="comp_consigIemCount" />
              <Caption value="Comp _ consig iem count" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[consignmentItemsCount.hasValue() ? consignmentItemsCount : 0]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Collection>
        <Complex>
          <Name value="Header" />
          <Caption value="Header" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.DeclarationHeader" />
            </Include>
          </Children>
        </Complex>
        <Complex>
          <Name value="navTree" />
          <Caption value="Nav tree" />
          <Children>
            <Attribute>
              <Name value="indexConsignmentItems" />
              <Caption value="Index consignment items" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="indexHouseConsignments" />
              <Caption value="Index house consignments" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsItemActive" />
              <Caption value="Is consignment items item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsActive" />
              <Caption value="Is consignment items active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsItemActive" />
              <Caption value="Is house consignments item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsActive" />
              <Caption value="Is house consignments active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentActive" />
              <Caption value="Is consignment active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isGuaranteeActive" />
              <Caption value="Is guarantee active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTradersActive" />
              <Caption value="Is traders active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isCustomsOfficesActive" />
              <Caption value="Is customs offices active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTransitOperationActive" />
              <Caption value="Is transit operation active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEventHistoryActive" />
              <Caption value="Is event history active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Collection>
              <Name value="HouseConsignment" />
              <Caption value="House consignment" />
              <Children>
                <Attribute>
                  <Name value="hcIndex" />
                  <Caption value="Hc index" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Collection>
                  <Name value="ConsignmentItem" />
                  <Caption value="Consignment item" />
                  <Children>
                    <Attribute>
                      <Name value="ciIndex" />
                      <Caption value="Ci index" />
                      <DeclaredType>
                        <AttributeType>
                          <BaseType value="Integer" />
                        </AttributeType>
                      </DeclaredType>
                    </Attribute>
                    <Computed>
                      <Name value="_caption" />
                      <Caption value="_ caption" />
                      <Expression IsValid="True">
                        <ExpressionText><![CDATA["Item " + tostring(ciIndex)]]></ExpressionText>
                        <ResultType>
                          <BaseType value="String" />
                        </ResultType>
                      </Expression>
                    </Computed>
                  </Children>
                </Collection>
                <Computed>
                  <Name value="_caption" />
                  <Caption value="_ caption" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA["House consignment " + tostring(hcIndex)]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
              </Children>
            </Collection>
            <Computed>
              <Name value="customsOfficesErrCount" />
              <Caption value="Customs offices err count" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Header.CustomsOfficeOfDeparture.validationErrorsCount() + form.Header.CustomsOfficeOfDestinationDeclared.validationErrorsCount()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Complex>
        <Computed>
          <Name value="_isArrivalMode" />
          <Caption value="_ is arrival mode" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[form.mode = enums.declarationFormMode.arrival]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Computed>
          <Name value="_isEditOrCreateMode" />
          <Caption value="_ is edit or create mode" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit)]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Computed>
          <Name value="_isSaveButtonVisible" />
          <Caption value="_ is save button visible" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit) OR (form.mode = enums.declarationFormMode.continueFilling)]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Attribute>
          <Name value="serverValidationsJson" />
          <Caption value="Server validations json" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="Errors" />
          <Caption value="Errors" />
          <Children>
            <Collection>
              <Name value="clientValidationErrors" />
              <Caption value="Client validation errors" />
              <Children>
                <Attribute>
                  <Name value="Message" />
                  <Caption value="Message" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Reason" />
                  <Caption value="Reason" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
            <Complex>
              <Name value="serverValidationComplex" />
              <Caption value="Server validation complex" />
              <Children>
                <Collection>
                  <Name value="MessageCheckError" />
                  <Caption value="Message check error" />
                  <Children>
                    <Attribute>
                      <Name value="ErrorType" />
                      <Caption value="Error type" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="Pointer" />
                      <Caption value="Pointer" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                    <Attribute>
                      <Name value="Reason" />
                      <Caption value="Reason" />
                      <DeclaredType>
                        <AttributeType />
                      </DeclaredType>
                    </Attribute>
                  </Children>
                </Collection>
              </Children>
            </Complex>
            <Collection>
              <Name value="serverValidationErrors" />
              <Caption value="Server validation errors" />
              <Children>
                <Attribute>
                  <Name value="Reason" />
                  <Caption value="Reason" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="ErrorType" />
                  <Caption value="Error type" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="Pointer" />
                  <Caption value="Pointer" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
          </Children>
        </Complex>
        <Complex>
          <Name value="incompleteModel" />
          <Caption value="Incomplete model" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.FBSaveIncomplete" />
            </Include>
          </Children>
        </Complex>
      </Children>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~init" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="init" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if globals.loginResponse.isEmpty() then
	actions.authentication()
endIf

actions.setCodeListDate()

var goToHomeFormResult = form.actions.tryLoadingData()

if goToHomeFormResult then
	//take user now to home
	form.actions.clearUrlGoToHomeForm()
else
	//proceed with form built
	form.actions.setUrlDeepLink()

	actions.setUserModeInGui(form.mode.enumValue())
	
	form.actions.preparePanelVisibilitiesForNavigationTree()
	form.actions.initNavigationTree()

endIf

globals.busyIndicatorIsRunning = false

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_dataTable1_OnRowActivate" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// uložíme data do transitDeclaration
// transitDeclaration.setHeader(form.toJson(true))
actions.navigationToHouseConsignment(form.mode, params.data.sequenceNumber, form.GUID)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUrlDeepLink" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//edit url to form
var url = apiobjects.urlRouter.findFormUrl(navigation.main.HouseConsignmentList.fullName)

if (form.mode.hasValue()) then
	url.addString("mode", form.mode.enumValue())
endif

if (form.GUID.hasValue()) then
	url.addString("GUID", form.GUID)
endif

url.updatePageUrl()

// zkontrolovat kombinaci vstupních parametrů, např. pokud by mode byl edit a mrn prázdné, asi si někdo hrál s URL a přišel sem přímo;
// pokud nesedí kombinace vstupních parametrů, automaticky hodíme uživatele na začátek, tj. domovskou stránku
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="addHouseConsigItem" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// TODO - POSTUP PRÁCE

// 1 navigace na detail

// 2 ale zde v tuto chvíli ještě nebude sequence number

// 3 uživatel vyplní informace a pak ULOŽÍ PŘES funkci : apiobjects.transitDeclaration.appendNewHouseConsignment()
// V PŘÍPADĚ EDTACE EXISTUJÍCÍHO SE PRACUJE PŘES setNewHouseConsignment()

//navigation to the newly added item

var newItemSequenceNumber = form.houseConsignmentRowList.count() + 1
apiobjects.transitDeclaration.appendNewHouseConsignment("{}")

actions.navigationToHouseConsignment(form.mode, newItemSequenceNumber, form.GUID)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_delete_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//Get index of item in collection
var getItemNumber = params.data.sequenceNumber

//Ask user for event confirmation (delete CZ Annex)
var confirmFileDelete = apiobjects.pageApi.confirm("Do you want to delete item n. " + toString(getItemNumber) )

if confirmFileDelete = True then
	apiobjects.transitDeclaration.removeHouseConsignment(getItemNumber)
	var navTreeJson = transitDeclaration.getDataForNavTree()
	form.navTree.HouseConsignment.fromJson(navTreeJson)

globals.busyIndicatorIsRunning = True

form.houseConsignmentRowList.clear()

// refresh HouseConsignementList data
var rowsJson = apiobjects.transitDeclaration.getHouseConsignmentList()
form.houseConsignmentRowList.fromJson(rowsJson)
// refresh navigation tree

globals.busyIndicatorIsRunning = False

endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_cancel_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.transitDeclaration.clear()
apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False
if apiobjects.transitDeclaration.isEmpty() then

	// navigation still relies on mock DATA!!!
	if form.mode = enums.declarationFormMode.create then
		apiobjects.urlRouter.clearUrl()
		navigation.main.Home.go()
	else
		if form.mode = enums.declarationFormMode.edit then
			//load existing transit declaration
			result = form.actions.tryLoadingDataOfExistingTD()
		else
			
			if form.mode = enums.declarationFormMode.continueFilling then
				form.actions.emptyTDthenInitiateExistingIncompleteTD()
			else
				//go to main
				result = True
			endif
			
		endif

	endif
	
else

	if 	(form.mode = enums.declarationFormMode.create) or 
		(form.mode = enums.declarationFormMode.edit) or 
		(form.mode = enums.declarationFormMode.arrival) or
		(form.mode = enums.declarationFormMode.continueFilling ) then
				
		var rowsJson = apiobjects.transitDeclaration.getHouseConsignmentList()
		form.houseConsignmentRowList.fromJson(rowsJson)

		// Load actual MRN
		var headerJson = apiobjects.transitDeclaration.getHeader()
		form.Header.fromJson(headerJson)

	else
		//FIX ME - case of not known mode enum value
		apiobjects.transitDeclaration.clear()
		result = True

	endIf

endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingDataOfExistingTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

if form.GUID.hasValue() then
	result = form.actions.getDataFromCic()
else
	result = true
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="clearUrlGoToHomeForm" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_toTop_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="preparePanelVisibilitiesForNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.navTree.isTransitOperationActive = false
form.navTree.isCustomsOfficesActive = false
form.navTree.isTradersActive = false
form.navTree.isGuaranteeActive = false
form.navTree.isConsignmentActive = false

form.navTree.isHouseConsignmentsActive = true
form.navTree.isHouseConsignmentsItemActive = false
form.navTree.isConsignmentItemsActive = false
form.navTree.isConsignmentItemsItemActive = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if transitDeclaration.isEmpty() then
	system.console("transitDeclaration is empty, can not get data for navigation tree")
else
	var navTreeJson = transitDeclaration.getDataForNavTree()
	
	form.navTree.HouseConsignment.fromJson(navTreeJson)
	
	form.apiobjects.navigationTreeController.beginSetup("navTree", defaultString())
	
	form.apiobjects.navigationTreeController.addNode("TransitOperation", "Transit operation")
	
	var offices = form.apiobjects.navigationTreeController.addNode("CustomsOffices", "Customs offices")
	// pokud potřebujeme posbírat chyby z více komplexů či kolekcí, je potřeba si udělat computed, která vrací počet chyb, a nasměrovat to na ni
	offices.showErrorsFrom("navTree/customsOfficesErrCount")
	
	form.apiobjects.navigationTreeController.addNode("Traders", "Traders")
	
	var guarantee = form.apiobjects.navigationTreeController.addNode("Guarantee", "Guarantee")
	// pokud můžeme zobrazit chyby přímo z určitého komplexu či kolekce, nastavíme to takhle
	guarantee.showErrorsFrom("Header/Guarantee")
	
	
	form.apiobjects.navigationTreeController.addNode("Consignment", "Consignment")
	
	var hc = form.apiobjects.navigationTreeController.addNode("HouseConsignments", "House Consignments")
	hc.connectToCollection("navTree/HouseConsignment", "_caption")
	hc.limitSubnodesAroundSelected(3)
	
	
	var ci = hc.addNode("ConsignmentItems", "Consignment items")
	ci.connectToCollection("ConsignmentItem", "_caption")
	ci.limitSubnodesAroundSelected(3)

	
	form.apiobjects.navigationTreeController.addNode("EventHistory", "Event history")
	
	form.apiobjects.navigationTreeController.finishSetup()
	form.actions.initNavTreeFocus()
	
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavTreeFocus" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.apiobjects.navigationTreeController.focusNode("HouseConsignments")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_navigationTree_OnNodeActivated" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if (isTrue(params.id = "HouseConsignments")) then
	if form.navTree.isHouseConsignmentsItemActive then
		actions.navigationToHouseConsignment(form.mode, form.navTree.indexHouseConsignments, form.GUID)
	endif
else
	actions.navigationToHeaderFromLists(params.id, form.mode, form.GUID)
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="getDataFromCic" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = defaultBool()

var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
	
var response = apiobjects.CIC.postAsync("FBDataRequest", requestJsonString)
	
if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
		result = true
else
		var dataReceived = response.getJsonString()
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(dataReceived)
		
		//get transit data and fill them to local form variables
		var houseConsignmentListData = apiobjects.transitDeclaration.getHouseConsignmentList()
		form.houseConsignmentRowList.fromJson(houseConsignmentListData)
		
		apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")
		result = false
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_acceptArrival_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var transitOp = "{\"TransitOperation\":"+ form.Header.TransitOperation.toJson(true) +"}"
var response = apiobjects.CIC.postAsync("FBArrivalConfirmation", transitOp)

if response.isError() then
//neco se stane
else
	if isTrue(response.getMessageType() = "BFArrivalAccepted") then
		apiobjects.notificationsCtrl.addSuccess("Arrival successfuly confirmed.")
		navigation.main.DecList.go()
	else
		apiobjects.notificationsCtrl.addError("Failed to confirm arrival.")
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="action2" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// Nice to have pointer to element]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_serverValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// Nice to have pointer to element	]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_validate_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())

/* Validators panels display toggler */
var isValidatorVisible = globals.globalUiState.isValidationsVisible

if(isValidatorVisible = true) then
	globals.globalUiState.isValidationsVisible = false
else
	globals.globalUiState.isValidationsVisible = true	
endif

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveDeclarationAndSubmitData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if(form.Header.validationErrorsCount() = 0) then

	var response = apiobjects.CIC.postAsync("FBSubmit", apiobjects.transitDeclaration.toJson())

	if response.isError() then

		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())

		// Show error panels
		globals.globalUiState.isValidationsVisible = true
	
		// Inform user about errors
		var errorMessage = defaultString()
		var errorCount = defaultInt()

		errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

		// Handling plural message
		if (errorCount > 1) then 
			errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
		endif	
		
		apiobjects.notificationsCtrl.addError(errorMessage)
	
	else
	
		apiobjects.notificationsCtrl.addSuccess("Declaration was saved successfuly.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		navigation.main.DecList.go()
		
	endif

else

	// Show validation error field
	globals.globalUiState.isValidationsVisible = true
	
	// Inform user about errors
	var errorMessage = defaultString()
	var errorCount = defaultInt()

	errorCount = form.Header.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

	if (errorCount > 1) then 
		errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
	endif
	
	apiobjects.notificationsCtrl.addError(errorMessage)

endif

globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_savePartially_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

form.actions.submitNewIncompleteData()	

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitNewIncompleteData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.GUID.hasValue() then
	form.incompleteModel.GUID = form.GUID
endif

//check if incompleteModel is valid (required holder of the transit procedure and COoDep)
var checkIncompleteDataValidity = form.actions.checkIncompleteModelValidity()
if checkIncompleteDataValidity then

	form.incompleteModel.fromJson(apiobjects.transitDeclaration.toJson())
	form.incompleteModel.IncompleteData.data = toString(apiobjects.transitDeclaration.toJson())

	var response = apiobjects.CIC.postAsync("FBSaveIncomplete", form.incompleteModel.toJson(true))

	globals.Errors.serverValidationErrors.fromJson(response.getJsonString())

	if response.isError() then

		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
		globals.globalUiState.isValidationsVisible = true

		// Inform user about errors
		var errorMessage = defaultString()

		if (globals.Errors.serverValidationErrors.count() > 1) then 
			errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
		endif	

		apiobjects.notificationsCtrl.addError(errorMessage)
	else
		apiobjects.notificationsCtrl.addSuccess("Your request was successful.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		apiobjects.transitDeclaration.clear()
		navigation.main.DecList.withInputNavTree("isClearanceInteruptedActive").go()
	endIf
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDthenInitiateExistingIncompleteTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
var response = apiobjects.CIC.postAsync("FBDataIncompleteRequest", requestJsonString)

if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
else
		var dataReceived = response.getJsonString()
		form.incompleteModel.fromJson(dataReceived)
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(form.incompleteModel.IncompleteData.data)
		form.Header.fromJson(form.incompleteModel.IncompleteData.data)
		
		apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")
endIf
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="checkIncompleteModelValidity" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = false

if form.Header.CustomsOfficeOfDeparture.referenceNumber.hasValue() then

	if form.Header.HolderOfTheTransitProcedure.identificationNumber.hasValue() then
		//required elements are present, we can continue		
		result = true

	else
		//HolderOfTheTransitProcedure isn't set
		notificationsCtrl.addError("Holder of the transit procedure must have an identification number.")

	endif
		
else

	//COoDep isn't set
	notificationsCtrl.addError("Customs Office of Departure must have a value.")

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <NavigationTreeController identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
      <Name value="navigationTreeController" />
    </NavigationTreeController>
  </ApiObjects>
</Form>