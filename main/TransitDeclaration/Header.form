<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="Header" />
  <Caption value="Header" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Panel>
              <Name value="pnNavigation" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="263px" />
              <Children>
                <Panel>
                  <Name value="headingsPnl" />
                  <Orientation value="Vertical" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Label>
                      <Name value="label_mode" />
                      <Heading value="h3" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="globals.globalUiState.userModeLabel" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-label" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Label>
                    <Label>
                      <Name value="label_mrn" />
                      <Heading value="h4" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="form.model.TransitOperation.MRN" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-label" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Label>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-headings" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <NavigationTree identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
                  <Name value="navigationTree" />
                  <controller reference="~navigationTreeController" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <OnNodeActivated>
                    <ActionEvent ReferencedAction="~handler_navigationTree_OnNodeActivated" />
                  </OnNodeActivated>
                </NavigationTree>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
                <CssClassConditional>
                  <ClassName value="{theme}-nav" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <Panel>
              <Name value="pnlBody" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <Panel>
                  <Name value="ControlPnl" />
                  <Orientation value="Horizontal" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Panel>
                      <Name value="ControlPnlHolder" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Children>
                        <Panel>
                          <Name value="panel83" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="20%" />
                          <Children>
                            <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                              <Name value="toTop_btn" />
                              <Caption value="{fa-arrow-circle-o-up}" />
                              <Panel.Height value="#" />
                              <Panel.Width value="80px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_toTop_btn_OnClick" />
                              </OnClick>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-imagebutton" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="toTop" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="flleft" />
                                </CssClassConditional>
                              </CssClass>
                            </ImageButton>
                            <ImageButton identity="ImageButton.d5705fac3ef94ff185b0260525af877a">
                              <Name value="validate_btn" />
                              <Caption value="{fa-exclamation-circle}" />
                              <Panel.Height value="#" />
                              <Panel.Width value="80px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_validate_btn_OnClick" />
                              </OnClick>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-imagebutton" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="flleft" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="toTop" />
                                </CssClassConditional>
                              </CssClass>
                            </ImageButton>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <Panel>
                          <Name value="panel89" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="80%" />
                          <Children>
                            <Button>
                              <Name value="acceptArrival_btn" />
                              <Caption value="Accept Arrival" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="120px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_acceptArrival_btn_OnClick" />
                              </OnClick>
                              <Bindings>
                                <Binding SourceProperty="IsVisible" Expression="Model._isArrivalMode" />
                              </Bindings>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                            <Button>
                              <Name value="incidentRegistration_btn" />
                              <Caption value="Incident Registration" />
                              <IsEnabled value="False" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="120px" />
                              <Bindings>
                                <Binding SourceProperty="IsVisible" Expression="Model._isArrivalMode" />
                              </Bindings>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                            <Button>
                              <Name value="save_btn" />
                              <Caption value="Save" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="120px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~saveHeaderDataAndSubmit" />
                              </OnClick>
                              <Bindings>
                                <Binding SourceProperty="IsVisible" Expression="form.Model._isSaveButtonVisible" />
                              </Bindings>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="newStyle" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="btn-success" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="disabled" />
                                  <Condition value="False" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                            <Button>
                              <Name value="savePartially_btn" />
                              <Caption value="Save incomplete data" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="160px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_savePartially_btn_OnClick" />
                              </OnClick>
                              <Bindings>
                                <Binding SourceProperty="IsVisible" Expression="form.Model._isSavePartiallyVisible" />
                              </Bindings>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="btn-alterntative" />
                                  <Condition value="False" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="newStyle" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                            <Button>
                              <Name value="cancel_btn" />
                              <Caption value="Cancel" />
                              <Panel.Height value="42px" />
                              <Panel.Width value="120px" />
                              <OnClick>
                                <ActionEvent ReferencedAction="~handler_cancel_btn_OnClick" />
                              </OnClick>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-button" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="newStyle" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="btn-secondary" />
                                </CssClassConditional>
                                <CssClassConditional>
                                  <ClassName value="disabled" />
                                  <Condition value="False" />
                                </CssClassConditional>
                              </CssClass>
                            </Button>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="flright" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-nav-bar-controls" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                    <CssClassConditional>
                      <ClassName value="{theme}-nav-bar" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
                <Panel>
                  <Name value="content_pnl" />
                  <Orientation value="Vertical" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Children>
                    <Panel>
                      <Name value="panel311" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Children>
                        <GroupBox>
                          <Name value="validationsGrp" />
                          <Caption value="Validations summary" />
                          <Panel.Height value="#" />
                          <Panel.Width value="100%" />
                          <Content>
                            <Panel>
                              <Name value="panel10" />
                              <Orientation value="Horizontal" />
                              <Children>
                                <Panel>
                                  <Name value="panel3" />
                                  <Orientation value="Vertical" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <ClientValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="clientValidationSummary1" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <OnItemClick>
                                        <ActionEvent ReferencedAction="~handler_clientValidationSummary1_OnItemClick" />
                                      </OnItemClick>
                                      <Bindings>
                                        <Binding SourceProperty="validationErrors" Expression="globals.Errors.clientValidationErrors" />
                                        <Binding SourceProperty="validationRoot" Expression="form.Model" />
                                      </Bindings>
                                      <columns>
                                        <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                          <Name value="cliPointerCol" />
                                          <columnCaption value="Pointer" />
                                          <columnRole value="pointer" />
                                          <columnWidth value="30%" />
                                          <propertyName value="Pointer" />
                                        </validationSummaryColumn>
                                        <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                          <Name value="cliMessageCol" />
                                          <columnCaption value="Message" />
                                          <columnWidth value="70%" />
                                          <propertyName value="Message" />
                                        </validationSummaryColumn>
                                      </columns>
                                    </ClientValidationSummary>
                                    <ServerValidationSummary identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                      <Name value="serverValidationSummary1" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <OnItemClick>
                                        <ActionEvent ReferencedAction="~handler_serverValidationSummary1_OnItemClick" />
                                      </OnItemClick>
                                      <Bindings>
                                        <Binding SourceProperty="validationErrors" Expression="globals.Errors.serverValidationErrors" />
                                      </Bindings>
                                      <columns>
                                        <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                          <Name value="srvPointerCol" />
                                          <columnCaption value="Pointer" />
                                          <columnRole value="pointer" />
                                          <columnWidth value="30%" />
                                          <propertyName value="Pointer" />
                                        </validationSummaryColumn>
                                        <validationSummaryColumn identity="ValidationSummary.0f608ab4a81a4349b35a8398ddd72445">
                                          <Name value="srvMessageCol" />
                                          <columnCaption value="Message" />
                                          <columnWidth value="70%" />
                                          <propertyName value="Reason" />
                                        </validationSummaryColumn>
                                      </columns>
                                    </ServerValidationSummary>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="globals.globalUiState.isValidationsVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-datatable" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel-main" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                    <Panel>
                      <Name value="panel11" />
                      <Orientation value="Vertical" />
                      <Panel.Height value="#" />
                      <Panel.Width value="100%" />
                      <Bindings>
                        <Binding SourceProperty="IsEnabled" Expression="form.Model._isSaveButtonVisible" />
                      </Bindings>
                      <Children>
                        <Panel>
                          <Name value="pnlTransitOperationHeader" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isTransitOperationHeaderVisible" />
                          </Bindings>
                          <Children>
                            <Panel>
                              <Name value="OHLeftPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="60%" />
                              <Children>
                                <GroupBox>
                                  <Name value="TransitOperationGrp" />
                                  <Caption value="Transit operation" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel4" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <Panel>
                                          <Name value="LeftPnlsss" />
                                          <Orientation value="Vertical" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="100%" />
                                          <Children>
                                            <Panel>
                                              <Name value="Row11" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <TextBox>
                                                  <Name value="textBox26" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="60%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.LRN" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.LRN.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.LRN.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <DatePicker>
                                                  <Name value="datePicker1" />
                                                  <CaptionPosition value="Top" />
                                                  <IsEnabled value="False" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.declarationAcceptanceDate" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.declarationAcceptanceDate.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.declarationAcceptanceDate.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                                <DatePicker>
                                                  <Name value="datePicker22" />
                                                  <CaptionPosition value="Top" />
                                                  <IsEnabled value="False" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.releaseDateAndTime" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.releaseDateAndTime.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.releaseDateAndTime.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                            <Panel>
                                              <Name value="Row12" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo12" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="25%" />
                                                  <ReferenceList reference="+GlobalApiObjects.declarationType" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.declarationType" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.declarationType.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.declarationType.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo33" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="25%" />
                                                  <ReferenceList reference="+GlobalApiObjects.DeclarationTypeAdditional" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.additionalDeclarationType" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.additionalDeclarationType.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.additionalDeclarationType.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="textBox28" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.TIRCarnetNumber" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._TIRRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.TIRCarnetNumber.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <DatePicker>
                                                  <Name value="datePicker4" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.TIRValidityDate" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._TIRRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.TIRValidityDate.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                                <DatePicker>
                                                  <Name value="datePicker5" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.limitDate" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._limitDateRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.limitDate.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                            <Panel>
                                              <Name value="Row13" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo34" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="35%" />
                                                  <ReferenceList reference="+GlobalApiObjects.DeclarationTypeSecurity" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.security" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.security.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.security.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo36" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="35%" />
                                                  <ReferenceList reference="+GlobalApiObjects.SpecificCircumstanceIndicatorCode" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.specificCircumstanceIndicator" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.specificCircumstanceIndicator.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.specificCircumstanceIndicator.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <ReferenceCombo>
                                                  <Name value="countryOfDispatch" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="Code" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.countryOfDispatch" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.countryOfDispatch.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.countryOfDispatch.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <ReferenceCombo>
                                                  <Name value="countryOfDestination" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="Code" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.countryOfDestination" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.countryOfDestination.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.countryOfDestination.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                            <Panel>
                                              <Name value="Row14" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="inlandModeOfTransport" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="25%" />
                                                  <ReferenceList reference="+GlobalApiObjects.TransportModeUCC" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.inlandModeOfTransport" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.inlandModeOfTransport.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.inlandModeOfTransport.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <ReferenceCombo>
                                                  <Name value="modeOfTransportAtTheBorder" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="25%" />
                                                  <ReferenceList reference="+GlobalApiObjects.TransportModeUCC" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.modeOfTransportAtTheBorder" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.modeOfTransportAtTheBorder.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isModeOfTransportAtTheBorderRequired" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="grossMass" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.grossMass" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.grossMass.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.grossMass.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <TextBox>
                                                  <Name value="textBox69" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="15%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.TotalValueOfGoods" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.totalValueOfGoods.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.TotalValueOfGoods.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <TextBox>
                                                  <Name value="referenceNumberUCR" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.referenceNumberUCR" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.referenceNumberUCR.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.referenceNumberUCR.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                            <Panel>
                                              <Name value="Row15" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <CheckBox>
                                                  <Name value="checkBox4" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.containerIndicator" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._additionalDeclarationTypeRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.containerIndicator.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-checkbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </CheckBox>
                                                <CheckBox>
                                                  <Name value="checkBox1" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.reducedDatasetIndicator" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.reducedDatasetIndicator.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.reducedDatasetIndicator.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-checkbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </CheckBox>
                                                <CheckBox>
                                                  <Name value="checkBox3" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.bindingItinerary" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.bindingItinerary.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.bindingItinerary.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-checkbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </CheckBox>
                                                <CheckBox>
                                                  <Name value="checkBox2" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.FallbackProcedure" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.FallbackProcedure.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.FallbackProcedure.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-checkbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </CheckBox>
                                                <DatePicker>
                                                  <Name value="datePicker3" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.releaseDate" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.releaseDate.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._FallbackProcedureEnabled" />
                                                    <Binding SourceProperty="IsEnabled" Expression="Model._FallbackProcedureEnabled" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="readOnlyGrp" />
                                  <Caption value="Read only new items" />
                                  <IsVisible value="False" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel15" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel16" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <DatePicker>
                                              <Name value="datePicker6" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.amendmentSubmissionDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.amendmentSubmissionDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.amendmentSubmissionDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker7" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.amendmentAcceptanceDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.amendmentAcceptanceDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.amendmentAcceptanceDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker8" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.arrivalNotificationDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.arrivalNotificationDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.arrivalNotificationDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel17" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <CheckBox>
                                              <Name value="checkBox6" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.incidentFlag" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.incidentFlag.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.incidentFlag.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-checkbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </CheckBox>
                                            <CheckBox>
                                              <Name value="checkBox7" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.amendmentTypeFlag" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.amendmentTypeFlag.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.amendmentTypeFlag.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-checkbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </CheckBox>
                                            <CheckBox>
                                              <Name value="checkBox8" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.releaseRequested" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.releaseRequested.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.releaseRequested.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-checkbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </CheckBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel18" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <DatePicker>
                                              <Name value="datePicker9" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.releaseRequestDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.releaseRequestDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.releaseRequestDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <TextBox>
                                              <Name value="textBox1" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.otherThingsToReport" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.otherThingsToReport.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.otherThingsToReport.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <DatePicker>
                                              <Name value="datePicker10" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.discrepanciesNotificationDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.discrepanciesNotificationDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.discrepanciesNotificationDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <TextBox>
                                              <Name value="textBox2" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.discrepanciesNotificationText" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.discrepanciesNotificationText.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.discrepanciesNotificationText.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel20" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo2" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.discrepanciesResolved" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.discrepanciesResolved.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.discrepanciesResolved.isRequired()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo3" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.releaseIndicator" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.releaseIndicator.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.releaseIndicator.isRequired()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <DatePicker>
                                              <Name value="datePicker11" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.writeOffDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.writeOffDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.writeOffDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker12" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.declarationSubmissionDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.declarationSubmissionDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.declarationSubmissionDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel26" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo4" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.noReleaseMotivationCode" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.noReleaseMotivationCode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.noReleaseMotivationCode.isRequired()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <TextBox>
                                              <Name value="textBox3" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.noReleaseMotivationText" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.noReleaseMotivationText.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.noReleaseMotivationText.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <DatePicker>
                                              <Name value="datePicker13" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.controlNotificationDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.controlNotificationDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.controlNotificationDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo5" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.notificationType" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.notificationType.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.notificationType.isRequired()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel51" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <DatePicker>
                                              <Name value="datePicker14" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.requestOnNonArrivedMovementDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.requestOnNonArrivedMovementDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.requestOnNonArrivedMovementDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker15" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.limitForResponseDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.limitForResponseDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.limitForResponseDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker16" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.incidentNotificationDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.incidentNotificationDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.incidentNotificationDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo6" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.requestRejectionReasonCode" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.requestRejectionReasonCode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.requestRejectionReasonCode.isRequired()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel53" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <DatePicker>
                                              <Name value="datePicker17" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.arrivalDateAndTimeActual" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.arrivalDateAndTimeActual.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.arrivalDateAndTimeActual.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker18" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.cancelEnquiryNotificationDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.cancelEnquiryNotificationDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.cancelEnquiryNotificationDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <TextBox>
                                              <Name value="textBox4" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.cancelEnquiryNotificationText" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.cancelEnquiryNotificationText.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.cancelEnquiryNotificationText.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <DatePicker>
                                              <Name value="datePicker19" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.recoveryCommunicationDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.recoveryCommunicationDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.recoveryCommunicationDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel58" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <DatePicker>
                                              <Name value="datePicker20" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.passageDate" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.passageDate.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.passageDate.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <DatePicker>
                                              <Name value="datePicker21" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.declarationAcceptanceDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.declarationAcceptanceDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.declarationAcceptanceDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                            <CheckBox>
                                              <Name value="checkBox9" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.IsEDIDeparture" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.IsEDIDeparture.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.IsEDIDeparture.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-checkbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </CheckBox>
                                            <DatePicker>
                                              <Name value="datePicker23" />
                                              <CaptionPosition value="Top" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.TransitOperation.submitDateAndTime" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.submitDateAndTime.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.TransitOperation.submitDateAndTime.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-datepicker" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </DatePicker>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                            <Panel>
                              <Name value="OHRightPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="40%" />
                              <Children>
                                <GroupBox>
                                  <Name value="departureTransportGrp" />
                                  <Caption value="Departure transport means" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel44" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="DepartureTransportMeansCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.DepartureTransportMeans" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_departureTransportMeans" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="DepartureTransportMeansRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel32" />
                                              <Orientation value="Horizontal" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo19" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <ReferenceList reference="+GlobalApiObjects.TypeOfIdentificationOfMeansOfTransport" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="typeOfIdentification" />
                                                    <Binding SourceProperty="Caption" Expression="typeOfIdentification.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="typeOfIdentification.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="textBox50" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="identificationNumber" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="identificationNumber.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="identificationNumber.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo20" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="Code" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="nationality" />
                                                    <Binding SourceProperty="Caption" Expression="nationality.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="nationality.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.DepartureTransportMeans" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_departureTransportMeans" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="countryOfRoutingOfConsignmentGrp" />
                                  <Caption value="Country of routing consignment" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel45" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="CountryOfRoutingOfConsignmentCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.CountryOfRoutingOfConsignment" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_countryOfRoutingOfConsignment" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="CountryOfRoutingOfConsignmentRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel33" />
                                              <Orientation value="Horizontal" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo21" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="100%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="country" />
                                                    <Binding SourceProperty="Caption" Expression="country.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="country.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.CountryOfRoutingOfConsignment" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_countryOfRoutingOfConsignment" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="activeBorderTransportMeansGrp" />
                                  <Caption value="Active border transport means" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel63" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel34" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo22" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="28%" />
                                              <ReferenceList reference="+GlobalApiObjects.TypeOfIdentificationOfMeansOfTransport" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.ActiveBorderTransportMeans.typeOfIdentification" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.ActiveBorderTransportMeans.typeOfIdentification.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._typeOfIdentificationRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <TextBox>
                                              <Name value="textBox52" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="28%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.ActiveBorderTransportMeans.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._typeOfIdentificationRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.ActiveBorderTransportMeans.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo23" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="Code" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.ActiveBorderTransportMeans.nationality" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.ActiveBorderTransportMeans.nationality.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isActiveBorderTransportNationalityRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <TextBox>
                                              <Name value="textBox53" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="29%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.ActiveBorderTransportMeans.conveyanceReferenceNumber" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.ActiveBorderTransportMeans.conveyanceReferenceNumber.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="model._conveyanceReferenceNumberRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel-main" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <Panel>
                          <Name value="pnlCustomsOffice" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isCustomsOfficeVisible" />
                          </Bindings>
                          <Children>
                            <Panel>
                              <Name value="COLeftPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="60%" />
                              <Children>
                                <GroupBox>
                                  <Name value="customsOfficeOfDepartureGrp" />
                                  <Caption value="Customs office of departure" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel54" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                          <Name value="referenceLookup_COofOficeOfDeparture" />
                                          <DataApiObject reference="+GlobalApiObjects.CustomsOfficeDeparture" />
                                          <DisplayMember value="_description" />
                                          <MinChars value="3" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="100%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.CustomsOfficeOfDeparture.referenceNumber" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.CustomsOfficeOfDeparture.referenceNumber.isRequired()" />
                                            <Binding SourceProperty="Caption" Expression="Model.CustomsOfficeOfDeparture.referenceNumber.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-referencelookup" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </ReferenceLookup>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="customsOfficeOfDestinationGrp" />
                                  <Caption value="Customs office of destination" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel55" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                          <Name value="referenceLookup1_COofDestinationDeclared" />
                                          <Caption value="Reference number (declared)" />
                                          <CaptionPosition value="Top" />
                                          <DataApiObject reference="+GlobalApiObjects.CustomsOfficeDestination" />
                                          <DisplayMember value="_description" />
                                          <MinChars value="3" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="40%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.CustomsOfficeOfDestinationDeclared.referenceNumber" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.CustomsOfficeOfDestinationDeclared.referenceNumber.isRequired()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-referencelookup" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </ReferenceLookup>
                                        <ReferenceCombo>
                                          <Name value="referenceCombo7" />
                                          <Caption value="Reference number (actual)" />
                                          <CaptionPosition value="Top" />
                                          <DisplayMember value="_description" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="40%" />
                                          <ReferenceList reference="+GlobalApiObjects.CustomsOfficeDestination" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.CustomsOfficeOfDestinationActual.referenceNumber" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.CustomsOfficeOfDestinationActual.referenceNumber.isRequired()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-referencecombo" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </ReferenceCombo>
                                        <DatePicker>
                                          <Name value="datePicker24" />
                                          <CaptionPosition value="Top" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="20%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.TransitOperation.arrivalDateAndTimeActual" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.arrivalDateAndTimeActual.isRequired()" />
                                            <Binding SourceProperty="Caption" Expression="Model.TransitOperation.arrivalDateAndTimeActual.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-datepicker" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </DatePicker>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                            <Panel>
                              <Name value="CORightPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="40%" />
                              <Children>
                                <GroupBox>
                                  <Name value="customsOfficeOfTransitGrp" />
                                  <Caption value="Customs office of transit" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel72" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <GroupBox>
                                          <Name value="CODeclaredGrp" />
                                          <Caption value="Declared" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel78" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                  <Name value="customsOfficeOfTransitCtrl" />
                                                  <AllowAdd value="True" />
                                                  <AllowRemove value="True" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfTransitDeclared" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfTransit" />
                                                  </Bindings>
                                                </PagingRepeaterCtrl>
                                                <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                  <Name value="customsOfficeOfTransitRpt" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel68" />
                                                      <Orientation value="Vertical" />
                                                      <Children>
                                                        <Panel>
                                                          <Name value="panel70" />
                                                          <Orientation value="Vertical" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo611" />
                                                              <Caption value="Reference number (declared)" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <ReferenceList reference="+GlobalApiObjects.CustomsOfficeTransit" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                            <DatePicker>
                                                              <Name value="datePicker2" />
                                                              <CaptionPosition value="Top" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="arrivalDateAndTimeEstimated" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._isArrivalDateRequired" />
                                                                <Binding SourceProperty="Caption" Expression="arrivalDateAndTimeEstimated.caption()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-datepicker" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </DatePicker>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfTransitDeclared" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfTransit" />
                                                  </Bindings>
                                                </PagingRepeater>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-groupbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </GroupBox>
                                        <GroupBox>
                                          <Name value="COActualGrp" />
                                          <Caption value="Actual" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel79" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                  <Name value="customsOfficeOfTransitActualCtrl" />
                                                  <AllowAdd value="True" />
                                                  <AllowRemove value="True" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfTransitActual" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfTransitActual" />
                                                  </Bindings>
                                                </PagingRepeaterCtrl>
                                                <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                  <Name value="customsOfficeOfTransitActualRpt" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel80" />
                                                      <Orientation value="Vertical" />
                                                      <Children>
                                                        <Panel>
                                                          <Name value="panel82" />
                                                          <Orientation value="Vertical" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo61" />
                                                              <Caption value="Reference number (actual)" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <ReferenceList reference="+GlobalApiObjects.CustomsOfficeTransit" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfTransitActual" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfTransitActual" />
                                                  </Bindings>
                                                </PagingRepeater>
                                                <DatePicker>
                                                  <Name value="datePicker25" />
                                                  <CaptionPosition value="Top" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="100%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.TransitOperation.passageDate" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.TransitOperation.passageDate.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.TransitOperation.passageDate.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-datepicker" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </DatePicker>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-groupbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </GroupBox>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="customsOfficeOfExitTransitGrp" />
                                  <Caption value="Customs office of exit transit" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel73" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <GroupBox>
                                          <Name value="COEDeclared" />
                                          <Caption value="Declared" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel76" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                  <Name value="customsOfficeOfExitTransitCtrl" />
                                                  <AllowAdd value="True" />
                                                  <AllowRemove value="True" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfExitForTransitDeclared" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfExitTransit" />
                                                  </Bindings>
                                                </PagingRepeaterCtrl>
                                                <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                  <Name value="customsOfficeOfExitTransitRpt" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel74" />
                                                      <Orientation value="Vertical" />
                                                      <Children>
                                                        <Panel>
                                                          <Name value="panel69" />
                                                          <Orientation value="Horizontal" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo621" />
                                                              <Caption value="Reference number (declared)" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <ReferenceList reference="+GlobalApiObjects.CustomsOfficeTransitExit" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfExitForTransitDeclared" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfExitTransit" />
                                                  </Bindings>
                                                </PagingRepeater>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-groupbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </GroupBox>
                                        <GroupBox>
                                          <Name value="COEActual" />
                                          <Caption value="Actual" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel77" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                  <Name value="customsOfficeOfExitTransitActualCtrl" />
                                                  <AllowAdd value="True" />
                                                  <AllowRemove value="True" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfExitForTransitActual" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfExitTransitActual" />
                                                  </Bindings>
                                                </PagingRepeaterCtrl>
                                                <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                  <Name value="customsOfficeOfExitTransitActualRpt" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel67" />
                                                      <Orientation value="Horizontal" />
                                                      <Children>
                                                        <Panel>
                                                          <Name value="panel75" />
                                                          <Orientation value="Horizontal" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo622" />
                                                              <Caption value="Reference number (actual)" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="100%" />
                                                              <ReferenceList reference="+GlobalApiObjects.CustomsOfficeTransitExit" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="form.Model.CustomsOfficeOfExitForTransitActual" />
                                                    <Binding SourceProperty="Index" Expression="form.modelState._index_customsOfficeOfExitTransitActual" />
                                                  </Bindings>
                                                </PagingRepeater>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-groupbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </GroupBox>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel-main" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <Panel>
                          <Name value="pnlEntities" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isEntitiesVisible" />
                          </Bindings>
                          <Children>
                            <Panel>
                              <Name value="ENLeftPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="60%" />
                              <Children>
                                <GroupBox>
                                  <Name value="holderOfTheTransitGrp" />
                                  <Caption value="Holder of the transit procedure" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel71" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="HolderRow11" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox7" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.HolderOfTheTransitProcedure.identificationNumber.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox9" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="60%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.HolderOfTheTransitProcedure.name.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.name.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox8" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="20%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.TIRHolderIdentificationNumber" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.TIRHolderIdentificationNumber.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="model._TIRRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="HolderRow12" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox10" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.Address.streetAndNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model.HolderOfTheTransitProcedure.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.Address.streetAndNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox13" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.Address.postcode" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.Address.postcode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isPostcodeBased" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox14" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.Address.city" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model.HolderOfTheTransitProcedure.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.Address.city.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo9" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="Code" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesWithAddress" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.Address.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.Address.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model.HolderOfTheTransitProcedure.Address.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="HolderRow13" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox15" />
                                              <Caption value="Contact person name" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model.HolderOfTheTransitProcedure.ContactPerson.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox16" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.phoneNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model.HolderOfTheTransitProcedure.ContactPerson.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.phoneNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox17" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.eMailAddress" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.eMailAddress.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.HolderOfTheTransitProcedure.ContactPerson.eMailAddress.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="HolderRow14" />
                                          <Orientation value="Vertical" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <GroupBox>
                                              <Name value="AuthorisationGrp" />
                                              <Caption value="Authorisation" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel9" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                      <Name value="AuthorisationCtrl" />
                                                      <AllowAdd value="True" />
                                                      <AllowRemove value="True" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Authorisation" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_authorisation" />
                                                      </Bindings>
                                                    </PagingRepeaterCtrl>
                                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                      <Name value="AuthorisationRpt" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel761" />
                                                          <Orientation value="Vertical" />
                                                          <Children>
                                                            <Panel>
                                                              <Name value="panel771" />
                                                              <Orientation value="Horizontal" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Children>
                                                                <ReferenceCombo>
                                                                  <Name value="referenceCombo81" />
                                                                  <CaptionPosition value="Top" />
                                                                  <DisplayMember value="Code" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <ReferenceList reference="+GlobalApiObjects.AuthorisationTypeDeparture" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="type" />
                                                                    <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-referencecombo" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </ReferenceCombo>
                                                                <TextBox>
                                                                  <Name value="textBox610" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                                    <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Authorisation" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_authorisation" />
                                                      </Bindings>
                                                    </PagingRepeater>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-groupbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </GroupBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="representativeGrp" />
                                  <Caption value="Representative" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel81" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="RepresentativeRow11" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox18" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Representative.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Representative.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Representative.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo10" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <ReferenceList reference="+GlobalApiObjects.RepresentativeStatusCode" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Representative.status" />
                                                <Binding SourceProperty="Caption" Expression="Model.Representative.status.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Representative.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="RepresentativeRow12" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox19" />
                                              <Caption value="Contact person name" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Representative.ContactPerson.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Representative.ContactPerson.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox20" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Representative.ContactPerson.phoneNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Representative.ContactPerson.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Representative.ContactPerson.phoneNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox21" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Representative.ContactPerson.eMailAddress" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Representative.ContactPerson.eMailAddress.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Representative.ContactPerson.eMailAddress.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                            <Panel>
                              <Name value="ENRightPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="40%" />
                              <Children>
                                <GroupBox>
                                  <Name value="consignorGrp" />
                                  <Caption value="Consignor" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel5" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="ConsignorRow11" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="consignorIdentificationNumber" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.identificationNumber.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consignorName" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="75%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.name.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.name.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="ConsignorRow12" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="consignorStreetAndNumber" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.Address.streetAndNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.Address.streetAndNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consignorPostcode" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.Address.postcode" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.Address.postcode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isPostcodeBasedConsignor" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consignorCity" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.Address.city" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.Address.city.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="consignorCountry" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="Code" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesWithAddress" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.Address.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.Address.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.Address.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="ConsignotRow13" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="consignorContactName" />
                                              <Caption value="Contact person name" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.ContactPerson.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.ContactPerson.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consignorContactPhone" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.ContactPerson.phoneNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.ContactPerson.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.ContactPerson.phoneNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consignorContactEmail" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignor.ContactPerson.eMailAddress" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignor.ContactPerson.eMailAddress.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignor.ContactPerson.eMailAddress.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="consigneeGrp" />
                                  <Caption value="Consignee" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel8" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel57" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="consigneeIdentification" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._consigneeIdentificationNumberRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.identificationNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consigneeName" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="75%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.name" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignee.name.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.name.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel19" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="consigneeStreet" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.Address.streetAndNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignee.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.Address.streetAndNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consigneePostcode" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.Address.postcode" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._isPostcodeBasedConsignee" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.Address.postcode.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="consigneeCity" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="35%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.Address.city" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignee.Address.hasValue()" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.Address.city.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="consigneeCountry" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="Code" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="15%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesWithAddress" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.Consignee.Address.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.Consignee.Address.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Consignee.Address.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="carrierGrp" />
                                  <Caption value="Carrier" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel56" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <TextBox>
                                          <Name value="identificationNumber" />
                                          <CaptionPosition value="Top" />
                                          <CaptionVAlign value="Middle" />
                                          <Panel.Height value="#" />
                                          <Panel.VerticalAlignment value="Bottom" />
                                          <Panel.Width value="15%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.Consignment.Carrier.identificationNumber" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Carrier.hasValue()" />
                                            <Binding SourceProperty="Caption" Expression="Model.Consignment.Carrier.identificationNumber.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-textbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </TextBox>
                                        <TextBox>
                                          <Name value="contactPersonName" />
                                          <CaptionPosition value="Top" />
                                          <CaptionVAlign value="Middle" />
                                          <Panel.Height value="#" />
                                          <Panel.VerticalAlignment value="Bottom" />
                                          <Panel.Width value="29%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.Consignment.Carrier.ContactPerson.name" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Carrier.ContactPerson.hasValue()" />
                                            <Binding SourceProperty="Caption" Expression="Model.Consignment.Carrier.ContactPerson.name.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-textbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </TextBox>
                                        <TextBox>
                                          <Name value="contactPersonEmailAdress" />
                                          <CaptionPosition value="Top" />
                                          <CaptionVAlign value="Middle" />
                                          <Panel.Height value="#" />
                                          <Panel.VerticalAlignment value="Bottom" />
                                          <Panel.Width value="28%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.Consignment.Carrier.ContactPerson.eMailAddress" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Carrier.ContactPerson.eMailAddress.isRequired()" />
                                            <Binding SourceProperty="Caption" Expression="Model.Consignment.Carrier.ContactPerson.eMailAddress.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-textbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </TextBox>
                                        <TextBox>
                                          <Name value="contactPersonPhoneNumber" />
                                          <CaptionPosition value="Top" />
                                          <CaptionVAlign value="Middle" />
                                          <Panel.Height value="#" />
                                          <Panel.VerticalAlignment value="Bottom" />
                                          <Panel.Width value="28%" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="Model.Consignment.Carrier.ContactPerson.phoneNumber" />
                                            <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.Carrier.ContactPerson.hasValue()" />
                                            <Binding SourceProperty="Caption" Expression="Model.Consignment.Carrier.ContactPerson.phoneNumber.caption()" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-textbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </TextBox>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="additionalSupplyChainActorGrp" />
                                  <Caption value="Additional supply chain actor" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel42" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="additionalSupplyChainActorCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalSupplyChainActor" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalSupplyChainActor" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="additionalSupplyChainActorRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel21" />
                                              <Orientation value="Horizontal" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="ASCARole" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <ReferenceList reference="+GlobalApiObjects.AdditionalSupplyChainActorRoleCode" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="role" />
                                                    <Binding SourceProperty="Caption" Expression="role.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="role.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="ASCAIdentificationNumber" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="identificationNumber" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="identificationNumber.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="identificationNumber.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalSupplyChainActor" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalSupplyChainActor" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel-main" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <Panel>
                          <Name value="pnlGuarantee" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isGuaranteeVisible" />
                          </Bindings>
                          <Children>
                            <GroupBox>
                              <Name value="guaranteeGrp" />
                              <Caption value="Guarantee" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <Content>
                                <Panel>
                                  <Name value="panel14" />
                                  <Orientation value="Vertical" />
                                  <Children>
                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                      <Name value="guaranteeCtrl" />
                                      <AllowAdd value="True" />
                                      <AllowRemove value="True" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="form.Model.Guarantee" />
                                        <Binding SourceProperty="Index" Expression="form.modelState._index_guarantee" />
                                      </Bindings>
                                    </PagingRepeaterCtrl>
                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                      <Name value="guaranteeRpt" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel52" />
                                          <Orientation value="Horizontal" />
                                          <Children>
                                            <Panel>
                                              <Name value="GURightPnl" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="60%" />
                                              <Children>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo1" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="_description" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <ReferenceList reference="+GlobalApiObjects.GuaranteeType" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="guaranteeType" />
                                                    <Binding SourceProperty="Caption" Expression="guaranteeType.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="guaranteeType.isRequired()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="textBox5" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="otherGuaranteeReference" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="otherGuaranteeReference.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="otherGuaranteeReference.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                            <Panel>
                                              <Name value="GULeftPnl" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="40%" />
                                              <Children>
                                                <GroupBox>
                                                  <Name value="guaranteeReferenceGrp" />
                                                  <Caption value="Guarantee reference" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Content>
                                                    <Panel>
                                                      <Name value="panel84" />
                                                      <Orientation value="Vertical" />
                                                      <Children>
                                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                          <Name value="guaranteeReferenceCtrl" />
                                                          <AllowAdd value="True" />
                                                          <AllowRemove value="True" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="GuaranteeReference" />
                                                            <Binding SourceProperty="Index" Expression="form.modelState._index_guaranteeReference" />
                                                          </Bindings>
                                                        </PagingRepeaterCtrl>
                                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                          <Name value="guaranteeReferenceRpt" />
                                                          <Panel.Height value="#" />
                                                          <Panel.Width value="*" />
                                                          <Content>
                                                            <Panel>
                                                              <Name value="panel87" />
                                                              <Orientation value="Vertical" />
                                                              <Children>
                                                                <Panel>
                                                                  <Name value="panel85" />
                                                                  <Orientation value="Horizontal" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.Width value="*" />
                                                                  <Children>
                                                                    <TextBox>
                                                                      <Name value="textBox23" />
                                                                      <CaptionPosition value="Top" />
                                                                      <CaptionVAlign value="Middle" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="50%" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="GRN" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._GRNRequired" />
                                                                        <Binding SourceProperty="Caption" Expression="GRN.caption()" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-textbox" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </TextBox>
                                                                    <TextBox>
                                                                      <Name value="textBox24" />
                                                                      <CaptionPosition value="Top" />
                                                                      <CaptionVAlign value="Middle" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="50%" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="accessCode" />
                                                                        <Binding SourceProperty="Caption" Expression="accessCode.caption()" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._GRNRequired" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-textbox" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </TextBox>
                                                                  </Children>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-panel" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </Panel>
                                                                <Panel>
                                                                  <Name value="panel110" />
                                                                  <Orientation value="Horizontal" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.Width value="*" />
                                                                  <Children>
                                                                    <TextBox>
                                                                      <Name value="textBox25" />
                                                                      <CaptionPosition value="Top" />
                                                                      <CaptionVAlign value="Middle" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="50%" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="amountToBeCovered" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._amountToBeCoveredRequired" />
                                                                        <Binding SourceProperty="Caption" Expression="amountToBeCovered.caption()" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-textbox" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </TextBox>
                                                                    <ReferenceCombo>
                                                                      <Name value="referenceCombo11" />
                                                                      <CaptionPosition value="Top" />
                                                                      <DisplayMember value="_description" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="50%" />
                                                                      <ReferenceList reference="+GlobalApiObjects.CurrencyCodes" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="currency" />
                                                                        <Binding SourceProperty="Caption" Expression="currency.caption()" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="currency.isRequired()" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-referencecombo" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </ReferenceCombo>
                                                                  </Children>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-panel" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </Panel>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                          </Content>
                                                          <Bindings>
                                                            <Binding SourceProperty="Data" Expression="GuaranteeReference" />
                                                            <Binding SourceProperty="Index" Expression="form.modelState._index_guaranteeReference" />
                                                          </Bindings>
                                                        </PagingRepeater>
                                                      </Children>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-panel" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </Panel>
                                                  </Content>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-groupbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </GroupBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel-main" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="form.Model.Guarantee" />
                                        <Binding SourceProperty="Index" Expression="form.modelState._index_guarantee" />
                                      </Bindings>
                                    </PagingRepeater>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Content>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-groupbox" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </GroupBox>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel-main" />
                              <Condition value="False" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <Panel>
                          <Name value="pnlConsignment" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isConsignmentVisible" />
                          </Bindings>
                          <Children>
                            <Panel>
                              <Name value="CNLeftPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="60%" />
                              <Children>
                                <GroupBox>
                                  <Name value="transportEquipmentGrp" />
                                  <Caption value="Transport equipment" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel43" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="transportEquipmentCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.TransportEquipment" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_transportEquipment" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="transportEquipmentRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel59" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <Panel>
                                                  <Name value="panel22" />
                                                  <Orientation value="Horizontal" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Children>
                                                    <TextBox>
                                                      <Name value="textBox30" />
                                                      <Caption value="Container identification number" />
                                                      <CaptionPosition value="Top" />
                                                      <CaptionVAlign value="Middle" />
                                                      <Panel.Height value="#" />
                                                      <Panel.VerticalAlignment value="Bottom" />
                                                      <Panel.Width value="50%" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="containerIdentificationNumber" />
                                                      </Bindings>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-textbox" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </TextBox>
                                                    <TextBox>
                                                      <Name value="textBox31" />
                                                      <Caption value="Number of seals" />
                                                      <CaptionPosition value="Top" />
                                                      <CaptionVAlign value="Middle" />
                                                      <Panel.Height value="#" />
                                                      <Panel.VerticalAlignment value="Bottom" />
                                                      <Panel.Width value="50%" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="numberOfSeals" />
                                                      </Bindings>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-textbox" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </TextBox>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                                <Panel>
                                                  <Name value="panel60" />
                                                  <Orientation value="Horizontal" />
                                                  <Panel.Height value="#" />
                                                  <Panel.Width value="*" />
                                                  <Children>
                                                    <GroupBox>
                                                      <Name value="sealGrp" />
                                                      <Caption value="Seal" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="50%" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel86" />
                                                          <Orientation value="Vertical" />
                                                          <Children>
                                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                              <Name value="sealCtrl" />
                                                              <AllowAdd value="True" />
                                                              <AllowRemove value="True" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="Seal" />
                                                                <Binding SourceProperty="Index" Expression="form.modelState._index_seal" />
                                                              </Bindings>
                                                            </PagingRepeaterCtrl>
                                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                              <Name value="sealRpt" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Content>
                                                                <Panel>
                                                                  <Name value="panel23" />
                                                                  <Orientation value="Horizontal" />
                                                                  <Children>
                                                                    <TextBox>
                                                                      <Name value="textBox33" />
                                                                      <CaptionPosition value="Top" />
                                                                      <CaptionVAlign value="Middle" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="100%" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="identifier" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="identifier.isRequired()" />
                                                                        <Binding SourceProperty="Caption" Expression="identifier.caption()" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-textbox" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </TextBox>
                                                                  </Children>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-panel" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </Panel>
                                                              </Content>
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="Seal" />
                                                                <Binding SourceProperty="Index" Expression="form.modelState._index_seal" />
                                                              </Bindings>
                                                            </PagingRepeater>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-groupbox" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </GroupBox>
                                                    <GroupBox>
                                                      <Name value="goodsReferenceGrp" />
                                                      <Caption value="Goods reference" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="50%" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel88" />
                                                          <Orientation value="Vertical" />
                                                          <Children>
                                                            <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                              <Name value="goodsReferenceCtrl" />
                                                              <AllowAdd value="True" />
                                                              <AllowRemove value="True" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="GoodsReference" />
                                                                <Binding SourceProperty="Index" Expression="form.modelState._index_goodsReference" />
                                                              </Bindings>
                                                            </PagingRepeaterCtrl>
                                                            <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                              <Name value="goodsReferenceRpt" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Content>
                                                                <Panel>
                                                                  <Name value="panel24" />
                                                                  <Orientation value="Horizontal" />
                                                                  <Children>
                                                                    <TextBox>
                                                                      <Name value="textBox35" />
                                                                      <CaptionPosition value="Top" />
                                                                      <CaptionVAlign value="Middle" />
                                                                      <Panel.Height value="#" />
                                                                      <Panel.VerticalAlignment value="Bottom" />
                                                                      <Panel.Width value="100%" />
                                                                      <Bindings>
                                                                        <Binding SourceProperty="Data" Expression="declarationGoodsItemNumber" />
                                                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="declarationGoodsItemNumber.isRequired()" />
                                                                        <Binding SourceProperty="Caption" Expression="declarationGoodsItemNumber.caption()" />
                                                                      </Bindings>
                                                                      <CssClass>
                                                                        <CssClassConditional>
                                                                          <ClassName value="{theme}-textbox" />
                                                                          <IsThemedStyle value="True" />
                                                                        </CssClassConditional>
                                                                      </CssClass>
                                                                    </TextBox>
                                                                  </Children>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-panel" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </Panel>
                                                              </Content>
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="GoodsReference" />
                                                                <Binding SourceProperty="Index" Expression="form.modelState._index_goodsReference" />
                                                              </Bindings>
                                                            </PagingRepeater>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <CssClass>
                                                        <CssClassConditional>
                                                          <ClassName value="{theme}-groupbox" />
                                                          <IsThemedStyle value="True" />
                                                        </CssClassConditional>
                                                      </CssClass>
                                                    </GroupBox>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.TransportEquipment" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_transportEquipment" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="locationOfGoodsGrp" />
                                  <Caption value="Location of goods" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel25" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel61" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo13" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.TypeOfLocation" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.typeOfLocation" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.typeOfLocation.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.LocationOfGoods.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo14" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.QualifierOfTheIdentification" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.qualifierOfIdentification" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.qualifierOfIdentification.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model.Consignment.LocationOfGoods.hasValue()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                            <TextBox>
                                              <Name value="textBox36" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.authorisationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_authorisationNumberRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.authorisationNumber.caption()" />
                                                <Binding SourceProperty="IsVisible" Expression="form.Model._Log_authorisationNumberEnabled" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox37" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.additionalIdentifier" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.additionalIdentifier.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="Model._additionalIdentifierRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel62" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                              <Name value="referenceLookup_CustomsOffice" />
                                              <CaptionPosition value="Top" />
                                              <DataApiObject reference="+GlobalApiObjects.CustomsOfficeDeparture" />
                                              <DisplayMember value="_description" />
                                              <MinChars value="3" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.CustomsOffice.referenceNumber" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.CustomsOffice.referenceNumber.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_CustomsOfficeRequired" />
                                                <Binding SourceProperty="IsVisible" Expression="form.Model._Log_CustomsOfficeEnabled" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencelookup" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceLookup>
                                            <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                              <Name value="referenceLookup_UNLocode1" />
                                              <CaptionPosition value="Top" />
                                              <DataApiObject reference="+GlobalApiObjects.UnLocodeExtended" />
                                              <DisplayMember value="_description" />
                                              <MinChars value="2" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="50%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.UNLocode" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.UNLocode.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_unxlocodeRequired" />
                                                <Binding SourceProperty="IsVisible" Expression="form.Model._Log_unxlocodeEnabled" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencelookup" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceLookup>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <GroupBox>
                                          <Name value="GNSSGrp" />
                                          <Caption value="GNSS" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel27" />
                                              <Orientation value="Horizontal" />
                                              <Children>
                                                <TextBox>
                                                  <Name value="textBox38" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.GNSS.latitude" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_GNSSRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.GNSS.latitude.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                                <TextBox>
                                                  <Name value="textBox39" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="50%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.GNSS.longitude" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_GNSSRequired" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.GNSS.longitude.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="IsVisible" Expression="form.Model._Log_GNSSEnabled" />
                                          </Bindings>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-groupbox" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </GroupBox>
                                        <Panel>
                                          <Name value="panel28" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox40" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="300px" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.EconomicOperator.identificationNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_EconomicOperatorRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.EconomicOperator.identificationNumber.caption()" />
                                                <Binding SourceProperty="IsVisible" Expression="form.Model._Log_EconomicOperatorEnabled" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel29" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="IsVisible" Expression="form.Model._Log_AddressRequiredEnabled" />
                                          </Bindings>
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox41" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.Address.streetAndNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_AddressRequiredRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.Address.streetAndNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox42" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.Address.postcode" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._isLocationOfGoodsPostcodeRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.Address.postcode.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox43" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.Address.city" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_AddressRequiredRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.Address.city.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo17" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="25%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryCodesCommonTransit" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.Address.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.Address.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_AddressRequiredRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel30" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="IsVisible" Expression="form.Model._Log_AdressTEnabled" />
                                          </Bindings>
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox44" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.AddressT.houseNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._isHouseNumberAddressTRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.AddressT.houseNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox45" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.AddressT.postcode" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_AdressTRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.AddressT.postcode.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <ReferenceCombo>
                                              <Name value="referenceCombo18" />
                                              <CaptionPosition value="Top" />
                                              <DisplayMember value="_description" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <ReferenceList reference="+GlobalApiObjects.CountryAddressPostcodeBased" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.AddressT.country" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.AddressT.country.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_AdressTRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-referencecombo" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </ReferenceCombo>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel31" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="IsVisible" Expression="form.Model._Log_ContactPersonEnabled" />
                                          </Bindings>
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox46" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.ContactPerson.name" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.ContactPerson.name.caption()" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_ContactPersonRequired" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox47" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.ContactPerson.phoneNumber" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_ContactPersonRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.ContactPerson.phoneNumber.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                            <TextBox>
                                              <Name value="textBox48" />
                                              <CaptionPosition value="Top" />
                                              <CaptionVAlign value="Middle" />
                                              <Panel.Height value="#" />
                                              <Panel.VerticalAlignment value="Bottom" />
                                              <Panel.Width value="33%" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="Model.Consignment.LocationOfGoods.ContactPerson.eMailAddress" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.Model._Log_ContactPersonRequired" />
                                                <Binding SourceProperty="Caption" Expression="Model.Consignment.LocationOfGoods.ContactPerson.eMailAddress.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <Panel>
                                  <Name value="placeGrp" />
                                  <Orientation value="Horizontal" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <GroupBox>
                                      <Name value="placeOfLoadingGrp" />
                                      <Caption value="Place of loading" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="50%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel64" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <Panel>
                                              <Name value="panel35" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                  <Name value="referenceLookup_UNLocode2" />
                                                  <CaptionPosition value="Top" />
                                                  <DataApiObject reference="+GlobalApiObjects.UnLocodeExtended" />
                                                  <DisplayMember value="_description" />
                                                  <MinChars value="2" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfLoading.UNLocode.caption()" />
                                                    <Binding SourceProperty="IsVisible" Expression="form.Model._Log_unxlocodeEnabled" />
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfLoading.UNLocode" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencelookup" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceLookup>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo25" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="Code" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfLoading.country" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfLoading.country.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="NOT Model.Consignment.PlaceOfLoading.UNLocode.hasValue()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="textBox54" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfLoading.location" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="NOT Model.Consignment.PlaceOfLoading.UNLocode.hasValue()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfLoading.location.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                    <GroupBox>
                                      <Name value="placeOfUnloadingGrp" />
                                      <Caption value="Place of unloading" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="50%" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel65" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <Panel>
                                              <Name value="panel36" />
                                              <Orientation value="Horizontal" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Children>
                                                <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                  <Name value="referenceLookup_UNLocode3" />
                                                  <CaptionPosition value="Top" />
                                                  <DataApiObject reference="+GlobalApiObjects.UnLocodeExtended" />
                                                  <DisplayMember value="_description" />
                                                  <MinChars value="2" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfUnloading.UNLocode.caption()" />
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfUnloading.UNLocode" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencelookup" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceLookup>
                                                <ReferenceCombo>
                                                  <Name value="referenceCombo27" />
                                                  <CaptionPosition value="Top" />
                                                  <DisplayMember value="Code" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="20%" />
                                                  <ReferenceList reference="+GlobalApiObjects.CountryCodesFullList" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfUnloading.country" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfUnloading.country.caption()" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="NOT Model.Consignment.PlaceOfUnLoading.UNLocode.hasValue()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencecombo" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceCombo>
                                                <TextBox>
                                                  <Name value="textBox55" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="40%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="Model.Consignment.PlaceOfUnloading.location" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="NOT Model.Consignment.PlaceOfUnLoading.UNLocode.hasValue()" />
                                                    <Binding SourceProperty="Caption" Expression="Model.Consignment.PlaceOfUnloading.location.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-groupbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </GroupBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                            <Panel>
                              <Name value="CNRightPnl" />
                              <Orientation value="Vertical" />
                              <Panel.Height value="#" />
                              <Panel.Width value="40%" />
                              <Children>
                                <GroupBox>
                                  <Name value="documentsPnl" />
                                  <Caption value="Documents" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel7" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <Panel>
                                          <Name value="panel6" />
                                          <Orientation value="Vertical" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <GroupBox>
                                              <Name value="previousDocumentGrp" />
                                              <Caption value="Previous document" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="100%" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel46" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                      <Name value="PreviousDocumentCtrl" />
                                                      <AllowAdd value="True" />
                                                      <AllowRemove value="True" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.PreviousDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_previousDocument" />
                                                      </Bindings>
                                                    </PagingRepeaterCtrl>
                                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                      <Name value="PreviousDocumentRpt" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel13" />
                                                          <Orientation value="Vertical" />
                                                          <Children>
                                                            <Panel>
                                                              <Name value="panel37" />
                                                              <Orientation value="Horizontal" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Children>
                                                                <ReferenceCombo>
                                                                  <Name value="referenceCombo28" />
                                                                  <CaptionPosition value="Top" />
                                                                  <DisplayMember value="_description" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <ReferenceList reference="+GlobalApiObjects.PreviousDocumentType" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="type" />
                                                                    <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-referencecombo" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </ReferenceCombo>
                                                                <TextBox>
                                                                  <Name value="textBox57" />
                                                                  <Caption value="Reference number" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                            <Panel>
                                                              <Name value="panel310" />
                                                              <Orientation value="Horizontal" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Children>
                                                                <TextBox>
                                                                  <Name value="textBox58" />
                                                                  <Caption value="Complement of information" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="100%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="complementOfInformation" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complementOfInformation.isRequired()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.PreviousDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_previousDocument" />
                                                      </Bindings>
                                                    </PagingRepeater>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-groupbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </GroupBox>
                                            <GroupBox>
                                              <Name value="supportingDocumentGrp" />
                                              <Caption value="Supporting document" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="100%" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel47" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                      <Name value="SupportingDocumentCtrl" />
                                                      <AllowAdd value="True" />
                                                      <AllowRemove value="True" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.SupportingDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_supportingDocument" />
                                                      </Bindings>
                                                    </PagingRepeaterCtrl>
                                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                      <Name value="SupportingDocumentRpt" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel66" />
                                                          <Orientation value="Vertical" />
                                                          <Children>
                                                            <Panel>
                                                              <Name value="panel38" />
                                                              <Orientation value="Horizontal" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Children>
                                                                <ReferenceCombo>
                                                                  <Name value="referenceCombo29" />
                                                                  <CaptionPosition value="Top" />
                                                                  <DisplayMember value="_description" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <ReferenceList reference="+GlobalApiObjects.SupportingDocumentType" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="type" />
                                                                    <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-referencecombo" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </ReferenceCombo>
                                                                <TextBox>
                                                                  <Name value="textBox60" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                                    <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                            <Panel>
                                                              <Name value="panel111" />
                                                              <Orientation value="Horizontal" />
                                                              <Panel.Height value="#" />
                                                              <Panel.Width value="*" />
                                                              <Children>
                                                                <TextBox>
                                                                  <Name value="textBox61" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="documentLineItemNumber" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="documentLineItemNumber.isRequired()" />
                                                                    <Binding SourceProperty="Caption" Expression="documentLineItemNumber.caption()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                                <TextBox>
                                                                  <Name value="textBox62" />
                                                                  <CaptionPosition value="Top" />
                                                                  <CaptionVAlign value="Middle" />
                                                                  <Panel.Height value="#" />
                                                                  <Panel.VerticalAlignment value="Bottom" />
                                                                  <Panel.Width value="50%" />
                                                                  <Bindings>
                                                                    <Binding SourceProperty="Data" Expression="complementOfInformation" />
                                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complementOfInformation.isRequired()" />
                                                                    <Binding SourceProperty="Caption" Expression="complementOfInformation.caption()" />
                                                                  </Bindings>
                                                                  <CssClass>
                                                                    <CssClassConditional>
                                                                      <ClassName value="{theme}-textbox" />
                                                                      <IsThemedStyle value="True" />
                                                                    </CssClassConditional>
                                                                  </CssClass>
                                                                </TextBox>
                                                              </Children>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-panel" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </Panel>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.SupportingDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_supportingDocument" />
                                                      </Bindings>
                                                    </PagingRepeater>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-groupbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </GroupBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                        <Panel>
                                          <Name value="panel12" />
                                          <Orientation value="Horizontal" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Children>
                                            <GroupBox>
                                              <Name value="transportDocumentGrp" />
                                              <Caption value="Transport document" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="50%" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel48" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                      <Name value="transportDocumentCtrl" />
                                                      <AllowAdd value="True" />
                                                      <AllowRemove value="True" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.TransportDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_transportDocument" />
                                                      </Bindings>
                                                    </PagingRepeaterCtrl>
                                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                      <Name value="transportDocumentRpt" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel39" />
                                                          <Orientation value="Horizontal" />
                                                          <Children>
                                                            <ReferenceCombo>
                                                              <Name value="referenceCombo30" />
                                                              <CaptionPosition value="Top" />
                                                              <DisplayMember value="_description" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="70%" />
                                                              <ReferenceList reference="+GlobalApiObjects.TransportDocumentType" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="type" />
                                                                <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencecombo" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceCombo>
                                                            <TextBox>
                                                              <Name value="textBox64" />
                                                              <CaptionPosition value="Top" />
                                                              <CaptionVAlign value="Middle" />
                                                              <InputType value="Numeric" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="30%" />
                                                              <TextAlign value="Right" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                                <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-textbox" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </TextBox>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.TransportDocument" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_transportDocument" />
                                                      </Bindings>
                                                    </PagingRepeater>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-groupbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </GroupBox>
                                            <GroupBox>
                                              <Name value="additionalReferenceGrp" />
                                              <Caption value="Additional reference" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="50%" />
                                              <Content>
                                                <Panel>
                                                  <Name value="panel49" />
                                                  <Orientation value="Vertical" />
                                                  <Children>
                                                    <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                                      <Name value="additionalReferenceCtrl" />
                                                      <AllowAdd value="True" />
                                                      <AllowRemove value="True" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalReference" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_additionalReference" />
                                                      </Bindings>
                                                    </PagingRepeaterCtrl>
                                                    <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                                      <Name value="additionalReferenceRpt" />
                                                      <Panel.Height value="#" />
                                                      <Panel.Width value="*" />
                                                      <Content>
                                                        <Panel>
                                                          <Name value="panel40" />
                                                          <Orientation value="Horizontal" />
                                                          <Children>
                                                            <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                              <Name value="referenceLookup_AdditionalReference" />
                                                              <CaptionPosition value="Top" />
                                                              <DataApiObject reference="+GlobalApiObjects.AdditionalReference" />
                                                              <DisplayMember value="_description" />
                                                              <MinChars value="2" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="50%" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="type" />
                                                                <Binding SourceProperty="Caption" Expression="type.caption()" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-referencelookup" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </ReferenceLookup>
                                                            <TextBox>
                                                              <Name value="textBox66" />
                                                              <CaptionPosition value="Top" />
                                                              <CaptionVAlign value="Middle" />
                                                              <Panel.Height value="#" />
                                                              <Panel.VerticalAlignment value="Bottom" />
                                                              <Panel.Width value="50%" />
                                                              <Bindings>
                                                                <Binding SourceProperty="Data" Expression="referenceNumber" />
                                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="referenceNumber.isRequired()" />
                                                                <Binding SourceProperty="Caption" Expression="referenceNumber.caption()" />
                                                              </Bindings>
                                                              <CssClass>
                                                                <CssClassConditional>
                                                                  <ClassName value="{theme}-textbox" />
                                                                  <IsThemedStyle value="True" />
                                                                </CssClassConditional>
                                                              </CssClass>
                                                            </TextBox>
                                                          </Children>
                                                          <CssClass>
                                                            <CssClassConditional>
                                                              <ClassName value="{theme}-panel" />
                                                              <IsThemedStyle value="True" />
                                                            </CssClassConditional>
                                                          </CssClass>
                                                        </Panel>
                                                      </Content>
                                                      <Bindings>
                                                        <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalReference" />
                                                        <Binding SourceProperty="Index" Expression="form.modelState._index_additionalReference" />
                                                      </Bindings>
                                                    </PagingRepeater>
                                                  </Children>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-panel" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </Panel>
                                              </Content>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-groupbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </GroupBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                                <GroupBox>
                                  <Name value="additionalInformationGrp" />
                                  <Caption value="Additional information" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel50" />
                                      <Orientation value="Vertical" />
                                      <Children>
                                        <PagingRepeaterCtrl identity="PagingRepeaterCtrl.280e5bd891d54eda9e7c2bfaaf9e4af4">
                                          <Name value="additionalInformationCtrl" />
                                          <AllowAdd value="True" />
                                          <AllowRemove value="True" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalInformation" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalInformation" />
                                          </Bindings>
                                        </PagingRepeaterCtrl>
                                        <PagingRepeater identity="pagingRepeater.36d02d015fb0460b9372e4a46959c4bf">
                                          <Name value="additionalInformationRpt" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="*" />
                                          <Content>
                                            <Panel>
                                              <Name value="panel41" />
                                              <Orientation value="Vertical" />
                                              <Children>
                                                <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
                                                  <Name value="referenceLookup_codeAddInfo" />
                                                  <CaptionPosition value="Top" />
                                                  <DataApiObject reference="+GlobalApiObjects.AdditionalInformation" />
                                                  <DisplayMember value="_description" />
                                                  <MinChars value="2" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="100%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="code" />
                                                    <Binding SourceProperty="Caption" Expression="code.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-referencelookup" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </ReferenceLookup>
                                                <TextBox>
                                                  <Name value="textBox68" />
                                                  <CaptionPosition value="Top" />
                                                  <CaptionVAlign value="Middle" />
                                                  <InputType value="Multiline" />
                                                  <Panel.Height value="#" />
                                                  <Panel.VerticalAlignment value="Bottom" />
                                                  <Panel.Width value="100%" />
                                                  <Bindings>
                                                    <Binding SourceProperty="Data" Expression="text" />
                                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="text.isRequired()" />
                                                    <Binding SourceProperty="Caption" Expression="text.caption()" />
                                                  </Bindings>
                                                  <CssClass>
                                                    <CssClassConditional>
                                                      <ClassName value="{theme}-textbox" />
                                                      <IsThemedStyle value="True" />
                                                    </CssClassConditional>
                                                  </CssClass>
                                                </TextBox>
                                              </Children>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-panel" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </Panel>
                                          </Content>
                                          <Bindings>
                                            <Binding SourceProperty="Data" Expression="form.Model.Consignment.AdditionalInformation" />
                                            <Binding SourceProperty="Index" Expression="form.modelState._index_additionalInformation" />
                                          </Bindings>
                                        </PagingRepeater>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel-main" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                        <GroupBox>
                          <Name value="eventHistory_pnl" />
                          <Caption value="Event history" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Content>
                            <DataTable>
                              <Name value="history_tbl" />
                              <Bindings>
                                <Binding SourceProperty="DataItems" Expression="form.historyVersions.Version" />
                              </Bindings>
                              <Columns>
                                <DataColumn>
                                  <Name value="GUIDVersion_col" />
                                  <Caption value="GUID version _ col" />
                                  <Content>
                                    <Label>
                                      <Name value="label1" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="GUIDVersion" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-label" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Label>
                                  </Content>
                                  <HeaderCssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-datacolumn" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </HeaderCssClass>
                                </DataColumn>
                                <DataColumn>
                                  <Name value="versionReason_col" />
                                  <Caption value="Version reason _ col" />
                                  <Content>
                                    <Label>
                                      <Name value="label2" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="versionReason" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-label" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Label>
                                  </Content>
                                  <HeaderCssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-datacolumn" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </HeaderCssClass>
                                </DataColumn>
                                <DataColumn>
                                  <Name value="versionTimestamp_col" />
                                  <Caption value="Version timestamp _ col" />
                                  <Content>
                                    <Label>
                                      <Name value="label3" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="versionTimestamp" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-label" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Label>
                                  </Content>
                                  <HeaderCssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-datacolumn" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </HeaderCssClass>
                                </DataColumn>
                                <DataColumn>
                                  <Name value="ctrl_col" />
                                  <Caption value="Ctrl _ col" />
                                  <Content>
                                    <Panel>
                                      <Name value="panel91" />
                                      <Orientation value="Horizontal" />
                                      <Children>
                                        <Button>
                                          <Name value="button1" />
                                          <Caption value="Detail" />
                                          <Panel.Height value="#" />
                                          <Panel.Width value="150px" />
                                          <OnClick>
                                            <ActionEvent ReferencedAction="~handler_button1_OnClick" />
                                          </OnClick>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-button" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Button>
                                      </Children>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-panel" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Panel>
                                  </Content>
                                  <HeaderCssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-datacolumn" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </HeaderCssClass>
                                </DataColumn>
                              </Columns>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-datatable" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </DataTable>
                          </Content>
                          <Bindings>
                            <Binding SourceProperty="IsVisible" Expression="form.panelsVisibility.isEventHistoryVisible" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-groupbox" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </GroupBox>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel-half" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Attribute>
          <Name value="mode" />
          <Caption value="Mode" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <MetaType reference="+MetaTypes.declarationFormMode" />
        </Attribute>
        <Attribute>
          <Name value="GUID" />
          <Caption value="GUID" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="inputDataJSON" />
          <Caption value="Input data JSON" />
          <DataContextParameter.IsInput value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="Model" />
          <Caption value="Model" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_Model_OnUserChange" />
          </OnUserChange>
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.DeclarationHeader" />
            </Include>
            <Attribute>
              <Name value="_decisiveDate" />
              <Caption value="_ decisive date" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="DateTime" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_FallbackProcedureEnabled" />
              <Caption value="_ fallback procedure enabled" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.TransitOperation.fallbackProcedure)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_TIRRequired" />
              <Caption value="_ TIR required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.TransitOperation.declarationType.Code = "TIR")]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_reducedDatasetIndicatorNull" />
              <Caption value="_ reduced dataset indicator null" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.TransitOperation.declarationType.Code = "TIR") ? form.Model.TransitOperation.reducedDatasetIndicator = false : false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_limitDateRequired" />
              <Caption value="_ limit date required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.Authorisation.exists(current.type.Code = "C521"))]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_additionalDeclarationTypeRequired" />
              <Caption value="_ additional declaration type required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.model.TransitOperation.additionalDeclarationType.Code = "D")]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_inlandModeOfTransportOptional" />
              <Caption value="_ inland mode of transport optional" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.TransitOperation.reducedDatasetIndicator = true)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_amountToBeCoveredRequired" />
              <Caption value="_ amount to be covered required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate > globals.serverConfig.TPendDate)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_additionalIdentifierRequired" />
              <Caption value="_ additional identifier required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model.Consignment.LocationOfGoods.EconomicOperator.identificationNumber.hasValue()) OR
(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue())
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_conveyanceReferenceNumberRequired" />
              <Caption value="_ conveyance reference number required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(toInt(form.Model.TransitOperation.security.Code) in [1,3]) AND
(form.Model.Consignment.modeOfTransportAtTheBorder.Code = 4)
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_countryOfDispatchEnabled" />
              <Caption value="_ country of dispatch enabled" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.TransitOperation.declarationType.Code = "TIR")]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_countyOfDispatchPresent" />
              <Caption value="_ county of dispatch present" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model.Consignment.countryOfDispatch.hasValue())]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_typeOfIdentificationRequiredB1838" />
              <Caption value="_ type of identification required B 1838" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate <= globals.serverConfig.TPendDate) ?

(form.Model.Consignment.ActiveBorderTransportMeans.nationality.hasValue() OR isTrue(form.Model.Consignment.modeOfTransportAtTheBorder.Code = 2)) : false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_typeOfIdentificationRequiredC0011" />
              <Caption value="_ type of identification required C 0011" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate > globals.serverConfig.TPendDate) ?

(form.Model.Consignment.ActiveBorderTransportMeans.nationality.hasValue() OR isTrue(form.Model.Consignment.modeOfTransportAtTheBorder.Code in [1,3])) : false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_typeOfIdentificationRequired" />
              <Caption value="_ type of identification required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Model._typeOfIdentificationRequiredB1838 OR form.Model._typeOfIdentificationRequiredC0011]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_isPostcodeBased" />
              <Caption value="_ is postcode based" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_AddressRequiredEnabled" />
              <Caption value="_ log _ address required enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_AddressRequiredRequired" />
              <Caption value="_ log _ address required required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_authorisationNumberEnabled" />
              <Caption value="_ log _ authorisation number enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_authorisationNumberRequired" />
              <Caption value="_ log _ authorisation number required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_CustomsOfficeEnabled" />
              <Caption value="_ log _ customs office enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_CustomsOfficeRequired" />
              <Caption value="_ log _ customs office required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_GNSSEnabled" />
              <Caption value="_ log _ GNSS enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_GNSSRequired" />
              <Caption value="_ log _ GNSS required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_EconomicOperatorEnabled" />
              <Caption value="_ log _ economic operator enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_EconomicOperatorRequired" />
              <Caption value="_ log _ economic operator required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_ContactPersonEnabled" />
              <Caption value="_ log _ contact person enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_ContactPersonRequired" />
              <Caption value="_ log _ contact person required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_AdressTEnabled" />
              <Caption value="_ log _ adress T enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_AdressTRequired" />
              <Caption value="_ log _ adress T required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_unxlocodeEnabled" />
              <Caption value="_ log _ unxlocode enabled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_unxlocodeRequired" />
              <Caption value="_ log _ unxlocode required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isMSCountry" />
              <Caption value="_ is MS country" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isCountryCodeCTC" />
              <Caption value="_ is country code CTC" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isArrivalDateRequired" />
              <Caption value="_ is arrival date required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isPostcodeBasedConsignor" />
              <Caption value="_ is postcode based consignor" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isPostcodeBasedConsignee" />
              <Caption value="_ is postcode based consignee" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isPostcodeBasedIncident" />
              <Caption value="_ is postcode based incident" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isCountryInCL010CODeparture" />
              <Caption value="_ is country in CL 010 CO departure" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isGuaranteeTypeCorrect" />
              <Caption value="_ is guarantee type correct" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_GRNRequired" />
              <Caption value="_ GRN required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_consigneeIdentificationNumberRequired" />
              <Caption value="_ consignee identification number required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.Model._decisiveDate >= globals.serverConfig.TPendDate) ? true : false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_TotalValueOfGoodsVisibled" />
              <Caption value="_ total value of goods visibled" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_Log_LastSelectedType" />
              <Caption value="_ log _ last selected type" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_guaranteeTypeCantBe5" />
              <Caption value="_ guarantee type cant be 5" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isCountryInCL010CODestination" />
              <Caption value="_ is country in CL 010 CO destination" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isModeOfTransportAtTheBorderRequired" />
              <Caption value="_ is mode of transport at the border required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_isPostcodeBasedLocationOfGoods" />
              <Caption value="_ is postcode based location of goods" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isLocationOfGoodsPostcodeRequired" />
              <Caption value="_ is location of goods postcode required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Model._Log_AddressRequiredRequired OR form.Model._isPostcodeBasedLocationOfGoods]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_isHouseNumberRequired" />
              <Caption value="_ is house number required" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isHouseNumberAddressTRequired" />
              <Caption value="_ is house number address T required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Model._Log_AdressTRequired OR form.Model._isHouseNumberRequired]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isActiveBorderTransportNationalityRequiredB1850" />
              <Caption value="_ is active border transport nationality required B 1850" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate <= globals.serverConfig.TPendDate) ?
(form.Model.Consignment.modeOfTransportAtTheBorder.Code in [2,5,7] ?
false : true
)
: false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isActiveBorderTransportNationalityRequiredC0010" />
              <Caption value="_ is active border transport nationality required C 0010" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate > globals.serverConfig.TPendDate) ?
((form.Model.Consignment.modeOfTransportAtTheBorder.hasValue()) AND NOT (form.Model.Consignment.modeOfTransportAtTheBorder.code in [5,7])) ?
true : false
: false]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isActiveBorderTransportNationalityRequired" />
              <Caption value="_ is active border transport nationality required" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.Model._isActiveBorderTransportNationalityRequiredB1850) OR (form.Model._isActiveBorderTransportNationalityRequiredC0010)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_declarationTypeR0911" />
              <Caption value="_ declaration type R 0911" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Computed>
              <Name value="_isArrivalMode" />
              <Caption value="arrival buttons visible" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.mode = enums.declarationFormMode.arrival]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Computed>
              <Name value="_isSaveButtonVisible" />
              <Caption value="_ is save button visible" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[(form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.edit) OR (form.mode = enums.declarationFormMode.continueFilling)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </Expression>
            </Computed>
            <Attribute>
              <Name value="_isSavePartiallyVisible" />
              <Caption value="_ is save partially visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Complex>
          <Name value="panelsVisibility" />
          <Caption value="Panels visibility" />
          <Children>
            <Attribute>
              <Name value="isTransitOperationHeaderVisible" />
              <Caption value="Is transit operation header visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isAuthorisationVisible" />
              <Caption value="Is authorisation visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isCustomsOfficeVisible" />
              <Caption value="Is customs office visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isGuaranteeVisible" />
              <Caption value="Is guarantee visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentVisible" />
              <Caption value="Is consignment visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEntitiesVisible" />
              <Caption value="Is entities visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEventHistoryVisible" />
              <Caption value="Is event history visible" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Complex>
          <Name value="modelState" />
          <Caption value="Model state" />
          <Children>
            <Attribute>
              <Name value="_index_additionalSupplyChainActor" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_transportEquipment" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_departureTransportMeans" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_countryOfRoutingOfConsignment" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_previousDocument" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_supportingDocument" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_transportDocument" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_additionalReference" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_additionalInformation" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_guarantee" />
              <Caption value="1" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_customsOfficeOfTransit" />
              <Caption value="_ index _ customs office of transit" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_customsOfficeOfExitTransit" />
              <Caption value="_ index _ customs office of exit transit" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_authorisation" />
              <Caption value="_ index _ authorisation" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_guaranteeReference" />
              <Caption value="_ index _ guarantee reference" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_seal" />
              <Caption value="_ index _ seal" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_goodsReference" />
              <Caption value="_ index _ goods reference" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_customsOfficeOfExitTransitActual" />
              <Caption value="_ index _ customs office of exit transit actual" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="_index_customsOfficeOfTransitActual" />
              <Caption value="_ index _ customs office of transit actual" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Attribute>
          <Name value="errorSourceComponent" />
          <Caption value="Error source component" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="errorPointer" />
          <Caption value="Error pointer" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="navTree" />
          <Caption value="Nav tree" />
          <Children>
            <Attribute>
              <Name value="indexConsignmentItems" />
              <Caption value="Index consignment items" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="indexHouseConsignments" />
              <Caption value="Index house consignments" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Integer" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsItemActive" />
              <Caption value="Is consignment items item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentItemsActive" />
              <Caption value="Is consignment items active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsItemActive" />
              <Caption value="Is house consignments item active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isHouseConsignmentsActive" />
              <Caption value="Is house consignments active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isConsignmentActive" />
              <Caption value="Is consignment active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isGuaranteeActive" />
              <Caption value="Is guarantee active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTradersActive" />
              <Caption value="Is traders active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isCustomsOfficesActive" />
              <Caption value="Is customs offices active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isTransitOperationActive" />
              <Caption value="Is transit operation active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Attribute>
              <Name value="isEventHistoryActive" />
              <Caption value="Is event history active" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
            <Collection>
              <Name value="HouseConsignment" />
              <Caption value="House consignment" />
              <Children>
                <Attribute>
                  <Name value="hcIndex" />
                  <Caption value="Hc index" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Collection>
                  <Name value="ConsignmentItem" />
                  <Caption value="Consignment item" />
                  <Children>
                    <Attribute>
                      <Name value="ciIndex" />
                      <Caption value="Ci index" />
                      <DeclaredType>
                        <AttributeType>
                          <BaseType value="Integer" />
                        </AttributeType>
                      </DeclaredType>
                    </Attribute>
                    <Computed>
                      <Name value="_caption" />
                      <Caption value="_ caption" />
                      <Expression IsValid="True">
                        <ExpressionText><![CDATA["Item " + tostring(ciIndex)]]></ExpressionText>
                        <ResultType>
                          <BaseType value="String" />
                        </ResultType>
                      </Expression>
                    </Computed>
                  </Children>
                </Collection>
                <Computed>
                  <Name value="_caption" />
                  <Caption value="_ caption" />
                  <Expression IsValid="True">
                    <ExpressionText><![CDATA["House consignment " + tostring(hcIndex)]]></ExpressionText>
                    <ResultType>
                      <BaseType value="String" />
                    </ResultType>
                  </Expression>
                </Computed>
              </Children>
            </Collection>
            <Computed>
              <Name value="customsOfficesErrCount" />
              <Caption value="Customs offices err count" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[form.Model.CustomsOfficeOfDeparture.validationErrorsCount() + form.Model.CustomsOfficeOfDestinationDeclared.validationErrorsCount()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Complex>
        <Complex>
          <Name value="incompleteModel" />
          <Caption value="Incomplete model" />
          <Children>
            <Include>
              <Include reference="/(Model.1119011d69cd45d181eaad70856a363f)+DataEntities.FBSaveIncomplete" />
            </Include>
          </Children>
        </Complex>
        <Complex>
          <Name value="incompleteResponse" />
          <Caption value="Incomplete response" />
        </Complex>
        <Complex>
          <Name value="historyVersions" />
          <Caption value="History versions" />
          <Children>
            <Collection>
              <Name value="Version" />
              <Caption value="Version" />
              <Children>
                <Attribute>
                  <Name value="GUIDVersion" />
                  <Caption value="GUID version" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="versionReason" />
                  <Caption value="Version reason" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="versionTimestamp" />
                  <Caption value="Version timestamp" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
          </Children>
        </Complex>
      </Children>
      <Modifiers>
        <Modifier>
          <Name value="modifier_29E48619_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfTransitDeclared.referenceNumber" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_29E48619_referenceNumber_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="R0906">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0906"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[substring(form.Model.CustomsOfficeOfDestinationDeclared.referenceNumber.Code, 1, 2) = "AD" ?
(substring(this.referenceNumber.Code, 1, 2) = "AD") : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_1FEC0D93_guaranteeType" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.guaranteeType" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_1FEC0D93_guaranteeType_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="R0900">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0900"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isGuaranteeTypeCorrect.hasValue() ? isTrue(form.Model._isGuaranteeTypeCorrect) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="NR154">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["NR154"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._guaranteeTypeCantBe5.hasValue() ? form.Model._guaranteeTypeCantBe5 : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_93A79E11_GRN" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.GRN" />
          <Validators>
            <Validator Name="C0086">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0086"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._GRNRequired.hasValue() ? form.Model._GRNRequired = this.GRN.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_17461AC1_currency" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.currency" />
        </Modifier>
        <Modifier>
          <Name value="modifier_A56F467A_grossMass" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.grossMass" />
          <Validators>
            <Validator Name="R0994">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0994"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="E1109">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1109"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.grossMass.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(toString(this.grossMass)), "^[A-Z0-9]{0,12}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_27322AB0_name" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.HolderOfTheTransitProcedure.name" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.HolderOfTheTransitProcedure.name.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.HolderOfTheTransitProcedure.name), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_5C077A4E_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.HolderOfTheTransitProcedure.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.HolderOfTheTransitProcedure.Address.streetAndNumber.hasValue() ?
isTrue((form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.HolderOfTheTransitProcedure.Address.streetAndNumber), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_A0409AE8_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignee.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignor.Address.streetAndNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignor.Address.streetAndNumber), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_AEA4AEAB_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignor.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignor.Address.streetAndNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignor.Address.streetAndNumber), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_34E6F5E7_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignor.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignor.Address.postcode.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignor.Address.postcode), "^[A-Z0-9]{0,9}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0505">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0505"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isPostcodeBasedConsignor ? this.postcode.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_98276674_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignee.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignee.Address.postcode.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignee.Address.postcode), "^[A-Z0-9]{0,9}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0505">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0505"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isPostcodeBasedConsignee ? this.postcode.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_37E6750A_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.HolderOfTheTransitProcedure.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.HolderOfTheTransitProcedure.Address.postcode.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.HolderOfTheTransitProcedure.Address.postcode), "^[A-Z0-9]{0,9}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0505">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0505"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isPostcodeBased.hasValue() ? (form.Model._isPostcodeBased ? this.postcode.hasValue() : true) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_25442729_numberOfSeals" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.TransportEquipment.numberOfSeals" />
          <Validators>
            <Validator Name="R0106">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0106"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
this.numberOfSeals = this.Seal.max(current.sequenceNumber)
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_AA98EB9B_accessCode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.accessCode" />
          <Validators>
            <Validator Name="E1118">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1118"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
this.accessCode.hasValue() ? ValidateAgainstRegularExpression(toUpper(this.accessCode), "^[A-Z0-9]{0,4}$") : true
)]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0086">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0086"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._GRNRequired.hasValue() ? form.Model._GRNRequired = this.accessCode.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_C8526934_amountToBeCovered" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.amountToBeCovered" />
          <Validators>
            <Validator Name="B2101">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["B2101"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._decisiveDate > globals.serverConfig.TPendDate) ?
this.amountToBeCovered.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_64FB9773_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_0ADEB58F_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.LocationOfGoods.Address.postcode), "^[A-Z0-9]{0,9}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0505">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0505"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isLocationOfGoodsPostcodeRequired ? this.postcode.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_1A5A38E4_typeOfIdentification" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.ActiveBorderTransportMeans.typeOfIdentification" />
          <Validators>
            <Validator Name="C0011">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0011"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._typeOfIdentificationRequiredC0011 ? (this.typeOfIdentification.Code.hasValue() AND this.identificationNumber.hasValue()) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="B1838">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["B1838"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._typeOfIdentificationRequiredB1838 ? (this.typeOfIdentification.Code.hasValue() AND this.identificationNumber.hasValue()) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_BB872B1C_identificationNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.ActiveBorderTransportMeans.identificationNumber" />
          <Validators>
            <Validator Name="C0011">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0011"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._typeOfIdentificationRequiredC0011 ? (this.typeOfIdentification.Code.hasValue() AND this.identificationNumber.hasValue()) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="E1113">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1113"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.identificationNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.identificationNumber), "^[A-Z0-9]{0,27}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="B1838">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["B1838"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._typeOfIdentificationRequiredB1838 ? (this.typeOfIdentification.Code.hasValue() AND this.identificationNumber.hasValue()) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_E9974328_conveyanceReferenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.ActiveBorderTransportMeans.conveyanceReferenceNumber" />
          <Validators>
            <Validator Name="B2200">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["B2200"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.conveyanceReferenceNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.conveyanceReferenceNumber), "^[A-Z0-9]{0,17}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.ActiveBorderTransportMeans.conveyanceReferenceNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.ActiveBorderTransportMeans.conveyanceReferenceNumber), "^[A-Z0-9]{0,17}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_BC12372B_location" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.PlaceOfLoading.location" />
          <Validators>
            <Validator Name="E1114">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1114"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.location.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.location), "^[A-Z0-9]{0,17}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_6AD7BAE0_identificationNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.DepartureTransportMeans.identificationNumber" />
          <Validators>
            <Validator Name="E1103">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1103"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[this.identificationNumber.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(this.identificationNumber), "^[A-Z0-9]{0,27}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_9148BC5F_nationality" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.ActiveBorderTransportMeans.nationality" />
          <Validators>
            <Validator Name="B1850">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["B1850"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isActiveBorderTransportNationalityRequiredB1850 ? this.nationality.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="C0010">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0010"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isActiveBorderTransportNationalityRequiredC0010 ?
this.nationality.hasValue() :
this.owner().modeOfTransportAtTheBorder.isEmpty() ? true :
this.owner().modeOfTransportAtTheBorder.Code in [5,7] ? false : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_1D30F499_qualifierOfIdentification" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.qualifierOfIdentification" />
          <OnChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_1D30F499_qualifierOfIdentification_OnChange" />
          </OnChange>
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_1D30F499_qualifierOfIdentification_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_18E2EE34_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignor.Address.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_18E2EE34_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_21CB0751_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.HolderOfTheTransitProcedure.Address.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_21CB0751_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_1B38EC37_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignee.Address.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_1B38EC37_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_5702BE6C_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.Address.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_5702BE6C_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_9D50BD6C_Seal" />
          <SourcePath value="Model.Consignment.TransportEquipment.Seal" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_3A76C6CD_name" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignor.name" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignor.name.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignor.name), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_A38181C6_name" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Consignee.name" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.Consignee.name.hasValue() ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
ValidateAgainstRegularExpression(toUpper(form.Model.Consignment.Consignee.name), "^[A-Z0-9]{0,35}$")
) : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_31C18D0A_streetAndNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.Guarantor.Address.streetAndNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => x.Guarantor.Address.streetAndNumber.hasValue())) ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => ValidateAgainstRegularExpression(toUpper(x.Guarantor.Address.streetAndNumber), "^[A-Z0-9]{0,35}$"))))
: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_E11DBB84_name" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.Guarantor.name" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => x.Guarantor.name.hasValue())) ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => ValidateAgainstRegularExpression(toUpper(x.Guarantor.name), "^[A-Z0-9]{0,35}$"))))
: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_D5D914F4_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.TransportDocument.referenceNumber" />
          <Validators>
            <Validator Name="E1104">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1104"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Consignment.TransportDocument.exists(current.referenceNumber.hasValue())? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
form.Model.Consignment.TransportDocument.exists(ValidateAgainstRegularExpression(toUpper(Current.referenceNumber), "^[A-Z0-9]{0,35}$")))
: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_2AB3708C_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfDestinationDeclared.referenceNumber" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_2AB3708C_referenceNumber_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="R0904">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0904"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isMSCountry.hasValue() ? form.Model._isMSCountry : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0905">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0905"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isCountryCodeCTC.hasValue() ? form.Model._isCountryCodeCTC : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
            <Validator Name="R0901">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0901"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isCountryInCL010CODestination.hasValue() ? form.Model._isCountryInCL010CODestination : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_7636E8BE_postcode" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Guarantee.GuaranteeReference.Guarantor.Address.postcode" />
          <Validators>
            <Validator Name="E1102">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["E1102"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => x.Guarantor.Address.postcode.hasValue())) ? 
isTrue(
(form.Model._decisiveDate <= globals.serverConfig.TPendDate) AND
form.Model.Guarantee.exists(current.GuaranteeReference.exists(var x => ValidateAgainstRegularExpression(toUpper(x.Guarantor.Address.postcode), "^[A-Z0-9]{0,9}$"))))
: true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_8320A3CF_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.Incident.Location.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_8320A3CF_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_6B08AA5A_referenceNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfDeparture.referenceNumber" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_6B08AA5A_referenceNumber_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="R0901">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0901"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isCountryInCL010CODeparture.hasValue() ? form.Model._isCountryInCL010CODeparture : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_45BD3404_arrivalDateAndTimeEstimated" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfTransitDeclared.arrivalDateAndTimeEstimated" />
          <Validators>
            <Validator Name="C0598">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0598"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isArrivalDateRequired ? this.arrivalDateAndTimeEstimated.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_C7972913_Authorisation" />
          <SourcePath value="Model.Authorisation" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_9A40670F_CustomsOfficeOfTransitDeclared" />
          <SourcePath value="Model.CustomsOfficeOfTransitDeclared" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_C7EAA26C_CustomsOfficeOfExitForTransitDeclared" />
          <SourcePath value="Model.CustomsOfficeOfExitForTransitDeclared" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_E94E2FE2_AdditionalSupplyChainActor" />
          <SourcePath value="Model.Consignment.AdditionalSupplyChainActor" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_0B7CC915_TransportEquipment" />
          <SourcePath value="Model.Consignment.TransportEquipment" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_3813370E_GoodsReference" />
          <SourcePath value="Model.Consignment.TransportEquipment.GoodsReference" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_D50CEA9B_DepartureTransportMeans" />
          <SourcePath value="Model.Consignment.DepartureTransportMeans" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_DA10B473_CountryOfRoutingOfConsignment" />
          <SourcePath value="Model.Consignment.CountryOfRoutingOfConsignment" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_8158584A_PreviousDocument" />
          <SourcePath value="Model.Consignment.PreviousDocument" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_606C8882_SupportingDocument" />
          <SourcePath value="Model.Consignment.SupportingDocument" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_B7BAD48E_TransportDocument" />
          <SourcePath value="Model.Consignment.TransportDocument" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_01FCE6FC_AdditionalReference" />
          <SourcePath value="Model.Consignment.AdditionalReference" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_7373615D_AdditionalInformation" />
          <SourcePath value="Model.Consignment.AdditionalInformation" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_46726A60_Incident" />
          <SourcePath value="Model.Consignment.Incident" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_781B72BD_TransportEquipment" />
          <SourcePath value="Model.Consignment.Incident.TransportEquipment" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_81E56948_Seal" />
          <SourcePath value="Model.Consignment.Incident.TransportEquipment.Seal" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_7C746C52_GoodsReference" />
          <SourcePath value="Model.Consignment.Incident.TransportEquipment.GoodsReference" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_C03FCA81_CustomsOfficeOfTransitActual" />
          <SourcePath value="Model.CustomsOfficeOfTransitActual" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_5B484EE0_CustomsOfficeOfExitForTransitActual" />
          <SourcePath value="Model.CustomsOfficeOfExitForTransitActual" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_870333B5_Country" />
          <SourcePath value="Model.Country" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_D9C278CD_Unavailability" />
          <SourcePath value="Model.Country.Action.Unavailability" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_F1D4899B_SystemApplicability" />
          <SourcePath value="Model.SendingCountry.SystemApplicability" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_E13A63CC_StatisticalCharacteristics" />
          <SourcePath value="Model.SendingCountry.SystemApplicability.StatisticalCharacteristics" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_0235E9E2_SeriesElements" />
          <SourcePath value="Model.SendingCountry.SystemApplicability.StatisticalCharacteristics.SeriesElements" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_3B67E2CD_RequestedInformation" />
          <SourcePath value="Model.RequestedInformation" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_7AB9AACE_ResponseInformation" />
          <SourcePath value="Model.ResponseInformation" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_3CCEC065_RiskAnalysis" />
          <SourcePath value="Model.RiskAnalysisIdentification.RiskAnalysis" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_745C27F3_RiskAnalysisResult" />
          <SourcePath value="Model.RiskAnalysisIdentification.RiskAnalysis.RiskAnalysisResult" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_067F2D25_modeOfTransportAtTheBorder" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.modeOfTransportAtTheBorder" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_067F2D25_modeOfTransportAtTheBorder_OnUserChange" />
          </OnUserChange>
          <Validators>
            <Validator Name="C0029">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0029"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isModeOfTransportAtTheBorderRequired ? this.modeOfTransportAtTheBorder.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_C3195251_houseNumber" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.AddressT.houseNumber" />
          <Validators>
            <Validator Name="C0382">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0382"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._isHouseNumberRequired ? this.houseNumber.hasValue() : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_6E7F2D48_country" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.LocationOfGoods.AddressT.country" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_6E7F2D48_country_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_8F980339_countryOfDispatch" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.Consignment.countryOfDispatch" />
          <Validators>
            <Validator Name="C0909">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["C0909"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[form.Model._countryOfDispatchEnabled ? true : form.Model.Consignment.countryOfDispatch.isEmpty()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_1168B515_declarationType" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.TransitOperation.declarationType" />
          <Validators>
            <Validator Name="R0911">
              <ErrorMessage IsValid="True">
                <ExpressionText><![CDATA["R0911"]]></ExpressionText>
                <ResultType>
                  <BaseType value="String" />
                </ResultType>
              </ErrorMessage>
              <IsValid IsValid="True">
                <ExpressionText><![CDATA[isTrue(form.Model._declarationTypeR0911) ? this.declarationType.Code in ["T2","T2F"] : true]]></ExpressionText>
                <ResultType>
                  <BaseType value="Bool" />
                </ResultType>
              </IsValid>
            </Validator>
          </Validators>
        </Modifier>
        <Modifier>
          <Name value="modifier_7D6A57D8_CustomsOfficeOfDeparture" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfDeparture" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_7D6A57D8_CustomsOfficeOfDeparture_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_1DC25412_CustomsOfficeOfDestinationDeclared" />
          <ShowAsChanges value="True" />
          <SourcePath value="Model.CustomsOfficeOfDestinationDeclared" />
          <OnUserChange>
            <ActionEvent ReferencedAction="+UiParts.Header.handler_modifier_1DC25412_CustomsOfficeOfDestinationDeclared_OnUserChange" />
          </OnUserChange>
        </Modifier>
        <Modifier>
          <Name value="modifier_4B0806B7_Guarantee" />
          <SourcePath value="Model.Guarantee" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
        <Modifier>
          <Name value="modifier_3A6C21B0_GuaranteeReference" />
          <SourcePath value="Model.Guarantee.GuaranteeReference" />
          <Children>
            <Computed>
              <Name value="sequenceNumber" />
              <Caption value="Sequence number" />
              <Expression IsValid="True">
                <ExpressionText><![CDATA[this.index()]]></ExpressionText>
                <ResultType>
                  <BaseType value="Integer" />
                </ResultType>
              </Expression>
            </Computed>
          </Children>
        </Modifier>
      </Modifiers>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~init" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="init" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

if globals.loginResponse.isEmpty() then
	actions.authentication()
endIf

actions.setCodeListDate()

var goToHomeFormResult = form.actions.tryLoadingData() // navigation still relies on mock DATA!!!

if goToHomeFormResult then
	//move the user now to home
	form.actions.clearUrlGoToHomeForm()
else	
	//proceed with form built
	form.actions.setUrlDeepLink()

	actions.setUserModeInGui(form.mode.enumValue())
	
	//hide sticky bottom menu on master.form
	//globals.isExpandedCollapsibleStickyPnl = false
	form.actions.setPanelVisibilites()
		
	// Reset temporary panel
	globals.activePanel = ""
	// TODO: based on mode this will be either current datetime or some date from transit
	form.Model._decisiveDate = getDateTime()
	
	form.actions.initNavigationTree()	

endIf

globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUrlDeepLink" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// edit URL
var url = apiobjects.urlRouter.findFormUrl(navigation.main.Header.fullName)

if (form.mode.hasValue()) then
	url.addString("mode", form.mode.enumValue())
endif

if (form.GUID.hasValue()) then
	url.addString("GUID", form.GUID)
endif

url.updatePageUrl()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="tryLoadingData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False

var mockGuid = "33107a15-395e-4205-849e-1b5bde10035f"

if apiobjects.transitDeclaration.isEmpty() then
	// navigation still relies on mock DATA!!!
	if form.mode = enums.declarationFormMode.create then
		form.actions.emptyTDthenInitNewEmptyTD()
		form.actions.setUpdefaultVariables()
	else
		if form.mode = enums.declarationFormMode.edit then
			result = form.actions.emptyTDthenInitiateExistingTD()
		else
			if (form.mode = enums.declarationFormMode.arrival) then
				form.actions.emptyTDwithInputDataJSON()		
			else
				if form.mode = enums.declarationFormMode.continueFilling then
					form.actions.emptyTDthenInitiateExistingIncompleteTD()
				else
					result = True
				endif
			endif
		endif
	endif
else
	if ((form.mode = enums.declarationFormMode.create) and form.GUID.isEmpty()) OR
	   ((form.mode = enums.declarationFormMode.edit) and (form.GUID = mockGuid)) then
		form.actions.fullTDthenGetDatafromTD()
		form.Model._isSavePartiallyVisible = true
	else
		if ((form.mode = enums.declarationFormMode.edit) and (form.GUID.hasValue())) OR
		   ((form.mode = enums.declarationFormMode.arrival) and (form.GUID.hasValue())) OR
		   ((form.mode = enums.declarationFormMode.continueFilling) and (form.GUID.hasValue())) then
			form.Model.fromJson(apiobjects.transitDeclaration.getHeader())	
			//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
			/*
			form.actions.setSavePartiallyVisibility()
			*/
			form.Model._isSavePartiallyVisible = true
		else
			
			/*FIX ME - Scenario form.mode has false enum value
			apiobjects.transitDeclaration.clear()
			result = True*/
			
			// ADDED FOR GUID null BUG - SIMON SHOULD CHECK IT
			form.Model.fromJson(apiobjects.transitDeclaration.getHeader())	
			form.Model._isSavePartiallyVisible = true
			
		endif
	endIf
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveHeaderdata" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true
apiobjects.transitDeclaration.setHeader(form.Model.toJson(true))
actions.setDataChangedToFalse()
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_cancel_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.transitDeclaration.clear()
apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDthenInitNewEmptyTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// vyrábíme prázdný formulář
// TODO: lepší iniciace apiobjektu
apiobjects.transitDeclaration.create()


/*
//dummy data, at to projde
form.Model.TransitOperation.LRN = "LRN18"
form.Model.TransitOperation.fallbackProcedure = false
form.Model.TransitOperation.bindingItinerary = false
form.Model.TransitOperation.reducedDatasetIndicator = false
form.Model.Consignment.containerIndicator = true
form.Model.Consignment.grossMass = 1000000
form.Model.TransitOperation.totalValueOfGoods = 1000000
form.Model.CustomsOfficeOfDeparture.referenceNumber.Code = "ME123456"
form.Model.CustomsOfficeOfDestinationDeclared.referenceNumber.Code = "ME123450"
form.Model.CustomsOfficeOfTransitDeclared.addItem()
form.Model.CustomsOfficeOfTransitDeclared.addItem()
form.Model.HolderOfTheTransitProcedure.identificationNumber = "ME222222"
form.Model.Guarantee.addItem()
form.Model.Consignment.LocationOfGoods.UNLocode.Code = "REANN"
//GRN 20ME123450C100081
//access code 9999
//amount 1000000
*/]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDthenInitiateExistingTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = False
form.actions.getDataFromCic()
//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
/*
form.actions.setSavePartiallyVisibility()
*/
form.Model._isSavePartiallyVisible = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="fullTDthenGetDatafromTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[// TODO: lepší iniciace apiobjektu

// TODO: Udělat pořádně load dat ze serveru
var data = apiobjects.transitDeclaration.getHeader()
form.Model.fromJson(data)

//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
/*
form.actions.setSavePartiallyVisibility()
*/
form.Model._isSavePartiallyVisible = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="clearUrlGoToHomeForm" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.clearUrl()
navigation.main.DecList.go()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUpdefaultVariables" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var transitOps = form.Model.TransitOperation

transitOps.fallbackProcedure = False
TransitOps.reducedDatasetIndicator = False
transitOps.bindingItinerary = False

form.Model._isPostcodeBased = true

//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
/*
form.actions.setSavePartiallyVisibility()
*/
form.Model._isSavePartiallyVisible = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="saveHeaderDataAndSubmit" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

//docasne nastavuju amendmentTypeFlag na False, abych otestoval pruchod FB Submitu, pak probrat s Pavlem, co a jak
form.Model.TransitOperation.amendmentTypeFlag = false

apiobjects.transitDeclaration.setHeader(form.Model.toJson(true))

// Check if there isnt client validation errors
if form.Model.validationErrorsCount() = 0 then

	// Start new declaration
	if (form.mode = enums.declarationFormMode.create) OR (form.mode = enums.declarationFormMode.continueFilling) then

		form.actions.submitNewTransit()	
	
	// Save ammended declaration
	else if form.mode = enums.declarationFormMode.edit then	
	
		form.actions.submitAmendedTransit()
	endIf endIf

else
	
	// Show validation error field
	globals.globalUiState.isValidationsVisible = true
	
	// Inform user about errors
	var errorMessage = defaultString()
	var errorCount = defaultInt()
	
	errorCount = form.Model.validationErrorsCount() + globals.Errors.serverValidationErrors.count()

	if (errorCount > 1) then 
		errorMessage = "There are " + toString(errorCount) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(errorCount) + " error in the message, please fix it to continue."
	endif
	
	apiobjects.notificationsCtrl.addError(errorMessage)
	
endif

// Save changed event into var
apiobjects.urlRouter.setDataHasChanged(false)
globals.DataChanged = false

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_serverValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if length(params.errorSourceForm) > 0 then
	//actions.goToForm(params.errorSourceForm, params.errorSourceComponent, params.pointer, params.navigationTreeNode)
	else if length(params.errorSourceComponent) > 0 then
		page.focusControl(params.errorSourceComponent, params.pointer)
		// or only scroll to component
		// page.scrollTo(params.errorSourceComponent, params.pointer)
	endif
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_clientValidationSummary1_OnItemClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if length(params.errorSourceForm) > 0 then
	//actions.goToForm(params.errorSourceForm, params.errorSourceComponent, params.pointer, params.navigationTreeNode)
	else if length(params.errorSourceComponent) > 0 then
		page.focusControl(params.errorSourceComponent, params.pointer)
		// or only scroll to component
		// page.scrollTo(params.errorSourceComponent, params.pointer)
	endif
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="getDataFromCic" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
var response = apiobjects.CIC.postAsync("FBDataRequest", requestJsonString)

if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
else
		var dataReceived = response.getJsonString()
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(dataReceived)
		form.Model.fromJson(dataReceived)
		apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitNewTransit" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var response = apiobjects.CIC.postAsync("FBSubmit", apiobjects.transitDeclaration.toJson())

globals.Errors.serverValidationErrors.fromJson(response.getJsonString())

if response.isError() then

	globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
	globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
	globals.globalUiState.isValidationsVisible = true

	// Inform user about errors
	var errorMessage = defaultString()

	if (globals.Errors.serverValidationErrors.count() > 1) then 
		errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
	endif	

	apiobjects.notificationsCtrl.addError(errorMessage)
else
	apiobjects.notificationsCtrl.addSuccess("Your request was successful.")
	
	var receivedGuid = response.getJsonString()
	
	form.Model.fromJson(receivedGuid)
		
	//go to DecList
	apiobjects.urlRouter.clearUrl()
	navigation.main.DecList.go()
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitAmendedTransit" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var response = apiobjects.CIC.postAsync("FBAmend", apiobjects.transitDeclaration.toJson())

if response.isError() then

	globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
	globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
	globals.globalUiState.isValidationsVisible = true
	
	// Inform user about errors
	var errorMessage = defaultString()

	if (globals.Errors.serverValidationErrors.count() > 1) then 
		errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
	else
		errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
	endif	
	
	apiobjects.notificationsCtrl.addError(errorMessage)

else
	apiobjects.notificationsCtrl.addSuccess("Declaration was saved successfuly.")

	//go to DecList
	apiobjects.urlRouter.clearUrl()
	navigation.main.DecList.go()
	
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_toTop_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_validate_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.pageApi.scrollTo("HeaderPnl", defaultString())

/* Validators panels display toggler */
var isValidatorVisible = globals.globalUiState.isValidationsVisible

if(isValidatorVisible = true) then
	globals.globalUiState.isValidationsVisible = false
else
	globals.globalUiState.isValidationsVisible = true	
endif

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_1D30F499_qualifierOfIdentification_OnChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var qOI = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.Code

// Zetko
if(qOi = "Z") then
	form.Model._Log_AddressRequiredEnabled = true
	form.Model._Log_AddressRequiredRequired = true
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
endif

// Ixko
if(qOi = "X") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = true
	form.Model._Log_EconomicOperatorRequired = true
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()	
endif

// Ypsilon
if(qOi = "Y") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = true
	form.Model._Log_authorisationNumberRequired = true
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()	
endif

// DvojitéWé
if(qOi = "W") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = true
	form.Model._Log_GNSSRequired = true
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()	
endif

// Vé
if(qOi = "V") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = true
	form.Model._Log_CustomsOfficeRequired = true
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = false
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()	
endif

// Úúúúú
if(qOi = "U") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = true
	form.Model._Log_unxlocodeRequired = true
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = false
	form.Model._Log_AdressTRequired = false
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()	
endif

// Té
if(qOi = "T") then
	form.Model._Log_AddressRequiredEnabled = false
	form.Model._Log_AddressRequiredRequired = false
	form.Model._Log_authorisationNumberEnabled = false
	form.Model._Log_authorisationNumberRequired = false
	form.Model._Log_unxlocodeEnabled = false
	form.Model._Log_unxlocodeRequired = false
	form.Model._Log_CustomsOfficeEnabled = false
	form.Model._Log_CustomsOfficeRequired = false
	form.Model._Log_GNSSEnabled = false
	form.Model._Log_GNSSRequired = false
	form.Model._Log_EconomicOperatorEnabled = false
	form.Model._Log_EconomicOperatorRequired = false
	form.Model._Log_ContactPersonEnabled = true
	form.Model._Log_ContactPersonRequired = false
	form.Model._Log_AdressTEnabled = true
	form.Model._Log_AdressTRequired = true
	form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setPanelVisibilites" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if(globals.activePanel = "consignment") then
	form.panelsVisibility.isConsignmentVisible = true
else
	form.panelsVisibility.isConsignmentVisible = false
endif

if(globals.activePanel = "guarantee") then
	form.panelsVisibility.isGuaranteeVisible = true
else
	form.panelsVisibility.isGuaranteeVisible = false
endif

if(globals.activePanel = "traders") then
	form.panelsVisibility.isEntitiesVisible = true
else
	form.panelsVisibility.isEntitiesVisible = false
endif

if(globals.activePanel = "customsOffice") then
	form.panelsVisibility.isCustomsOfficeVisible = true
else
	form.panelsVisibility.isCustomsOfficeVisible = false
endif

if(globals.activePanel = "transitOperation") then
	form.panelsVisibility.isTransitOperationHeaderVisible = true
else
	form.panelsVisibility.isTransitOperationHeaderVisible = false
endif

if((form.panelsVisibility.isTransitOperationHeaderVisible = false AND
form.panelsVisibility.isCustomsOfficeVisible = false AND
form.panelsVisibility.isEntitiesVisible = false AND
form.panelsVisibility.isGuaranteeVisible = false AND
form.panelsVisibility.isConsignmentVisible = false) AND
(globals.activePanel = "")) then
	form.panelsVisibility.isTransitOperationHeaderVisible = true
endIf

if isTrue(form.Model.TransitOperation.declarationType.Code = "TIR") then
	form.Model._TotalValueOfGoodsVisibled = false
else
	form.Model._TotalValueOfGoodsVisibled = true
endif

form.actions.preparePanelVisibilitiesForNavigationTree()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_1D30F499_qualifierOfIdentification_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var qOI = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.Code
var cantoggle = defaultBool()
var returningLastVariable = defaultBool()

returningLastVariable = false
cantoggle = true

// Zetko
if((qOi = "Z") and (returningLastVariable = false)) then

	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif

	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then
		form.Model._Log_AddressRequiredEnabled = true
		form.Model._Log_AddressRequiredRequired = true
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif
endif

// Ixko
if((qOi = "X") and (returningLastVariable = false)) then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif

	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = true
		form.Model._Log_EconomicOperatorRequired = true
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif
		
endif

// Ypsilon
if((qOi = "Y") and (returningLastVariable = false)) then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif

	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = true
		form.Model._Log_authorisationNumberRequired = true
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif

	
endif

// DvojitéWé
if((qOi = "W") and (returningLastVariable = false)) then

	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif

	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()			
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = true
		form.Model._Log_GNSSRequired = true
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif

endif

// Vé
if((qOi = "V") and (returningLastVariable = false)) then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.ContactPerson.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif


	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()			
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.ContactPerson.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = true
		form.Model._Log_CustomsOfficeRequired = true
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = false
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif

endif

// Úúúúú
if((qOi = "U") and (returningLastVariable = false)) then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif


	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()			
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = true
		form.Model._Log_unxlocodeRequired = true
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif
	
endif

// Té
if((qOi = "T") and (returningLastVariable = false)) then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif


	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()			
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = true
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = true
		form.Model._Log_AdressTRequired = true
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()
		system.console(form.Model._Log_LastSelectedType)
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif

endif

// Té
if(qOi = "") then
	if(form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.city.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.Address.country.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.authorisationNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.UNLocode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.CustomsOffice.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.latitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.GNSS.longitude.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.EconomicOperator.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.ContactPerson.hasValue()) then cantoggle = false endif	
	if(form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.postcode.hasValue()) then cantoggle = false endif
	if(form.Model.Consignment.LocationOfGoods.AddressT.country.hasValue()) then cantoggle = false endif

	if ((cantoggle = false) and (form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.isTouched())) then
		var cantogglequestion = system.confirm("Changing this value will discard some of your informations, proceed?")
		if isTrue(cantogglequestion) then
			form.Model.Consignment.LocationOfGoods.Address.streetAndNumber.clear()
			form.Model.Consignment.LocationOfGoods.Address.postcode.clear()
			form.Model.Consignment.LocationOfGoods.Address.city.clear()
			form.Model.Consignment.LocationOfGoods.Address.country.clear()
			form.Model.Consignment.LocationOfGoods.authorisationNumber.clear()			
			form.Model.Consignment.LocationOfGoods.UNLocode.clear()
			form.Model.Consignment.LocationOfGoods.CustomsOffice.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.latitude.clear()
			form.Model.Consignment.LocationOfGoods.GNSS.longitude.clear()
			form.Model.Consignment.LocationOfGoods.EconomicOperator.clear()
			form.Model.Consignment.LocationOfGoods.ContactPerson.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.houseNumber.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.postcode.clear()
			form.Model.Consignment.LocationOfGoods.AddressT.country.clear()
			cantoggle = true
		else
			cantoggle = false
		endif
	endif

	if(cantoggle = true) then 
		form.Model._Log_AddressRequiredEnabled = false
		form.Model._Log_AddressRequiredRequired = false
		form.Model._Log_authorisationNumberEnabled = false
		form.Model._Log_authorisationNumberRequired = false
		form.Model._Log_unxlocodeEnabled = false
		form.Model._Log_unxlocodeRequired = false
		form.Model._Log_CustomsOfficeEnabled = false
		form.Model._Log_CustomsOfficeRequired = false
		form.Model._Log_GNSSEnabled = false
		form.Model._Log_GNSSRequired = false
		form.Model._Log_EconomicOperatorEnabled = false
		form.Model._Log_EconomicOperatorRequired = false
		form.Model._Log_ContactPersonEnabled = false
		form.Model._Log_ContactPersonRequired = false
		form.Model._Log_AdressTEnabled = false
		form.Model._Log_AdressTRequired = false
		form.Model._Log_LastSelectedType = form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.toJson()		
	else
		returningLastVariable = true
		form.Model.Consignment.LocationOfGoods.qualifierOfIdentification.fromJson(form.Model._Log_LastSelectedType)
	endif

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_7D6A57D8_CustomsOfficeOfDeparture_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var isCountrySM = substring(params.data.referenceNumber.Code,1,2)

if isTrue(isCountrySM = "SM") then 

	var isCountryCL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code",substring(params.data.owner().CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2), defaultDate(), true)
	
	if isCountryCL010.isFound() then
		form.Model._declarationTypeR0911 = true
	else
		form.Model._declarationTypeR0911 = false
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_1DC25412_CustomsOfficeOfDestinationDeclared_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var isCountrySM = substring(params.data.owner().CustomsOfficeOfDeparture.referenceNumber.Code,1,2)

if isTrue(isCountrySM = "SM") then 

	var isCountryCL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", substring(params.data.referenceNumber.Code,1,2), defaultDate(), true)
	
	if isCountryCL010.isFound() then
		form.Model._declarationTypeR0911 = true
	else
		form.Model._declarationTypeR0911 = false
	endif
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="preparePanelVisibilitiesForNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.navTree.isTransitOperationActive = form.panelsVisibility.isTransitOperationHeaderVisible
form.navTree.isCustomsOfficesActive = form.panelsVisibility.isCustomsOfficeVisible
form.navTree.isTradersActive = form.panelsVisibility.isEntitiesVisible
form.navTree.isGuaranteeActive = form.panelsVisibility.isGuaranteeVisible
form.navTree.isConsignmentActive = form.panelsVisibility.isConsignmentVisible

form.navTree.isHouseConsignmentsActive = false
form.navTree.isHouseConsignmentsItemActive = false
form.navTree.isConsignmentItemsActive = false
form.navTree.isConsignmentItemsItemActive = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavigationTree" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if transitDeclaration.isEmpty() then
	system.console("transitDeclaration is empty, can not get data for navigation tree")
else

	var navTreeJson = transitDeclaration.getDataForNavTree()
	form.navTree.HouseConsignment.fromJson(navTreeJson)
	
	form.apiobjects.navigationTreeController.beginSetup("navTree", defaultString())
	
	form.apiobjects.navigationTreeController.addNode("TransitOperation", "Transit operation")
	
	var offices = form.apiobjects.navigationTreeController.addNode("CustomsOffices", "Customs offices")
	// pokud potřebujeme posbírat chyby z více komplexů či kolekcí, je potřeba si udělat computed, která vrací počet chyb, a nasměrovat to na ni
	offices.showErrorsFrom("navTree/customsOfficesErrCount")
	
	form.apiobjects.navigationTreeController.addNode("Traders", "Traders")

	var guarantee = form.apiobjects.navigationTreeController.addNode("Guarantee", "Guarantee")
	// pokud můžeme zobrazit chyby přímo z určitého komplexu či kolekce, nastavíme to takhle
	guarantee.showErrorsFrom("Model/Guarantee")
	
	
	form.apiobjects.navigationTreeController.addNode("Consignment", "Consignment")
	
	var hc = form.apiobjects.navigationTreeController.addNode("HouseConsignments", "House Consignments")
	hc.connectToCollection("navTree/HouseConsignment", "_caption")
	hc.limitSubnodesAroundSelected(3)
	
	
	var ci = hc.addNode("ConsignmentItems", "Consignment items")
	ci.connectToCollection("ConsignmentItem", "_caption")
	ci.limitSubnodesAroundSelected(3)
	
	form.apiobjects.navigationTreeController.addNode("EventHistory", "Event history")

	form.apiobjects.navigationTreeController.finishSetup()
	form.actions.initNavTreeFocus()
	
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initNavTreeFocus" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[	if isTrue(form.panelsVisibility.isTransitOperationHeaderVisible) then
		form.apiobjects.navigationTreeController.focusNode("TransitOperation")
	endif
	
	if isTrue(form.panelsVisibility.isCustomsOfficeVisible) then
		form.apiobjects.navigationTreeController.focusNode("CustomsOffices")
	endif
	
	if isTrue(form.panelsVisibility.isEntitiesVisible) then
		form.apiobjects.navigationTreeController.focusNode("Traders")
	endif
	
	if isTrue(form.panelsVisibility.isGuaranteeVisible) then
		form.apiobjects.navigationTreeController.focusNode("Guarantee")
	endif
	
	if isTrue(form.panelsVisibility.isConsignmentVisible) then
		form.apiobjects.navigationTreeController.focusNode("Consignment")
	endif
	
	if isTrue(form.panelsVisibility.isEventHistoryVisible) then
		form.apiobjects.navigationTreeController.focusNode("EventHistory")
	endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_navigationTree_OnNodeActivated" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if isTrue(params.id = "HouseConsignments") then
	
	if globals.DataChanged then
		form.actions.saveHeaderdata()
	endif

	/* Navigating out from header form */
	actions.navigationToHouseConsignmentList(form.mode, form.GUID)
else	
	form.actions.clearPanelsVisibility()
	if isTrue(params.id = "TransitOperation") then
		form.panelsVisibility.isTransitOperationHeaderVisible = true
	else
		if isTrue(params.id = "CustomsOffices") then
			form.panelsVisibility.isCustomsOfficeVisible = true
		else
			if isTrue(params.id = "Traders") then	
				form.panelsVisibility.isEntitiesVisible = true
			else
				if isTrue(params.id = "Guarantee") then
					form.panelsVisibility.isGuaranteeVisible = true
				else
					if isTrue(params.id = "Consignment") then
						form.panelsVisibility.isConsignmentVisible = true
					else
						if isTrue(params.id = "EventHistory") then
							form.panelsVisibility.isEventHistoryVisible = true
						endif
					endif
				endif
			endif
		endif
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="clearPanelsVisibility" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.panelsVisibility.isAuthorisationVisible = false
form.panelsVisibility.isCustomsOfficeVisible = false
form.panelsVisibility.isGuaranteeVisible = false
form.panelsVisibility.isConsignmentVisible = false
form.panelsVisibility.isEntitiesVisible = false
form.panelsVisibility.isTransitOperationHeaderVisible = false
form.panelsVisibility.isEventHistoryVisible = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_Model_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[apiobjects.urlRouter.setDataHasChanged(true)
globals.DataChanged = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_acceptArrival_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var transitOp = "{\"TransitOperation\":"+ form.Model.TransitOperation.toJson(true) +"}"
var response = apiobjects.CIC.postAsync("FBArrivalConfirmation", transitOp)

if response.isError() then
//neco se stane
else
	if isTrue(response.getMessageType() = "BFArrivalAccepted") then
		apiobjects.notificationsCtrl.addSuccess("Arrival successfuly confirmed.")
		navigation.main.DecList.go()
	else
		apiobjects.notificationsCtrl.addError("Failed to confirm arrival.")
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDwithInputDataJSON" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.inputDataJSON.hasValue() then 
	form.Model.fromJson(form.inputDataJSON)
	apiobjects.transitDeclaration.fromJson(form.inputDataJSON)
	//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
	/*
	form.actions.setSavePartiallyVisibility()
	*/
	form.Model._isSavePartiallyVisible = true
else
	if form.GUID.hasValue() then
		form.actions.emptyTDthenInitiateExistingTD()
	endif
endif		]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_6B08AA5A_referenceNumber_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var countryCode = substring(params.data.owner().CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2)
var countryCode2 = substring(params.data.referenceNumber.Code,1,2) 

if isTrue(countryCode2 in ["AD","SM"]) then
	var countryCL553 = MSCountry_CL553.getItemByStringColumnAsync("Code", countryCode, defaultDate(), true)
	
	if isTrue(countryCL553.isFound()) then
		form.Model._isMSCountry = true
	else
		form.Model._isMSCountry = false
	endif
endif

if isTrue(form.Model.TransitOperation.declarationType.Code="TIR") then
	var countryCodeCL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryCode, defaultDate(), true)		
	var countryCode2CL010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryCode2, defaultDate(), true)
		
	if (countryCodeCL010.isFound()) AND (countryCode2CL010.isFound()) then
		form.Model._isCountryInCL010CODeparture = true
	else
		form.Model._isCountryInCL010CODeparture = false
	endif
else
	form.Model._isCountryInCL010CODeparture = true
endif

var countryCL112 = CountryCodesCTC_CL112.getItemByStringColumnAsync("Code", substring(params.data.referenceNumber.Code,1,2), defaultDate(), true)

if countryCL112.isFound() then
	if isTrue(countryCode in ["SM","AD"]) then
		form.Model._isCountryCodeCTC = true
	else
		form.Model._isCountryCodeCTC = false
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_2AB3708C_referenceNumber_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var refNo = substring(form.Model.CustomsOfficeOfDeparture.referenceNumber.Code,1,2)
var refNoDestDecl = substring(form.Model.CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2)

form.Model._isCountryCodeCTC = true
form.Model._isMSCountry = true

if(hasValue(refNo)) then
	if ((refNo="AD") OR (refNo="SM")) then
		var referenceNo = MSCountry_CL553.getItemByStringColumnAsync("Code", refNoDestDecl, defaultDate(), true)
	
		if(referenceNo.isFound()) then
			form.Model._isMSCountry = true
		else
			form.Model._isMSCountry = false
		endif
	endif
	
	var referenceNo2 = CountryCodesCTC_CL112.getItemByStringColumnAsync("Code", refNo, defaultDate(), true)

	if referenceNo2.isFound() then
		if ((refNoDestDecl = "AD") OR (refNoDestDecl = "SM")) then
			form.Model._isCountryCodeCTC = true
		else
			form.Model._isCountryCodeCTC = false
		endif
	endif
endif

if isTrue(form.Model.TransitOperation.declarationType.Code="TIR") then
	var countryCode = substring(form.Model.CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2)
	var countryCode2 = substring(form.Model.CustomsOfficeOfDeparture.referenceNumber.Code,1,2)
	system.console(countryCode+" - "+countryCode2)
	var countryCodeCodelist = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryCode, defaultDate(), true)		
	var countryCode2Codelist = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryCode2, defaultDate(), true)
		
	if (countryCodeCodelist.isFound()) AND (countryCode2Codelist.isFound()) then
		form.Model._isCountryInCL010CODestination = true
	else
		form.Model._isCountryInCL010CODestination = false
	endif
else
	form.Model._isCountryInCL010CODestination = true
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_29E48619_referenceNumber_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var refNo = substring(params.data.referenceNumber.Code,1,2)
var reference = CountryCustomsSecurityAgreementArea_CL147.getItemByStringColumnAsync("Code", refNo, defaultDate(), true)

if reference.isFound() then
	 if ((form.Model.TransitOperation.security.Code = 1) OR (form.Model.TransitOperation.security.Code = 3)) then
	 	form.Model._isArrivalDateRequired = true
	 else
	 	form.Model._isArrivalDateRequired = false
	 endif
else
	form.Model._isArrivalDateRequired = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_067F2D25_modeOfTransportAtTheBorder_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var countryDeparture = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", substring(params.data.owner().CustomsOfficeOfDeparture.referenceNumber.Code,1,2), defaultDate(), true)
form.Model._isModeOfTransportAtTheBorderRequired = false

if NOT countryDeparture.isFound() then

	if isTrue(params.data.ActiveBorderTransportMeans.typeOfIdentification.Code=20) then
		form.Model._isModeOfTransportAtTheBorderRequired = true
	endif
	
	if params.data.owner().TransitOperation.security.Code in [1,2,3] then
		form.Model._isModeOfTransportAtTheBorderRequired = true
	endif

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_18E2EE34_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = form.Model.Consignment.Consignor.Address.country.Code

if(hasValue(country)) then
	var countrycodeswithadress = CountryAddressPostcodeBased.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isPostcodeBasedConsignor = false
	else
		form.Model._isPostcodeBasedConsignor = true
	endif
else
	form.Model._isPostcodeBasedConsignor = false
endif

]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_21CB0751_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = form.Model.HolderOfTheTransitProcedure.Address.country.Code

if(hasValue(country)) then
	var countrycodeswithadress = CountryWithoutZip_CL505.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isPostcodeBased = false
	else
		form.Model._isPostcodeBased = true
	endif
else
	form.Model._isPostcodeBased = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_1B38EC37_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = form.Model.Consignment.Consignee.Address.country.Code

if(hasValue(country)) then
	var countrycodeswithadress = CountryWithoutZip_CL505.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isPostcodeBasedConsignee = false
	else
		form.Model._isPostcodeBasedConsignee = true
	endif
else
	form.Model._isPostcodeBasedConsignee = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_5702BE6C_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = form.Model.Consignment.LocationOfGoods.Address.country.Code

if(hasValue(country)) then
	var countrycodeswithadress = CountryAddressPostcodeBased.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isPostcodeBasedLocationOfGoods = false
	else
		form.Model._isPostcodeBasedLocationOfGoods = true
	endif
else
	form.Model._isPostcodeBasedLocationOfGoods = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_6E7F2D48_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var countryInCL198 = CountryAddressPostcodeOnly_CL198.getItemByStringColumnAsync(
  "Code"
, params.data.country.Code
, defaultDate()
, true
)

form.Model._isHouseNumberRequired = false

if countryInCL198.isFound() then
	form.Model._isHouseNumberRequired = false
else
	form.Model._isHouseNumberRequired = true
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_8320A3CF_country_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var country = params.data.country.Code

if(hasValue(country)) then
	var countrycodeswithadress = CountryWithoutZip_CL505.getItemByStringColumnAsync("Code", country, defaultDate(), true)

	if(countrycodeswithadress.isFound()) then
		form.Model._isPostcodeBasedIncident = false
	else
		form.Model._isPostcodeBasedIncident = true
	endif
else
	form.Model._isPostcodeBasedIncident = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_modifier_1FEC0D93_guaranteeType_OnUserChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var countryDeparture = substring(params.data.owner().CustomsOfficeOfDeparture.referenceNumber.Code,1,2)
var countryDestination = substring(params.data.owner().CustomsOfficeOfDestinationDeclared.referenceNumber.Code,1,2)

if (form.Model.TransitOperation.declarationType.Code = "TIR") then
	if params.data.guaranteeType.Code="B" then
		form.Model._isGuaranteeTypeCorrect = true
	else
		form.Model._isGuaranteeTypeCorrect = false
	endif
else
	var cl010 = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryDeparture, defaultDate(), true)
	
	if ((cl010.isFound()) or (countryDeparture="SM") or (countryDeparture="AD")) then
		var cl230 = GuaranteeTypeEUNonTIR_CL230.getItemByStringColumnAsync("Code", params.data.guaranteeType.Code, defaultDate(), true )
		if cl230.isFound() then
			form.Model._isGuaranteeTypeCorrect = true
		else
			form.Model._isGuaranteeTypeCorrect = false
		endif
	else
		var cl229 = GuaranteeTypeCTC_CL229.getItemByStringColumnAsync("Code", params.data.guaranteeType.Code, defaultDate(), true)
		if cl229.isFound() then
			form.Model._isGuaranteeTypeCorrect = true
		else
			form.Model._isGuaranteeTypeCorrect = false
		endif
	endif
	
	//NR154 Validation
	var departureEU = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryDeparture, defaultDate(), true)
	var destinationEU = CountryCodesCommunity_CL010.getItemByStringColumnAsync("Code", countryDestination, defaultDate(), true)
	
	if NOT ( (departureEU.isFound() AND destinationEU.isFound()) OR isTrue(params.data.owner().TransitOperation.declarationType.Code in ["T1ME","T2ME","ATA","SCDIM","SCDEX"])) then
		if isTrue(params.data.guaranteeType.Code = "5") then
			form.Model._guaranteeTypeCantBe5 = false
		else
			form.Model._guaranteeTypeCantBe5 = true
		endif
	endif
	
endif

//C0086 'validation'
var guaranteeType = apiobjects.GuaranteeTypeWithGRN_CL286.getItemByStringColumnAsync("Code", params.data.guaranteeType.Code, defaultDate(), true)
if guaranteeType.isFound() then
	form.Model._GRNRequired = true
else
	form.Model._GRNRequired = false
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_savePartially_btn_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[globals.busyIndicatorIsRunning = true

apiobjects.transitDeclaration.setHeader(form.Model.toJson(true))

form.actions.submitNewIncompleteData()	

// Save changed event into var
apiobjects.urlRouter.setDataHasChanged(false)
globals.DataChanged = false

// Need response from server
globals.busyIndicatorIsRunning = false]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="submitNewIncompleteData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.GUID.hasValue() then
	form.incompleteModel.GUID = form.GUID
endif

//check if incompleteModel is valid (required holder of the transit procedure and COoDep)
var checkIncompleteDataValidity = form.actions.checkIncompleteModelValidity()
if checkIncompleteDataValidity then

	form.incompleteModel.fromJson(apiobjects.transitDeclaration.toJson())
	form.incompleteModel.IncompleteData.data = toString(apiobjects.transitDeclaration.toJson())

	var response = apiobjects.CIC.postAsync("FBSaveIncomplete", form.incompleteModel.toJson(true))

	globals.Errors.serverValidationErrors.fromJson(response.getJsonString())

	if response.isError() then

		globals.Errors.serverValidationComplex.fromJson(response.extractJson("Error"))
		globals.Errors.serverValidationErrors.fromJson(globals.Errors.serverValidationComplex.MessageCheckError.toJson())
		globals.globalUiState.isValidationsVisible = true

		// Inform user about errors
		var errorMessage = defaultString()

		if (globals.Errors.serverValidationErrors.count() > 1) then 
			errorMessage = "There are " + toString(globals.Errors.serverValidationErrors.count()) + " errors in the message, please fix them to continue."
		else
			errorMessage = "There is " + toString(globals.Errors.serverValidationErrors.count()) + " error in the message, please fix it to continue."
		endif	

		apiobjects.notificationsCtrl.addError(errorMessage)
	else
		apiobjects.notificationsCtrl.addSuccess("Your request was successful.")
	
		//go to DecList
		apiobjects.urlRouter.clearUrl()
		apiobjects.transitDeclaration.clear()
		navigation.main.DecList.withInputNavTree("isClearanceInteruptedActive").go()
	endIf

endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="emptyTDthenInitiateExistingIncompleteTD" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
var response = apiobjects.CIC.postAsync("FBDataIncompleteRequest", requestJsonString)

if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")
else
		var dataReceived = response.getJsonString()
		
		//incompleteModel is used for sending FBIncompleteData
		form.incompleteModel.fromJson(dataReceived)
		
		//store data to transitDeclaration apiObject
		apiobjects.transitDeclaration.fromJson(form.incompleteModel.IncompleteData.data)
		form.Model.fromJson(transitDeclaration.getHeader())
		
		//set GUID
		form.Model.GUID = form.GUID
		apiobjects.transitDeclaration.setHeader(form.Model.toJson(true))
		
		apiobjects.notificationsCtrl.addSuccess("Successfuly received data.")

		//TODO: podle client state nastavovat savePartiallyVisible 
		/*
		form.actions.setSavePartiallyVisibility()
		*/
		form.Model._isSavePartiallyVisible = true
endIf]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setSavePartiallyVisibility" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//TODO: jak zjistit stav interrupted? podle toho nastavovat savePartiallyVisible 
/*
//misto kodu A01 doplnit ten kod, ktery odpovida stavu interrupted
if isTrue(form.Model.TransitOperation.status.code = "A01") then
	form.Model._isSavePartiallyVisible = true
else
	form.Model._isSavePartiallyVisible = true
endif
*/
form.Model._isSavePartiallyVisible = true]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_button1_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//navigation.main.Header.withGUID(params.data.)

//navigation.cseForms.SP_EditForm.withGuid(params.data.owner().GUID).withEventGUID(params.data.guid).go(enums.mode.Detail, defaultString())]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="checkIncompleteModelValidity" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = false

if form.Model.CustomsOfficeOfDeparture.referenceNumber.hasValue() then
		
	if form.Model.HolderOfTheTransitProcedure.identificationNumber.hasValue() then
		//required elements are present, we can continue		
		result = true
	else
		//HolderOfTheTransitProcedure isn't set
		notificationsCtrl.addError("Holder of the transit procedure must have an identification number.")
	endif
		
else
	//COoDep isn't set
	notificationsCtrl.addError("Customs Office of Departure must have a value.")
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
    <ActionBlock>      <Name value="loadHistoryVersions" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if(form.Model.TransitOperation.MRN.hasValue()) then
//	var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
//	var response = apiobjects.CIC.postAsync("FBHistoryRequest", requestJsonString)
	
	var response = apiobjects.CIC.postAsync("FBHistoryRequest", form.model.toJson(true))

	if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")

	else

		form.historyVersions.fromJson(response.getJsonString())
		var dataReceived = response.getJsonString()
		system.console(response.getJsonString())
	
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if(form.Model.TransitOperation.MRN.hasValue()) then
//	var requestJsonString = "{\"GUID\":\""+ form.GUID +"\"}"
//	var response = apiobjects.CIC.postAsync("FBHistoryRequest", requestJsonString)
	
	var response = apiobjects.CIC.postAsync("FBHistoryRequest", form.model.toJson(true))

	if response.isError() then
		system.console(response.getErrorMessage())
		apiobjects.notificationsCtrl.addError("Failed to load data.")

	else

		form.historyVersions.fromJson(response.getJsonString())
		var dataReceived = response.getJsonString()
		system.console(response.getJsonString())
	
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
      <ActionLangBody IsValid="True">
        <Script><![CDATA[result = false

if form.Model.CustomsOfficeOfDeparture.referenceNumber.hasValue() then
		
	if form.Model.HolderOfTheTransitProcedure.identificationNumber.hasValue() then
		//required elements are present, we can continue		
		result = true
	else
		//HolderOfTheTransitProcedure isn't set
		notificationsCtrl.addError("Holder of the transit procedure must have an identification number.")
	endif
		
else
	//COoDep isn't set
	notificationsCtrl.addError("Customs Office of Departure must have a value.")
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext>
          <Children>
            <Attribute>
              <Name value="result" />
              <Caption value="Result" />
              <DataContextParameter.IsResult value="True" />
              <DeclaredType>
                <AttributeType>
                  <BaseType value="Bool" />
                </AttributeType>
              </DeclaredType>
            </Attribute>
          </Children>
        </ActionDataContext>
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <Page identity="Page.f7aa0c151c64407daef13910dcf7b72a">
      <Name value="page" />
    </Page>
    <NavigationTreeController identity="NavigationTree.b87dd9f990504f86a481d689d499f644">
      <Name value="navigationTreeController" />
    </NavigationTreeController>
  </ApiObjects>
</Form>